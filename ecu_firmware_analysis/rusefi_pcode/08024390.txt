sp = mult_addr
r1 = ram[0x80243dc:4]
r5 = r0
call ram[0x8014580:4]
if (unique[0x11bd0:1]) goto ram[0x80243d0:4]
r3 = zext(unique[0x11eb0:1])
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80243cc:4]
r2 = zext(unique[0x11eb0:1])
tmpZR = r3 == 0x0
r3 = zext(unique[0x1a070:1])
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80243c4:4]
NG = tmpNG
OV = tmpOV
r4 = zext(unique[0x1a070:1])
OV = tmpOV
call ram[0x8014690:4]
r0 = r0 + r4
r0 = zext(unique[0x1a070:1])
return pc
OV = tmpOV
r2 = zext(unique[0x1a070:1])
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x80243d4:4]
NG = tmpNG
return pc
NG = tmpNG
return pc
NG = tmpNG
OV = tmpOV
r4 = zext(unique[0x1a070:1])
goto ram[0x80243b8:4]
r0 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x80243f2:4]
sp = mult_addr
OV = tmpOV
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x80243f8:4]
tmpZR = r0 == 0x0
return pc
tmpZR = r0 == 0x0
return pc
r3 = r1
r2 = r0
r1 = ram[0x802440c:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
tmpZR = r0 == 0x0
return pc
r0 = *[ram]unique[0x112a0:4]
sp = mult_addr + 0x4
r5 = ram[0x80244dc:4]
r4 = r0
call ram[0x8014ae0:4]
r2 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r7 == 0x0
r2 = ram[0x80244e0:4]
NG = tmpNG
OV = tmpOV
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8024464:4]
r2 = ram[0x80244e4:4]
r6 = ram[0x80244e8:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x20:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x24:4]
r0 = ram[0x80244ec:4]
r1 = zext(unique[0x12120:1])
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x80243e0:4]
OV = tmpOV
