r3 = r0
r0 = *[ram]unique[0x11420:4]
sp = mult_addr
if (unique[0x11bf0:1]) goto ram[0x8020078:4]
r4 = s1
r2 = ram[0x8020088:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8020066:4]
s1 = s0
r1 = *[ram]unique[0x11420:4]
s0 = r4
OV = tmpOV
sp = mult_addr
goto ram[0x800fac0:4]
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x802008c:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
return pc
r1 = ram[0x8020094:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
s0 = *[ram]unique[0x42b0:4]
return pc
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r2 = mult_addr
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = r0
r0 = *[ram]unique[0x11420:4]
sp = mult_addr
if (unique[0x11bf0:1]) goto ram[0x80200da:4]
r4 = s1
r2 = ram[0x80200ec:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80200c8:4]
s1 = s0
r1 = *[ram]unique[0x11420:4]
s0 = r4
OV = tmpOV
call ram[0x800fac0:4]
s0 = s0 f+ s0
return pc
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x80200f0:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
return pc
r1 = ram[0x80200f8:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
s0 = *[ram]unique[0x42b0:4]
return pc

NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r2 = mult_addr
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
mult_addr = mult_addr + 0x4
NG = tmpNG
