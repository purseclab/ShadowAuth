sp = mult_addr
r5 = ram[0x8041320:4]
r3 = *[ram]unique[0x11420:4]
r6 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x8040dd0:4]
if (unique[0x11bf0:1]) goto ram[0x8041312:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8041300:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8041300:4]
NG = tmpNG
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
goto ram[0x80412d2:4]
r4 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80412d0:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x38:4]
*[ram]unique[0x11420:4] = register[0x38:4]
call ram[0x8034370:4]
r3 = CALLOTHER 0x10a
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8041318:4]
r0 = *[ram]unique[0x11420:4]
r1 = r6
sp = mult_addr
goto ram[0x8000318:4]
tmpZR = r0 == 0x0
r2 = ram[0x8041324:4]
r1 = ram[0x8041328:4]
call ram[0x8015240:4]
r0 = ram[0x8041324:4]
call ram[0x8040b00:4]
r0 = ram[0x804132c:4]
call ram[0x8040b00:4]
r0 = ram[0x8041330:4]
call ram[0x8040b00:4]

NG = tmpNG
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
call ram[0x8040ca0:4]
call ram[0x8040dd0:4]
r3 = ram[0x8041364:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x804135a:4]
return pc
sp = mult_addr
goto ram[0x80412a0:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
call ram[0x8040dd0:4]
if (unique[0x11bf0:1]) goto ram[0x80413b6:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x80413a4:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80413a4:4]
NG = tmpNG
r1 = *[ram]unique[0x11420:4]
r3 = ram[0x80413bc:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x804138e:4]
r2 = *[ram]unique[0x11420:4]
r0 = r4
*[ram]unique[0x17820:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x30:4]
return pc
tmpZR = r0 == 0x0
r2 = ram[0x80413c0:4]
r1 = ram[0x80413c4:4]
call ram[0x8015240:4]
r0 = ram[0x80413c0:4]
call ram[0x8040b00:4]
r0 = ram[0x80413c8:4]
call ram[0x8040b00:4]
NG = tmpNG
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r7 = r0
