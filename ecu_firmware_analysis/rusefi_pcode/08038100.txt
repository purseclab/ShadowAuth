r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803811a:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x8038140:4]
r0 = *[ram]unique[0x112a0:4]
NG = tmpNG
r0 = r0 * r3
return pc
s13 = *[ram]unique[0x42b0:4]
NG = tmpNG
r2 = ram[0x803814c:4]
r0 = *[ram]unique[0x112a0:4]
tmpZR = r3 == 0x0
s14 = *[ram]unique[0x41f0:4]
s15 = s13 f/ s14
CALLOTHER 0x1, 0xa, 0xf, 0x7, cr7, cr13, cr7
r3 = s15
r0 = r0 * r3
return pc
s13 = *[ram]unique[0x42b0:4]
goto ram[0x8038120:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
NG = tmpNG
r4 = r4 + r6
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
NG = tmpNG
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x28:4]
r1 = r5
*[ram]unique[0x17820:4] = register[0x34:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x34:4]
r0 = r3
tmpZR = r2 == 0x0
call ram[0x800557c:4]
tmpZR = r2 == 0x0
r3 = r0
tmpZR = r0 == 0x0
*[ram]unique[0x17820:4] = register[0x28:4]
r1 = r5
r0 = r4
*[ram]unique[0x112a0:4] = register[0x2c:4]
tmpZR = r5 == 0x0
call ram[0x8030240:4]
*[ram]unique[0x11420:4] = register[0x34:4]
r0 = r4
return pc
NG = tmpNG
NG = tmpNG
r3 = ram[0x8038208:4]
sp = mult_addr
r4 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
