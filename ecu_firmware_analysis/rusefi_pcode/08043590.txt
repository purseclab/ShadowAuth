sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043678:4]
r4 = r0
r5 = r1
r8 = r3
r6 = r2
r10 = *[ram]unique[0x112a0:4]
NG = tmpNG
CALLOTHER 0x111, r7
r9 = ram[0x80436ac:4]
call ram[0x80426a0:4]
*[ram]unique[0x114b0:4] = register[0x3c:4]
*[ram]unique[0x114b0:4] = register[0x38:4]
r7 = r6
r3 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
unique[0xfb20:1] = CY != 0x0
r6 = *[ram]unique[0x11420:4]
r6 = r7
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x804367e:4]
if (unique[0xf700:1]) goto ram[0x8043618:4]
r2 = r6
r0 = r5
call ram[0x8005448:4]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x28:4]
if (unique[0x11bd0:1]) goto ram[0x804363c:4]
r1 = r8
r0 = r4
call ram[0x8041660:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80435ba:4]
r6 = *[ram]unique[0x114b0:4]
call ram[0x8042630:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804360a:4]
r2 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x804368e:4]
NG = tmpNG
CALLOTHER 0x111, r3
OV = tmpOV
sp = sp + unique[0xfdd0:4]
return pc
r0 = r5
tmpZR = r11 == 0x0
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x8005448:4]
r2 = *[ram]unique[0x114b0:4]
r1 = *[ram]unique[0x11420:4]
OV = tmpOV
r2 = r11
call ram[0x8005448:4]
r2 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
OV = tmpOV
r1 = r1 + r11
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x28:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043646:4]
r0 = r4
call [pc]
call ram[0x8042630:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804365e:4]
r1 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x804368e:4]
NG = tmpNG
CALLOTHER 0x111, r3
r3 = *[ram]unique[0x114b0:4]
OV = tmpOV
r5 = r5 + r6
CALLOTHER 0x111, r3
call ram[0x80426a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80435ba:4]
goto ram[0x80435f0:4]
r0 = ram[0x80436a0:4]
call ram[0x8040b00:4]
r2 = r6
r0 = r5
call ram[0x8005448:4]
r2 = *[ram]unique[0x11420:4]
r2 = r2 + r6
*[ram]unique[0x11420:4] = register[0x28:4]
goto ram[0x80435dc:4]
tmpZR = r0 == 0x0
r2 = ram[0x80436a4:4]
r1 = ram[0x80436a8:4]
call ram[0x8015240:4]
r0 = ram[0x80436a4:4]
call ram[0x8040b00:4]
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
goto ram[0x8043590:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
goto ram[0x8043590:4]

NG = tmpNG
NG = tmpNG
sp = mult_addr
NG = tmpNG
r5 = r0
r6 = r1
CALLOTHER 0x111, r3
call ram[0x80426a0:4]
goto ram[0x80436ee:4]
r1 = r6
r0 = r5
call ram[0x8041660:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8043716:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80436e2:4]
r1 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x28:4]
unique[0xfb00:1] = CY != 0x0
r3 = *[ram]unique[0x11420:4]
r4 = zext(unique[0x11eb0:1])
unique[0xfb00:1] = CY != 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8043716:4]
r0 = r5
call [pc]
call ram[0x8042630:4]
r3 = ram[0x8043748:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804372c:4]
r1 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8043736:4]
NG = tmpNG
CALLOTHER 0x111, r3
r0 = r4
return pc
tmpZR = r0 == 0x0
r2 = ram[0x804374c:4]
r1 = ram[0x8043750:4]
call ram[0x8015240:4]
r0 = ram[0x804374c:4]
call ram[0x8040b00:4]
NG = tmpNG
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
goto ram[0x80436d0:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r1 == 0x0
goto ram[0x80436d0:4]

NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043876:4]
r11 = r0
r4 = r1
r9 = r3
r6 = r2
tmpZR = r8 == 0x0
CALLOTHER 0x111, r8
call ram[0x80426a0:4]
r0 = *[ram]unique[0x112a0:4]
r7 = ram[0x80438a0:4]
NG = tmpNG
r10 = r5
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043826:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
OV = tmpOV
unique[0xfb00:1] = CY != 0x0
r2 = r3
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x8043836:4]
r1 = r4
tmpZR = lr == 0x0
r4 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r12 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x50:4]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
tmpZR = r0 == 0x0
if (unique[0xf6c0:1]) goto ram[0x80437c4:4]
r3 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
r4 = r1
tmpZR = r5 == 0x0
*[ram]unique[0x112a0:4] = register[0x2c:4]
if (unique[0xf7e0:1]) goto ram[0x8043856:4]
call ram[0x8042630:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804380e:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8043864:4]
CALLOTHER 0x111, r10
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x8043896:4]
CALLOTHER 0x111, r8
call ram[0x80426a0:4]
r0 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80437ac:4]
r1 = r9
