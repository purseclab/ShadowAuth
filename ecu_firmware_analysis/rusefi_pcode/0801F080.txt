r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801f0fa:4]
sp = mult_addr
r3 = ram[0x801f240:4]
mult_addr = mult_addr + 0x8
r2 = s0
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r4 = r0
s16 = s0
if (unique[0xf8b0:1]) goto ram[0x801f1a4:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf720:1]) goto ram[0x801f0fc:4]
s17 = 0x3f800000
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf860:1]) goto ram[0x801f162:4]
r0 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801f126:4]
r3 = *[ram]unique[0x11420:4]
r2 = ram[0x801f244:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x801f1ce:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x801f218:4]
s0 = *[ram]unique[0x4230:4]
r2 = zext(unique[0x11eb0:1])
r3 = *[ram]unique[0x11420:4]
s0 = CALLOTHER 0xc5, s0, unique[0x3240:1]
OV = tmpOV
s0 = s0 f* s16
tmpZR = r3 == 0x0
s0 = CALLOTHER 0xc3, s0, unique[0x3120:1]
*[ram]unique[0x4230:4] = register[0x300:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
return pc
r0 = s0
call ram[0x80017ac:4]
r6 = r0
r7 = r1
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x801f248:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
r0 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801f1c2:4]
s16 = *[ram]unique[0x42b0:4]
goto ram[0x801f0c0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf6c0:1]) goto ram[0x801f18a:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801f1de:4]
r1 = *[ram]unique[0x11420:4]
NG = tmpNG
call [pc]
r0 = s16
call ram[0x80017ac:4]
r3 = 0x801f230
r3 = *[ram]unique[0x12270:4]
r6 = r0
r7 = r1
call ram[0x8001d40:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801f1ea:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r0 = s0
call ram[0x80017ac:4]
r6 = r0
r7 = r1
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x801f250:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
r0 = *[ram]unique[0x112a0:4]
if (unique[0x11bf0:1]) goto ram[0x801f194:4]
s16 = s17
goto ram[0x801f0c0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf6c0:1]) goto ram[0x801f13c:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x801f19e:4]
r1 = *[ram]unique[0x11420:4]
NG = tmpNG
call [pc]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x801f0f2:4]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
r0 = s0
call ram[0x80017ac:4]
r2 = *[ram]unique[0x114b0:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x801f254:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
goto ram[0x801f0f2:4]
r3 = *[ram]unique[0x11420:4]
s16 = *[ram]unique[0x42b0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801f136:4]
goto ram[0x801f13c:4]
s0 = s16
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto [pc]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf6c0:1]) goto ram[0x801f13c:4]
goto ram[0x801f19e:4]
r1 = r7
r3 = 0x801f238
r3 = *[ram]unique[0x12270:4]
r0 = r6
call ram[0x8001d7c:4]
r1 = r0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801f19e:4]
NG = tmpNG
s0 = s16
tmpZR = r0 == 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x80157e0:4]
r1 = ram[0x801f258:4]
tmpZR = r0 == 0x0
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8015240:4]

NG = tmpNG
call [pc]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
call [pc]
r1 = zext(unique[0x11eb0:1])
r6 = unique[0xfdc0:4]
OV = tmpOV
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
tmpZR = r8 == 0x0
goto ram[0x801ef1c:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
goto ram[0x801ef4c:4]
NG = tmpNG
goto ram[0x801eef8:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = ram[0x801f26c:4]
NG = tmpNG
NG = tmpNG
goto ram[0x800557c:4]

*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r3 = zext(unique[0x11eb0:1])
sp = mult_addr + 0x4
r4 = r0
if (unique[0x11bd0:1]) goto ram[0x801f286:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x28:4]
r0 = r4
return pc
r3 = *[ram]unique[0x12270:4]
NG = tmpNG
r8 = *[ram]unique[0x112a0:4]
r5 = r1
if (unique[0xf6c0:1]) goto ram[0x801f2a2:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x40:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r0 = r4
return pc
call ram[0x8014ae0:4]
r2 = *[ram]unique[0x12270:4]
r11 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r7 == 0x0
OV = tmpOV
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x801f294:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x801f280:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r5 = ram[0x801f318:4]
r7 = ram[0x801f31c:4]
call ram[0x8014ae0:4]
r2 = *[ram]unique[0x12270:4]
r4 = r0
OV = tmpOV
r6 = r1
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
NG = tmpNG
call ram[0x8006128:4]
call ram[0x8001800:4]
r2 = r0
r3 = r1
r1 = 0x801f310
r1 = *[ram]unique[0x12270:4]
call ram[0x8001ab0:4]
call ram[0x8001e20:4]
*[ram]unique[0x17820:4] = register[0x38:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r0 = mult_addr
NG = tmpNG
r0 = mult_addr
NG = tmpNG
sp = mult_addr
r3 = ram[0x801f34c:4]
r5 = ram[0x801f350:4]
r1 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
r3 = *[ram]unique[0x11480:4]
OV = tmpOV
*[ram]unique[0x11480:4] = register[0x2c:4]
call ram[0x8014ae0:4]
r3 = ram[0x801f354:4]
r4 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r4 == 0x0
*[ram]unique[0x17820:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x24:4]
return pc
NG = tmpNG
NG = tmpNG
r0 = mult_addr
NG = tmpNG
r0 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r0 = ram[0x801f368:4]
call ram[0x8040b00:4]
goto ram[0x801f084:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = sp - unique[0xfdd0:4]
sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
r4 = r0
r5 = unique[0xfdc0:4]
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x11340:4] = register[0x2c:4]
r7 = r2
r8 = *[ram]unique[0x112a0:4]
r6 = r1
call ram[0x8014cd0:4]
r2 = r0
r3 = r1
mult_addr = mult_addr + 0x4
OV = tmpOV
mult_addr = mult_addr + 0x4
tmpZR = r3 == 0x0
r1 = r6
r0 = r4
call [pc]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
sp = sp + unique[0xfdd0:4]
return pc
sp = mult_addr
r5 = ram[0x801f3ec:4]
r3 = *[ram]unique[0x12270:4]
sp = sp - unique[0xfdd0:4]
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x20:4]
if (unique[0xf6c0:1]) goto ram[0x801f3e6:4]
s15 = r0
r3 = ram[0x801f3f0:4]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
r4 = r1
*[ram]unique[0x41f0:4] = register[0x33c:4]
call ram[0x8014cd0:4]
tmpZR = r3 == 0x0
r4 = r3 * r4
OV = tmpOV
tmpZR = r1 == 0x0
*[ram]unique[0x17820:4] = register[0x24:4]
sp = sp + unique[0xfdd0:4]
return pc

r0 = mult_addr
NG = tmpNG
r0 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
tmpZR = r2 == 0x0
NG = tmpNG
r0 = ram[0x801f42c:4]
r4 = ram[0x801f430:4]
call ram[0x800557c:4]
call ram[0x8014cd0:4]
r2 = ram[0x801f434:4]
r1 = ram[0x801f438:4]
r3 = zext(unique[0x11eb0:1])
tmpZR = r3 == 0x0
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
return pc

tmpZR = r0 == 0x0
r0 = mult_addr
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801f458:4]
sp = mult_addr
r4 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x801f456:4]
OV = tmpOV
NG = tmpNG
call ram[0x802ac40:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801f44a:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = mult_addr
sp = sp - unique[0xfdd0:4]
r4 = ram[0x801f490:4]
r2 = unique[0xfdc0:4]
NG = tmpNG
r1 = *[ram]unique[0x112d0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
r0 = r4
*[ram]unique[0x11420:4] = register[0x34:4]
call ram[0x803ea70:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r0 = ram[0x801f494:4]
*[ram]unique[0x11480:4] = unique[0x176b0:1]
call ram[0x802acb0:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x801f4de:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801f4b6:4]
r1 = ram[0x801f4f4:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r1 = zext(unique[0x11ed0:1])
if (unique[0x11bf0:1]) goto ram[0x801f4e8:4]
r3 = ram[0x801f4f8:4]
r3 = *[ram]unique[0x112a0:4]
if (unique[0x11bd0:1]) goto ram[0x801f4e8:4]
r3 = ram[0x801f4fc:4]
sp = mult_addr
r5 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801f4ee:4]
