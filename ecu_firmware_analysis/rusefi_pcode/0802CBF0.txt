OV = tmpOV
if (unique[0xf860:1]) goto ram[0x802cc44:4]
sp = mult_addr
mult_addr = mult_addr + 0x8
r5 = r0
sp = sp - unique[0xfdd0:4]
r0 = s0
r4 = r1
s16 = s0
call ram[0x80017ac:4]
r2 = r4
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x802cc50:4]
r0 = ram[0x802cc54:4]
call ram[0x8016520:4]
r3 = ram[0x802cc58:4]
s14 = *[ram]unique[0x42b0:4]
s15 = *[ram]unique[0x4230:4]
s0 = s14 f/ s15
tmpZR = r2 == 0x0
NG = tmpNG
s16 = s0 f* s16
CALLOTHER 0x1, 0xa, 0xb, 0x6, cr8, cr13, cr8
*[ram]unique[0x4230:4] = register[0x340:4]
*[ram]unique[0x11480:4] = unique[0x176b0:1]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r1 = ram[0x802cc60:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
tmpZR = r5 == 0x0
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x24:4]
if (unique[0xf890:1]) goto ram[0x802cc96:4]
NG = tmpNG
goto ram[0x802cc88:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x802cc96:4]
tmpZR = r2 == 0x0
OV = tmpOV
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802cc82:4]
return pc
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802ccb4:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
sp = mult_addr
r5 = ram[0x802ccf0:4]
r1 = ram[0x802ccf4:4]
r0 = ram[0x802ccf8:4]
call ram[0x8016520:4]
r4 = *[ram]unique[0x11420:4]
call ram[0x8014ae0:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r4 == 0x0
tmpZR = r3 == 0x0
NG = tmpNG
