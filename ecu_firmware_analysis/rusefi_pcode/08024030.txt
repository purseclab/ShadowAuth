sp = mult_addr
r3 = zext(unique[0x12120:1])
sp = sp - unique[0xfdd0:4]
r4 = r0
if (unique[0x11bd0:1]) goto ram[0x8024060:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
r2 = *[ram]unique[0x112a0:4]
r3 = ram[0x8024074:4]
tmpZR = r1 == 0x0
OV = tmpOV
call ram[0x80447f0:4]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
sp = sp + unique[0xfdd0:4]
return pc
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x8024078:4]
tmpZR = r0 == 0x0
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8015f20:4]

tmpZR = r8 == 0x0
OV = tmpOV
NG = tmpNG
NG = tmpNG
r3 = ram[0x80240c8:4]
OV = tmpOV
r2 = *[ram]unique[0x11420:4]
if (unique[0xf6a0:1]) goto ram[0x802409e:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80240ac:4]
OV = tmpOV
r3 = *[ram]unique[0x11420:4]
if (unique[0xf6a0:1]) goto ram[0x80240b8:4]
NG = tmpNG
r1 = zext(unique[0x1a1b0:2])
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
r1 = zext(unique[0x1a1b0:2])
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
r3 = *[ram]unique[0x11420:4]
r3 = zext(unique[0x1a1b0:2])
tmpZR = r1 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
return pc
NG = tmpNG
tmpZR = r1 == 0x0
tmpZR = r3 == 0x0
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x24:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
