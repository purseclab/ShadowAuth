r2 = ram[0x8040acc:4]
r3 = ram[0x8040ad0:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x112a0:4]
r1 = *[ram]unique[0x11420:4]
sp = mult_addr
OV = tmpOV
r5 = *[ram]unique[0x12270:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
r1 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x28:4]
OV = tmpOV
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
tmpZR = r5 == 0x0
OV = tmpOV
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x34:4]
unique[0xfb20:1] = CY != 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
sp = mult_addr
return pc
NG = tmpNG
goto ram[0x8040ad2:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r2 = ram[0x8040af0:4]
r1 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8040ae4:4]
return pc

NG = tmpNG
goto ram[0x8040af6:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = sp - unique[0xfdd0:4]
CALLOTHER 0x21
r2 = ram[0x8040b74:4]
*[ram]unique[0x11420:4] = register[0x20:4]
r5 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8040b10:4]
goto ram[0x8040b0e:4]
