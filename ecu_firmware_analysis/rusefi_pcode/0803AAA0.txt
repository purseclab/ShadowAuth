sp = mult_addr
NG = tmpNG
sp = sp - unique[0xfdd0:4]
CALLOTHER 0x111, r3
r4 = ram[0x803ab44:4]
call ram[0x8041a70:4]
r2 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x803aac2:4]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803aad0:4]
call ram[0x8041a40:4]
NG = tmpNG
CALLOTHER 0x111, r3
sp = sp + unique[0xfdd0:4]
return pc
r1 = zext(unique[0x11eb0:1])
r2 = zext(unique[0x11ef0:2])
NG = tmpNG
NG = tmpNG
NG = unique[0x184e0:4] s< 0x0
if (unique[0xf6c0:1]) goto ram[0x803aac2:4]
call ram[0x8040dd0:4]
r2 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x803aac2:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803aac2:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803aac2:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803aac2:4]
*[ram]unique[0x11420:4] = register[0x28:4]
r0 = *[ram]unique[0x12270:4]
r3 = r3 + r0
OV = tmpOV
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
unique[0xfb00:1] = CY != 0x0
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
OV = tmpOV
NG = tmpNG
r0 = ram[0x803ab48:4]
*[ram]unique[0x11420:4] = register[0x28:4]
r1 = unique[0xfdc0:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x8041220:4]
r2 = r0
if (unique[0x11bf0:1]) goto ram[0x803ab32:4]
r0 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x114b0:4]
r1 = zext(unique[0x11eb0:1])
r0 = *[ram]unique[0x11420:4]
call ram[0x8040df0:4]
goto ram[0x803aac2:4]
tmpZR = r0 == 0x0
r2 = ram[0x803ab4c:4]
r1 = ram[0x803ab50:4]
call ram[0x8015240:4]
r0 = ram[0x803ab4c:4]
call ram[0x8040b00:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r4 = zext(unique[0x11eb0:1])
NG = tmpNG
r0 = zext(unique[0x11f10:2])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = *[ram]unique[0x11420:4]
sp = mult_addr
r5 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x34:4]
NG = tmpNG
r4 = r0
if (unique[0xf720:1]) goto ram[0x803ab98:4]
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x803ab74:4]
return pc
r2 = *[ram]unique[0x11420:4]
NG = tmpNG
r5 = *[ram]unique[0x11420:4]
CALLOTHER 0x111, r3
call ram[0x8041a70:4]
NG = tmpNG
tmpZR = r0 == 0x0
call ram[0x80413d0:4]
call ram[0x8041a40:4]
NG = tmpNG
CALLOTHER 0x111, r3
return pc
r6 = r0
NG = tmpNG
*[ram]unique[0x112d0:4] = unique[0x17780:1]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
NG = tmpNG
CALLOTHER 0x111, r3
call ram[0x8041a70:4]
r0 = r6
NG = tmpNG
call ram[0x80413d0:4]
call ram[0x8041a40:4]
NG = tmpNG
CALLOTHER 0x111, r3
goto ram[0x803ab6e:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = *[ram]unique[0x11420:4]
r5 = *[ram]unique[0x11420:4]
NG = tmpNG
r4 = r0
if (unique[0xf6c0:1]) goto ram[0x803ac08:4]
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x803abe2:4]
return pc
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x34:4]
NG = tmpNG
CALLOTHER 0x111, r3
call ram[0x8041a70:4]
r1 = r5
tmpZR = r0 == 0x0
call ram[0x80413d0:4]
call ram[0x8041a40:4]
NG = tmpNG
CALLOTHER 0x111, r3
return pc
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
NG = tmpNG
CALLOTHER 0x111, r3
call ram[0x8041a70:4]
tmpZR = r0 == 0x0
NG = tmpNG
call ram[0x80414b0:4]
tmpZR = r0 == 0x0
NG = tmpNG
call ram[0x80413d0:4]
call ram[0x8041a40:4]
NG = tmpNG
CALLOTHER 0x111, r3
goto ram[0x803abdc:4]

