sp = mult_addr + 0x4
call ram[0x8044910:4]
r3 = ram[0x800a388:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x800a29c:4]
r6 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x11420:4]
r5 = *[ram]unique[0x11420:4]
r8 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bd0:1]) goto ram[0x800a2ba:4]
call ram[0x8044940:4]
r3 = r3 >> unique[0x19d40:4]
r7 = ram[0x800a38c:4]
r9 = ram[0x800a394:4]
NG = tmpNG
r12 = r12 >> unique[0x19d40:4]
r1 = r1 >> unique[0x19d40:4]
r3 = r3 + r2
lr = r7 * r12
tmpZR = r3 == 0x0
r7 = r7 >> unique[0x19d40:4]
r1 = r1 >> unique[0x19d40:4]
r12 = unique[0x13270:4] + lr
tmpZR = r1 == 0x0
r7 = r7 >> unique[0x19d40:4]
tmpZR = r7 == 0x0
tmpZR = r2 == 0x0
r1 = ram[0x800a390:4]
lr = ram[0x800a398:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
tmpZR = r7 == 0x0
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
r7 = unique[0x13270:4] + r12
r0 = r0 >> unique[0x19d40:4]
tmpZR = r3 == 0x0
tmpZR = r0 == 0x0
r6 = r3 * r6
tmpZR = r12 == 0x0
tmpZR = r3 == 0x0
r5 = r5 >> unique[0x19d40:4]
tmpZR = r3 == 0x0
r0 = unique[0x13270:4] + r7
r5 = r5 >> unique[0x19d40:4]
tmpZR = r7 == 0x0
tmpZR = r2 == 0x0
r5 = unique[0x13270:4] + r0
tmpZR = r3 == 0x0
r7 = *[ram]unique[0x12270:4]
tmpZR = r3 == 0x0
r4 = r4 >> unique[0x19d40:4]
tmpZR = r2 == 0x0
tmpZR = r6 == 0x0
r2 = unique[0x13270:4] + r5
tmpZR = r0 == 0x0
tmpZR = r6 == 0x0
tmpZR = r2 == 0x0
tmpZR = r0 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
r7 = unique[0x11a20:4] | unique[0x11a10:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
return pc

NG = tmpNG
NG = tmpNG
CALLOTHER 0x7, 0x0, 0x4, 0x1, r0, cr0, cr6
