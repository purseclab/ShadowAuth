sp = mult_addr
r4 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x803e882:4]
r4 = ram[0x803e890:4]
r5 = zext(unique[0x11eb0:1])
if (unique[0x11bf0:1]) goto ram[0x803e860:4]
r5 = zext(unique[0x11eb0:1])
if (unique[0x11bf0:1]) goto ram[0x803e88a:4]
r5 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x803e85e:4]
tmpZR = r0 == 0x0
sp = mult_addr
return pc
NG = tmpNG
r7 = ram[0x803e894:4]
tmpZR = r5 == 0x0
r6 = zext(unique[0x11eb0:1])
*[ram]unique[0x177b0:4] = unique[0x177d0:1]
tmpZR = r4 == 0x0
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x28:4]
r0 = r6
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
sp = mult_addr
return pc
r4 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x803e846:4]
goto ram[0x803e856:4]
NG = tmpNG
goto ram[0x803e860:4]

r1 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r2 = ram[0x803e908:4]
NG = tmpNG
r1 = zext(unique[0x12150:1])
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x803e8da:4]
sp = mult_addr
r4 = *[ram]unique[0x11420:4]
r4 = r4 + r1
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x803e8e8:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
if (unique[0xf6a0:1]) goto ram[0x803e8d2:4]
r1 = zext(unique[0x12150:1])
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x803e8ae:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
if (unique[0xf6c0:1]) goto ram[0x803e8c0:4]
NG = tmpNG
sp = sp + 0x4
return pc
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
if (unique[0xf6c0:1]) goto ram[0x803e8a4:4]
NG = tmpNG
return pc
r2 = ram[0x803e90c:4]
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x803e902:4]
