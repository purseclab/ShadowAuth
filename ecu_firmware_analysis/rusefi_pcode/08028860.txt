sp = mult_addr
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80288d4:4]
r3 = ram[0x80288f8:4]
r3 = *[ram]unique[0x11420:4]
r5 = r1
OV = tmpOV
tmpZR = r1 == 0x0
r4 = zext(unique[0x11ed0:1])
if (unique[0x11bd0:1]) goto ram[0x80288a6:4]
r3 = ram[0x80288fc:4]
r3 = *[ram]unique[0x120f0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80288b4:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8028896:4]
r3 = ram[0x8028900:4]
r2 = *[ram]unique[0x120f0:4]
OV = tmpOV
tmpZR = r3 == 0x0
r0 = zext(unique[0x11ef0:2])
r0 = zext(unique[0x1a1b0:2])
return pc
r2 = r0
r1 = ram[0x8028904:4]
r3 = r5
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
goto ram[0x8028884:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80288e6:4]
r3 = r3 + r1
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
return pc
r3 = ram[0x8028908:4]
r0 = r4
r2 = *[ram]unique[0x120f0:4]
r6 = *[ram]unique[0x11420:4]
r5 = *[ram]unique[0x11420:4]
NG = tmpNG
r1 = zext(unique[0x123a0:2])
OV = tmpOV
r2 = r2 + r5
r0 = r0 + r1
if (unique[0xf6c0:1]) goto ram[0x80288c2:4]
r0 = r0 >> unique[0x19d40:4]
return pc
r2 = r0
r1 = ram[0x802890c:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
tmpZR = r0 == 0x0
return pc
r1 = ram[0x8028910:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
tmpZR = r0 == 0x0
return pc

NG = tmpNG
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
r0 = sext(unique[0x11f50:2])
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = *[ram]unique[0x11480:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r1 = zext(unique[0x1a070:1])
r0 = ram[0x8028964:4]
call ram[0x8028860:4]
r3 = ram[0x8028968:4]
s14 = *[ram]unique[0x42b0:4]
s12 = *[ram]unique[0x4230:4]
s13 = *[ram]unique[0x4230:4]
s15 = s12 f/ s14
s14 = r0
s14 = CALLOTHER 0xc4, s14, unique[0x31a0:1]
s15 = s15 f* s14
s15 = s15 f* s13
r0 = s15
call ram[0x80017ac:4]
sp = mult_addr
r2 = r0
r3 = r1
r0 = ram[0x8028970:4]
r1 = ram[0x8028974:4]
goto ram[0x8016520:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
tmpZR = r5 == 0x0
r0 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x80289b8:4]
r3 = *[ram]unique[0x112a0:4]
if (unique[0x11bd0:1]) goto ram[0x802898a:4]
return pc
tmpZR = r3 == 0x0
OV = tmpOV
sp = mult_addr
r3 = *[ram]unique[0x112a0:4]
r2 = r1
r4 = r0
r1 = ram[0x80289bc:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
call ram[0x8014ae0:4]
tmpZR = r4 == 0x0
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
return pc
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = zext(unique[0x12120:1])
sp = sp - unique[0xfdd0:4]
r4 = r0
if (unique[0x11bd0:1]) goto ram[0x80289f0:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
r2 = *[ram]unique[0x112a0:4]
r3 = ram[0x8028a04:4]
tmpZR = r1 == 0x0
OV = tmpOV
call ram[0x80447f0:4]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
NG = tmpNG
