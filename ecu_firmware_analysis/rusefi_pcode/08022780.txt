sp = mult_addr
mult_addr = mult_addr + 0x8
sp = sp - unique[0xfdd0:4]
r5 = r1
r6 = unique[0xfdc0:4]
r1 = zext(unique[0x11eb0:1])
r4 = r0
r0 = r6
call ram[0x8022220:4]
r3 = zext(unique[0x11eb0:1])
if (unique[0x11bf0:1]) goto ram[0x80227ac:4]
mult_addr = mult_addr + 0x4
mult_addr = mult_addr + 0x4
r0 = r4
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r1 = zext(unique[0x11eb0:1])
s16 = *[ram]unique[0x4230:4]
r0 = sp
call ram[0x8022220:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x80227e8:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x80227e8:4]
s14 = *[ram]unique[0x4230:4]
s13 = *[ram]unique[0x4230:4]
s15 = s16 f- s14
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
unique[0xfcc0:1] = unique[0xfc90:1] && unique[0xfca0:1]
s15 = 0x0 f- s15
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf740:1]) goto ram[0x80227fa:4]
NG = tmpNG
NG = tmpNG
r0 = r4
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
s16 = s16 f+ s14
s15 = 0x3f000000
s16 = s16 f* s15
NG = tmpNG
*[ram]unique[0x4230:4] = register[0x340:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x80227a2:4]
sp = mult_addr
r4 = r0
r1 = zext(unique[0x11eb0:1])
call ram[0x8022220:4]
r0 = r4
return pc

sp = mult_addr
r2 = zext(unique[0x11eb0:1])
r3 = ram[0x802284c:4]
tmpZR = r1 == 0x0
tmpZR = r3 == 0x0
r1 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8022846:4]
r3 = ram[0x8022850:4]
r1 = ram[0x8022854:4]
r2 = *[ram]unique[0x120f0:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
NG = tmpNG
return pc
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
return pc
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
goto ram[0x8022924:4]
NG = tmpNG
