sp = mult_addr + 0x4
call ram[0x8014ae0:4]
lr = ram[0x802905c:4]
r12 = ram[0x8029060:4]
r3 = *[ram]unique[0x12270:4]
r8 = r0
OV = tmpOV
tmpZR = r0 == 0x0
tmpZR = r5 == 0x0
OV = tmpOV
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8029012:4]
r3 = ram[0x8029044:4]
r4 = ram[0x8029048:4]
r5 = zext(unique[0x11eb0:1])
r3 = *[ram]unique[0x12270:4]
r9 = r1
r1 = ram[0x802904c:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r1 = r4
OV = tmpOV
tmpZR = r7 == 0x0
OV = tmpOV
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8029038:4]
return pc
r3 = ram[0x8029050:4]
r4 = ram[0x8029054:4]
r5 = ram[0x8029058:4]
mult_addr = mult_addr + 0x4
r4 = mult_addr
r1 = *[ram]unique[0x11420:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r0 = r4
call ram[0x80145c0:4]
tmpZR = r1 == 0x0
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x8015240:4]
sp = mult_addr
tmpZR = r0 == 0x0
goto ram[0x8015240:4]
r0 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = mult_addr
NG = tmpNG
r0 = mult_addr
NG = tmpNG
r0 = mult_addr
NG = tmpNG
