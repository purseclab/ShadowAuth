sp = mult_addr
r4 = r0
r5 = ram[0x80199cc:4]
r0 = r1
r2 = r4
r1 = ram[0x80199d0:4]
tmpZR = r6 == 0x0
call ram[0x8019880:4]
r1 = r4
r2 = r6
r0 = r5
call ram[0x8005448:4]
call ram[0x800a650:4]
tmpZR = r3 == 0x0
r3 = zext(unique[0x11ed0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80199c2:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80199c6:4]
r0 = *[ram]unique[0x11420:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
return pc
NG = tmpNG
return pc
NG = tmpNG
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r1 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = mult_addr
r2 = ram[0x8019a20:4]
sp = sp - unique[0xfdd0:4]
r4 = r0
r0 = *[ram]unique[0x11420:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8019a0a:4]
r2 = unique[0xfdc0:4]
r1 = *[ram]unique[0x114b0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
r0 = r4
call ram[0x8016490:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
sp = sp + unique[0xfdd0:4]
return pc
r1 = ram[0x8019a24:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
sp = sp + unique[0xfdd0:4]
return pc

NG = tmpNG
NG = tmpNG
r1 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
