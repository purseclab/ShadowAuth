sp = mult_addr
r4 = ram[0x8040dc4:4]
r6 = *[ram]unique[0x11420:4]
r5 = r0
call ram[0x8040ca0:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x28:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x8034370:4]
r3 = CALLOTHER 0x10a
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8040dbe:4]
r0 = *[ram]unique[0x11420:4]
r1 = r6
sp = mult_addr
goto ram[0x8000318:4]
r0 = ram[0x8040dc8:4]
call ram[0x8040b00:4]
NG = tmpNG
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x8040de8:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8040de2:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8040de2:4]
return pc
r0 = ram[0x8040dec:4]
call ram[0x8040b00:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
sp = mult_addr + 0x4
r5 = r0
r6 = r1
r8 = r2
r7 = r3
call ram[0x8040dd0:4]
if (unique[0x11bf0:1]) goto ram[0x8040e34:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8040e34:4]
r1 = zext(unique[0x11ef0:2])
NG = tmpNG
NG = tmpNG
r2 = zext(unique[0x1a1b0:2])
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x8040e3a:4]
tmpZR = r3 == 0x0
NG = tmpNG
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11440:4] = unique[0x176d0:2]
r0 = *[ram]unique[0x11420:4]
r1 = r6
