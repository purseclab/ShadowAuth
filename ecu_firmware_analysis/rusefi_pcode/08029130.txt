sp = mult_addr
r3 = ram[0x80291c8:4]
r3 = zext(unique[0x11eb0:1])
sp = sp - unique[0xfdd0:4]
if (unique[0x11bd0:1]) goto ram[0x802914a:4]
r4 = ram[0x80291cc:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80291ae:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
sp = sp + unique[0xfdd0:4]
return pc
r2 = ram[0x80291d0:4]
r3 = *[ram]unique[0x11420:4]
r4 = r1
r3 = r3 + r1
r5 = r0
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x800b310:4]
r3 = unique[0xfdc0:4]
r0 = ram[0x80291d4:4]
r1 = r5
r2 = r4
call ram[0x803d720:4]
r3 = *[ram]unique[0x114b0:4]
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x8029186:4]
r2 = ram[0x80291d8:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x24:4]
if (unique[0xf890:1]) goto ram[0x80291b8:4]
call ram[0x8029070:4]
r0 = ram[0x80291dc:4]
call ram[0x8043b90:4]
sp = sp + unique[0xfdd0:4]
return pc
r4 = ram[0x80291e0:4]
r1 = ram[0x80291e4:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x28:4]
if (unique[0xf890:1]) goto ram[0x802917c:4]
r0 = ram[0x80291d4:4]
call ram[0x803d470:4]
r2 = ram[0x80291e8:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x24:4]
goto ram[0x802917c:4]
r1 = ram[0x80291ec:4]
r0 = ram[0x80291f0:4]
call ram[0x8016520:4]
goto ram[0x8029142:4]
r3 = r0
r2 = ram[0x80291f4:4]
r1 = ram[0x80291f8:4]
r0 = ram[0x80291f0:4]
call ram[0x8016520:4]
goto ram[0x8029178:4]

*[ram]unique[0x17820:4] = register[0x20:4]
mult_addr = mult_addr + 0x4
NG = tmpNG
r3 = mult_addr
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x8029268:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x8029248:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0xf6e0:1]) goto ram[0x80291bc:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
call ram[0x8003e80:4]
r1 = r0
r0 = r4
sp = mult_addr
goto ram[0x8029130:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = sp - unique[0xfdd0:4]
call ram[0x800b310:4]
tmpZR = r2 == 0x0
NG = tmpNG
r0 = ram[0x80292f0:4]
call ram[0x800557c:4]
NG = tmpNG
r1 = ram[0x80292f4:4]
r0 = ram[0x80292f0:4]
call ram[0x803db30:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x28:4]
if (unique[0xf6a0:1]) goto ram[0x802929c:4]
r5 = ram[0x80292f8:4]
r2 = ram[0x80292f4:4]
r1 = ram[0x80292fc:4]
r3 = r0
NG = tmpNG
r0 = ram[0x8029300:4]
*[ram]unique[0x11420:4] = register[0x30:4]
call ram[0x8016520:4]
r6 = sp
r4 = unique[0xfdc0:4]
NG = tmpNG
r1 = ram[0x80292f4:4]
r0 = ram[0x80292f0:4]
call ram[0x803db30:4]
r1 = *[ram]unique[0x11420:4]
r0 = r4
call ram[0x80145c0:4]
r0 = r4
call ram[0x8003e80:4]
r3 = r6
r2 = r0
r1 = r4
r0 = ram[0x80292f0:4]
call ram[0x803d720:4]
r0 = ram[0x80292f0:4]
call ram[0x803d670:4]
