sp = mult_addr
r0 = s0
mult_addr = mult_addr + 0x8
r4 = s0
call ram[0x80017ac:4]
r3 = r1
r2 = r0
r1 = ram[0x80206d0:4]
r0 = ram[0x80206d4:4]
call ram[0x8016520:4]
r3 = ram[0x80206d8:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80206c2:4]
s16 = *[ram]unique[0x42b0:4]
s15 = *[ram]unique[0x42b0:4]
s14 = r4
s16 = s14 f* s16
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf720:1]) goto ram[0x80206ae:4]
s16 = s15
r6 = ram[0x80206e4:4]
r2 = ram[0x80206e8:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x41f0:4] = register[0x340:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8020692:4]
r5 = ram[0x80206ec:4]
NG = tmpNG
r0 = r5
s0 = s16
call ram[0x8028050:4]
r3 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
tmpZR = r5 == 0x0
if (unique[0xf860:1]) goto ram[0x8020678:4]
r0 = s16
call ram[0x80017ac:4]
mult_addr = mult_addr + 0x8
r2 = r0
r3 = r1
sp = mult_addr
r1 = ram[0x80206f0:4]
r0 = ram[0x80206d4:4]
goto ram[0x8016520:4]
s15 = *[ram]unique[0x42b0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
unique[0xfb40:1] = NG != 0x0
s16 = s15
goto ram[0x8020662:4]
mult_addr = mult_addr + 0x8
r3 = ram[0x80206e8:4]
r2 = ram[0x80206d8:4]
*[ram]unique[0x11420:4] = register[0x28:4]
return pc

