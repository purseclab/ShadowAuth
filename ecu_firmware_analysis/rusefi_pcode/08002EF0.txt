sp = mult_addr
r7 = ram[0x8002f84:4]
r4 = r1
r6 = r0
call ram[0x8003968:4]
r3 = *[ram]unique[0x11420:4]
r5 = *[ram]unique[0x11420:4]
tmpZR = r1 == 0x0
OV = tmpOV
tmpZR = r5 == 0x0
r1 = r1 + r5
tmpZR = r1 == 0x0
tmpZR = r1 == 0x0
tmpZR = r4 == 0x0
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8002f2e:4]
NG = tmpNG
r0 = r6
call ram[0x803f050:4]
r3 = *[ram]unique[0x11420:4]
r3 = r3 + r5
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8002f38:4]
r0 = r6
call ram[0x800396c:4]
NG = tmpNG
return pc
OV = tmpOV
r0 = r6
call ram[0x803f050:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8002f60:4]
r3 = ram[0x8002f88:4]
r2 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
OV = tmpOV
tmpZR = r5 == 0x0
r0 = r6
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x11420:4] = register[0x24:4]
call ram[0x800396c:4]
NG = tmpNG
return pc
NG = tmpNG
r0 = r6
call ram[0x803f050:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8002f2e:4]
r4 = ram[0x8002f8c:4]
r1 = ram[0x8002f88:4]
r4 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x20:4]
goto ram[0x8002f2e:4]

OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8003052:4]
sp = mult_addr
r7 = r1
r6 = r0
call ram[0x8003968:4]
r12 = *[ram]unique[0x11300:4]
r5 = ram[0x8003178:4]
tmpZR = r3 == 0x0
tmpZR = r0 == 0x0
OV = tmpOV
r1 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x11420:4]
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf8b0:1]) goto ram[0x80030c4:4]
CY = shift_carry
*[ram]unique[0x11420:4] = register[0x30:4]
tmpZR = r1 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8003030:4]
lr = *[ram]unique[0x11300:4]
r1 = *[ram]unique[0x11420:4]
tmpZR = r0 == 0x0
tmpZR = r12 == 0x0
r7 = *[ram]unique[0x11420:4]
OV = tmpOV
r3 = r3 + lr
tmpZR = r1 == 0x0
if (unique[0xf6a0:1]) goto ram[0x80030a4:4]
lr = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x58:4]
*[ram]unique[0x112a0:4] = register[0x3c:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x800310e:4]
tmpZR = r1 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x8003064:4]
NG = tmpNG
OV = tmpOV
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r2 == 0x0
r4 = *[ram]unique[0x120f0:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x28:4]
*[ram]unique[0x17740:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
r0 = r6
sp = mult_addr
goto ram[0x800396c:4]
r1 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x8003054:4]
r3 = r3 + r4
tmpZR = r12 == 0x0
r1 = *[ram]unique[0x11420:4]
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf6a0:1]) goto ram[0x800311e:4]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11480:4] = register[0x2c:4]
goto ram[0x8002ffc:4]
return pc
tmpZR = r1 == 0x0
OV = tmpOV
*[ram]unique[0x11300:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0xf700:1]) goto ram[0x8003002:4]
NG = tmpNG
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80030f8:4]
