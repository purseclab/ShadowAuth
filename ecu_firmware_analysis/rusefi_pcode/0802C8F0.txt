if (unique[0x11bd0:1]) goto ram[0x802c8f4:4]
return pc
sp = mult_addr + 0x4
r4 = r0
tmpZR = r6 == 0x0
tmpZR = r10 == 0x0
tmpZR = r5 == 0x0
tmpZR = r7 == 0x0
r3 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
r0 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r9 == 0x0
tmpZR = r8 == 0x0
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
OV = tmpOV
r1 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x120b0:4]
r0 = ram[0x802ca5c:4]
unique[0xfae0:1] = ZR != 0x0
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r11 = r3
tmpZR = r11 == 0x0
sp = sp - unique[0xfdd0:4]
r1 = r11
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c98a:4]
r3 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x112a0:4]
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x4c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x2c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x80381b0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802ca1e:4]
sp = sp + unique[0xfdd0:4]
return pc
r2 = ram[0x802ca60:4]
r3 = *[ram]unique[0x120b0:4]
r12 = *[ram]unique[0x120b0:4]
r0 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r3 = *[ram]unique[0x11480:4]
r2 = *[ram]unique[0x120b0:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
*[ram]unique[0x17820:4] = register[0x50:4]
r1 = ram[0x802ca64:4]
r6 = ram[0x802ca68:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
tmpZR = r5 == 0x0
call ram[0x8014ae0:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r3 == 0x0
*[ram]unique[0x17820:4] = register[0x24:4]
NG = tmpNG
r2 = r2 + r1
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x11480:4] = register[0x28:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x802c9de:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x802c94a:4]
r6 = ram[0x802ca60:4]
tmpZR = r5 == 0x0
tmpZR = r3 == 0x0
tmpZR = r0 == 0x0
tmpZR = r1 == 0x0
r3 = *[ram]unique[0x11480:4]
r0 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
r5 = *[ram]unique[0x11480:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x11480:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
*[ram]unique[0x17820:4] = register[0x20:4]
*[ram]unique[0x17820:4] = register[0x34:4]
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11480:4]
r1 = ram[0x802ca6c:4]
r0 = ram[0x802ca70:4]
call ram[0x8016520:4]
goto ram[0x802c94a:4]
tmpZR = r6 == 0x0
tmpZR = r0 == 0x0
tmpZR = r5 == 0x0
r0 = *[ram]unique[0x11480:4]
r5 = *[ram]unique[0x11480:4]
r2 = ram[0x802ca60:4]
r4 = *[ram]unique[0x11480:4]
r1 = ram[0x802ca74:4]
tmpZR = r3 == 0x0
r3 = *[ram]unique[0x11480:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x34:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
tmpZR = r3 == 0x0
tmpZR = r0 == 0x0
r3 = *[ram]unique[0x11480:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
sp = sp + unique[0xfdd0:4]
return pc
r0 = sext(unique[0x11f30:1])
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
r0 = zext(unique[0x11eb0:1])
if (unique[0x11bd0:1]) goto ram[0x802ca8c:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802ca92:4]
r0 = sext(unique[0x12420:1])
if (unique[0x11bd0:1]) goto ram[0x802ca94:4]
return pc
r0 = r4
NG = tmpNG
call ram[0x802c180:4]
r3 = ram[0x802caac:4]
r2 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x802cab0:4]
call ram[0x8016520:4]
NG = tmpNG
return pc
if (unique[0xf6e0:1]) goto ram[0x802cac0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
NG = tmpNG
r4 = r0
call ram[0x802c180:4]
r3 = ram[0x802caf0:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x802cae0:4]
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cae2:4]
sp = mult_addr
r1 = ram[0x802caf4:4]
goto ram[0x800ac30:4]
return pc
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x802caf4:4]
sp = mult_addr
goto ram[0x800ac30:4]

OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
NG = tmpNG
r4 = r0
call ram[0x802c180:4]
r3 = ram[0x802cb30:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x802cb20:4]
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cb22:4]
sp = mult_addr
r1 = ram[0x802cb34:4]
goto ram[0x800ac30:4]
return pc
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x802cb34:4]
sp = mult_addr
goto ram[0x800ac30:4]

OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bf0:1]) goto ram[0x802cb7e:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cb74:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cb7a:4]
r2 = *[ram]unique[0x11420:4]
sp = mult_addr
OV = tmpOV
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x28:4]
sp = sp + 0x4
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
goto ram[0x802cb5a:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
return pc
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bf0:1]) goto ram[0x802cbbe:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cbb4:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cbba:4]
r2 = *[ram]unique[0x11420:4]
sp = mult_addr
OV = tmpOV
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x28:4]
sp = sp + 0x4
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
goto ram[0x802cb9a:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
return pc
r3 = *[ram]unique[0x11420:4]
sp = mult_addr
r3 = *[ram]unique[0x11420:4]
r4 = r0
call [pc]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = *[ram]unique[0x11420:4]
r0 = r4
call [pc]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = *[ram]unique[0x11420:4]
r0 = r4
call [pc]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x802cc44:4]
sp = mult_addr
mult_addr = mult_addr + 0x8
r5 = r0
sp = sp - unique[0xfdd0:4]
r0 = s0
r4 = r1
s16 = s0
call ram[0x80017ac:4]
r2 = r4
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x802cc50:4]
r0 = ram[0x802cc54:4]
call ram[0x8016520:4]
r3 = ram[0x802cc58:4]
s14 = *[ram]unique[0x42b0:4]
s15 = *[ram]unique[0x4230:4]
s0 = s14 f/ s15
tmpZR = r2 == 0x0
NG = tmpNG
s16 = s0 f* s16
CALLOTHER 0x1, 0xa, 0xb, 0x6, cr8, cr13, cr8
*[ram]unique[0x4230:4] = register[0x340:4]
*[ram]unique[0x11480:4] = unique[0x176b0:1]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r1 = ram[0x802cc60:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
tmpZR = r5 == 0x0
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x24:4]
if (unique[0xf890:1]) goto ram[0x802cc96:4]
NG = tmpNG
goto ram[0x802cc88:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x802cc96:4]
