sp = mult_addr + 0x4
r10 = ram[0x801651c:4]
r6 = r0
r0 = *[ram]unique[0x112a0:4]
r7 = r1
r8 = r2
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x80164fc:4]
call ram[0x8040900:4]
r4 = ram[0x8016510:4]
r5 = r0
tmpZR = r9 == 0x0
r0 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x44:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x80164e6:4]
r2 = r8
r1 = r7
r0 = r4
call ram[0x803ea70:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x177b0:4] = unique[0x177d0:1]
r0 = r6
r1 = *[ram]unique[0x11420:4]
call ram[0x8016420:4]
if (unique[0x11bf0:1]) goto ram[0x80164f4:4]
return pc
r1 = ram[0x8016514:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80164e2:4]
sp = mult_addr
goto ram[0x80408b0:4]
r3 = *[ram]unique[0x112a0:4]
r1 = ram[0x8016518:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x80164aa:4]

*[ram]unique[0x114b0:4] = register[0x30:4]
NG = tmpNG
