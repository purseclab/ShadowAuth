sp = mult_addr
sp = mult_addr
sp = sp - unique[0xfdd0:4]
r2 = unique[0xfdc0:4]
r5 = r0
r6 = *[ram]unique[0x112d0:4]
r3 = ram[0x803f04c:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x20:4]
r4 = r1
r0 = unique[0xfdc0:4]
r1 = r6
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x38:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x803ea70:4]
r3 = *[ram]unique[0x114b0:4]
OV = tmpOV
unique[0xfb20:1] = CY != 0x0
*[ram]unique[0x11480:4] = unique[0x176b0:1]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
sp = sp + unique[0xfdd0:4]
return pc
r4 = zext(unique[0x1a070:1])
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
tmpZR = r0 == 0x0
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = r3
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
