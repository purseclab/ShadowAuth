sp = mult_addr
r3 = ram[0x8025d44:4]
r1 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x8025d1c:4]
return pc
r0 = ram[0x8025d48:4]
call ram[0x802ea00:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x8025d3a:4]
tmpZR = r2 == 0x0
r1 = ram[0x8025d4c:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x2c:4]
return pc
sp = mult_addr
goto ram[0x8025d00:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
r8 = unique[0x170f0:4]
sp = mult_addr + 0x4
r3 = ram[0x8025e08:4]
s0 = *[ram]unique[0x41f0:4]
s15 = 0xbf800000
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
mult_addr = mult_addr + 0x8
if (unique[0xf6c0:1]) goto ram[0x8025dba:4]
r4 = ram[0x8025e0c:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x8025dc2:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8025de0:4]
call ram[0x8014ae0:4]
r2 = ram[0x8025e10:4]
r5 = *[ram]unique[0x12270:4]
OV = tmpOV
r3 = 0x8025e00
r3 = *[ram]unique[0x12270:4]
tmpZR = r9 == 0x0
OV = tmpOV
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8025de0:4]
r3 = ram[0x8025e14:4]
