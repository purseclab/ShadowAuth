sp = mult_addr
r4 = ram[0x8006588:4]
*[ram]unique[0x11420:4] = register[0x30:4]
r5 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x24:4]
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bf0:1]) goto ram[0x8006582:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x800657c:4]
r2 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x24:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
sp = mult_addr
return pc
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
goto ram[0x800656c:4]
if (unique[0xf7e0:1]) goto ram[0x800652c:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r2 = ram[0x80065e0:4]
r3 = ram[0x80065e4:4]
r5 = *[ram]unique[0x112a0:4]
r4 = *[ram]unique[0x112a0:4]
r0 = *[ram]unique[0x112a0:4]
r1 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x30:4]
r5 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
r4 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x24:4]
r0 = *[ram]unique[0x112a0:4]
r1 = zext(unique[0x12120:1])
r2 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x30:4]
*[ram]unique[0x17820:4] = register[0x28:4]
sp = mult_addr
*[ram]unique[0x112a0:4] = register[0x20:4]
return pc

r2 = ram[0x8006864:4]
NG = tmpNG
