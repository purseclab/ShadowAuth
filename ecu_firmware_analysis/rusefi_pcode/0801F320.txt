sp = mult_addr
r3 = ram[0x801f34c:4]
r5 = ram[0x801f350:4]
r1 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
r3 = *[ram]unique[0x11480:4]
OV = tmpOV
*[ram]unique[0x11480:4] = register[0x2c:4]
call ram[0x8014ae0:4]
r3 = ram[0x801f354:4]
r4 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r4 == 0x0
*[ram]unique[0x17820:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x24:4]
return pc
NG = tmpNG
NG = tmpNG
r0 = mult_addr
NG = tmpNG
r0 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r0 = ram[0x801f368:4]
call ram[0x8040b00:4]
goto ram[0x801f084:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = sp - unique[0xfdd0:4]
sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
r4 = r0
r5 = unique[0xfdc0:4]
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x11340:4] = register[0x2c:4]
r7 = r2
r8 = *[ram]unique[0x112a0:4]
r6 = r1
