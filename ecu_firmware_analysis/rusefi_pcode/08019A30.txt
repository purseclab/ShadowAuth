sp = mult_addr
r4 = s0
r5 = ram[0x8019af0:4]
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r2 = r0
if (unique[0xf6a0:1]) goto ram[0x8019a92:4]
r0 = s2
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8019a92:4]
r3 = s1
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8019a92:4]
r6 = s3
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8019a92:4]
r7 = s4
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8019ace:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf6a0:1]) goto ram[0x8019aa4:4]
s14 = s1 f- s3
s15 = s0 f- s2
s13 = s14 f/ s15
r1 = s13
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8019ade:4]
s15 = r4
s0 = s1
CALLOTHER 0x1, 0xa, 0xa, 0x7, cr0, cr7, cr6
CALLOTHER 0x1, 0xa, 0xa, 0x1, cr0, cr2, cr6
sp = sp + unique[0xfdd0:4]
return pc
r1 = ram[0x8019af4:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
sp = sp + unique[0xfdd0:4]
return pc
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x80017ac:4]
r6 = r0
r7 = r1
r0 = r4
*[ram]unique[0x17820:4] = register[0x3c:4]
call ram[0x80017ac:4]
r2 = *[ram]unique[0x114b0:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x8019afc:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
goto ram[0x8019aa0:4]
r1 = ram[0x8019b00:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
goto ram[0x8019aa0:4]
r1 = ram[0x8019b04:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
goto ram[0x8019aa0:4]

NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r1 = mult_addr
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
mult_addr = mult_addr + 0x4
NG = tmpNG
r1 = mult_addr
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
r8 = s0
r6 = ram[0x8019d64:4]
sp = sp - unique[0xfdd0:4]
OV = tmpOV
r11 = *[ram]unique[0x112a0:4]
if (unique[0xf8b0:1]) goto ram[0x8019cf0:4]
r5 = s1
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8019c86:4]
r10 = r2
r9 = r0
r2 = r1
r7 = r1
r1 = r0
r0 = ram[0x8019d68:4]
r4 = r3
call ram[0x8032870:4]
s0 = r5
r3 = r0
r2 = r4
r0 = ram[0x8019d6c:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r1 = r10
call ram[0x8032870:4]
r3 = *[ram]unique[0x114b0:4]
OV = tmpOV
r6 = r0
if (unique[0xf820:1]) goto ram[0x8019c20:4]
OV = tmpOV
if (unique[0xfa30:1]) goto ram[0x8019caa:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8019c78:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8019d24:4]
NG = tmpNG
OV = tmpOV
r1 = *[ram]unique[0x120f0:4]
r2 = *[ram]unique[0x120b0:4]
r1 = zext(unique[0x11ed0:1])
r2 = zext(unique[0x11ed0:1])
r0 = ram[0x8019d70:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
s3 = r2
tmpZR = r2 == 0x0
tmpZR = r9 == 0x0
s17 = *[ram]unique[0x41f0:4]
s2 = *[ram]unique[0x41f0:4]
s1 = r1
s4 = r8
s3 = CALLOTHER 0xc5, s3, unique[0x3240:1]
s1 = CALLOTHER 0xc5, s1, unique[0x3240:1]
s0 = s17
*[ram]unique[0x41f0:4] = register[0x308:4]
call ram[0x8019a30:4]
r3 = *[ram]unique[0x114b0:4]
r1 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x120f0:4]
s2 = *[ram]unique[0x41f0:4]
r0 = ram[0x8019d74:4]
OV = tmpOV
s4 = r8
r1 = zext(unique[0x11ed0:1])
r3 = zext(unique[0x11ed0:1])
s3 = r1
s1 = r3
tmpZR = r6 == 0x0
s16 = s0
s3 = CALLOTHER 0xc5, s3, unique[0x3240:1]
s1 = CALLOTHER 0xc5, s1, unique[0x3240:1]
s0 = s17
s18 = *[ram]unique[0x41f0:4]
s19 = *[ram]unique[0x4230:4]
call ram[0x8019a30:4]
s4 = r5
r0 = ram[0x8019d74:4]
s3 = s0
s2 = s19
s1 = s16
s0 = s18
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8019a30:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8019d14:4]
OV = tmpOV
OV = tmpOV
r3 = *[ram]unique[0x112a0:4]
if (unique[0xf6a0:1]) goto ram[0x8019c64:4]
r0 = ram[0x8019d74:4]
OV = tmpOV
r3 = zext(unique[0x11ed0:1])
s1 = r3
r3 = zext(unique[0x11eb0:1])
s3 = r3
tmpZR = r6 == 0x0
s3 = CALLOTHER 0xc5, s3, unique[0x3240:1]
s1 = CALLOTHER 0xc5, s1, unique[0x3240:1]
s2 = *[ram]unique[0x4230:4]
s0 = *[ram]unique[0x41f0:4]
s4 = r5
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8019a30:4]
