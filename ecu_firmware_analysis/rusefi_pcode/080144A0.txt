sp = mult_addr
mult_addr = mult_addr + 0x8
sp = sp - unique[0xfdd0:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
if (unique[0x11bf0:1]) goto ram[0x80144e2:4]
s15 = r0
s14 = *[ram]unique[0x42b0:4]
s0 = *[ram]unique[0x42b0:4]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
s16 = s14 f/ s15
s16 = s16 f* s0
r3 = ram[0x80144f0:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x802cd00:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
s16 = s16 f+ s16
s0 = s16
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
s16 = *[ram]unique[0x42b0:4]
goto ram[0x80144c4:4]
r2 = unique[0xfdc0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r7 = ram[0x801453c:4]
r5 = r2
OV = tmpOV
r4 = r0
r0 = r5
r6 = r3
*[ram]unique[0x112a0:4] = unique[0x17760:1]
call ram[0x8003e80:4]
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x801451c:4]
return pc
r2 = r0
NG = tmpNG
r0 = unique[0x13270:4] + r7
tmpZR = r0 == 0x0
tmpZR = r4 == 0x0
OV = tmpOV
r1 = r5
OV = tmpOV
call ram[0x8005448:4]
*[ram]unique[0x178a0:4] = unique[0x178c0:2]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
goto ram[0x8014500:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
NG = tmpNG
r4 = r0
*[ram]unique[0x112a0:4] = register[0x34:4]
r1 = r5
