sp = mult_addr
r2 = ram[0x803256c:4]
r3 = ram[0x8032570:4]
mult_addr = mult_addr + 0x8
r4 = r0
r0 = *[ram]unique[0x112a0:4]
s17 = *[ram]unique[0x41f0:4]
call ram[0x80302f0:4]
s15 = r0
s16 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
r0 = r4
call ram[0x80144a0:4]
s16 = s16 f* s17
s15 = *[ram]unique[0x42b0:4]
s16 = s16 f* s15
s0 = s16 f/ s0
mult_addr = mult_addr + 0x8
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80325cc:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf9c0:1]) goto ram[0x803269e:4]
goto [pc]
*[ram]unique[0x11440:4] = unique[0x176d0:2]
r7 = zext(unique[0x11eb0:1])
r3 = zext(unique[0x11eb0:1])
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r7 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x3c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r7 = zext(unique[0x11ed0:1])
r3 = *[ram]unique[0x11480:4]
*[ram]unique[0x11480:4] = unique[0x176b0:1]
*[ram]unique[0x11480:4] = register[0x2c:4]
r5 = ram[0x80326e8:4]
r3 = ram[0x8032620:4]
goto [pc]
NG = tmpNG
OV = tmpOV
OV = tmpOV
OV = tmpOV
OV = tmpOV
OV = tmpOV
OV = tmpOV
NG = tmpNG
OV = tmpOV
NG = tmpNG
