sp = mult_addr + 0x4
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
mult_addr = mult_addr + 0x8
r8 = r0
if (unique[0xf760:1]) goto ram[0x801ae88:4]
r6 = r2
r2 = r3
r5 = r3
s16 = s0
r7 = r1
call ram[0x8032870:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801ae7c:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801ae6c:4]
s4 = s16
mult_addr = mult_addr + 0x8
NG = tmpNG
OV = tmpOV
OV = tmpOV
OV = tmpOV
r3 = r3 + r7
r4 = r4 + r7
s1 = *[ram]unique[0x41f0:4]
s0 = *[ram]unique[0x41f0:4]
s3 = *[ram]unique[0x41f0:4]
s2 = *[ram]unique[0x41f0:4]
r0 = r8
sp = mult_addr
goto ram[0x8019a30:4]
tmpZR = r5 == 0x0
s0 = *[ram]unique[0x4210:4]
mult_addr = mult_addr + 0x8
return pc
mult_addr = mult_addr + 0x8
s0 = *[ram]unique[0x41f0:4]
return pc
r2 = r0
r1 = ram[0x801ae9c:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
goto ram[0x801ae74:4]

mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x801b054:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x801af52:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x801af06:4]
r1 = zext(unique[0x12120:1])
r0 = ram[0x801b058:4]
call ram[0x802aa70:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
s4 = s0
if (unique[0xf6a0:1]) goto ram[0x801af74:4]
s3 = *[ram]unique[0x4230:4]
s2 = *[ram]unique[0x4230:4]
s1 = *[ram]unique[0x4230:4]
s0 = *[ram]unique[0x4230:4]
r0 = ram[0x801b05c:4]
call ram[0x8019a30:4]
tmpZR = r4 == 0x0
s15 = *[ram]unique[0x41f0:4]
s0 = s0 f+ s15
s15 = *[ram]unique[0x42b0:4]
s0 = s0 f/ s15
return pc
r5 = ram[0x801b064:4]
r3 = zext(unique[0x12120:1])
s0 = *[ram]unique[0x4230:4]
s13 = *[ram]unique[0x4230:4]
s14 = *[ram]unique[0x4230:4]
s15 = *[ram]unique[0x42b0:4]
s0 = s0 f- s13
NG = tmpNG
s0 = s0 f* s14
s0 = s0 f* s15
if (unique[0xf720:1]) goto ram[0x801af62:4]
r2 = ram[0x801b06c:4]
r1 = ram[0x801b070:4]
r0 = ram[0x801b074:4]
NG = tmpNG
call ram[0x801ae10:4]
*[ram]unique[0x4230:4] = register[0x300:4]
s0 = *[ram]unique[0x4230:4]
s15 = *[ram]unique[0x42b0:4]
s0 = s0 f* s15
s15 = *[ram]unique[0x42b0:4]
s0 = s0 f/ s15
return pc
r3 = ram[0x801b078:4]
s15 = *[ram]unique[0x42b0:4]
s0 = *[ram]unique[0x41f0:4]
s0 = s0 f/ s15
return pc
r2 = ram[0x801b07c:4]
r1 = ram[0x801b080:4]
r0 = ram[0x801b074:4]
NG = tmpNG
call ram[0x801ae10:4]
*[ram]unique[0x4230:4] = register[0x300:4]
goto ram[0x801af3c:4]
NG = tmpNG
r0 = ram[0x801b084:4]
tmpZR = r2 == 0x0
tmpZR = r1 == 0x0
call ram[0x801ae10:4]
r3 = ram[0x801b088:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801aefc:4]
r5 = ram[0x801b08c:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
NG = tmpNG
OV = tmpOV
tmpZR = r2 == 0x0
tmpZR = r1 == 0x0
tmpZR = r3 == 0x0
unique[0xfb60:1] = NG != 0x0
tmpZR = r3 == 0x0
OV = tmpOV
