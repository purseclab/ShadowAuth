sp = mult_addr
r4 = ram[0x8014cb4:4]
r0 = ram[0x8014cb8:4]
r1 = *[ram]unique[0x112a0:4]
sp = sp - unique[0xfdd0:4]
call ram[0x80145c0:4]
r2 = ram[0x8014cbc:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
if (unique[0x11bd0:1]) goto ram[0x8014ca8:4]
call ram[0x8014ae0:4]
r3 = ram[0x8014cc0:4]
r3 = zext(unique[0x11eb0:1])
r4 = r0
r5 = r1
if (unique[0x11bf0:1]) goto ram[0x8014ca4:4]
r7 = ram[0x8014cc4:4]
r6 = ram[0x8014cc8:4]
r3 = zext(unique[0x11eb0:1])
r2 = zext(unique[0x11eb0:1])
tmpZR = r12 == 0x0
*[ram]unique[0x112a0:4] = register[0x50:4]
call ram[0x8023610:4]
NG = tmpNG
OV = tmpOV
*[ram]unique[0x114b0:4] = register[0x24:4]
r3 = zext(unique[0x11eb0:1])
r2 = zext(unique[0x11eb0:1])
tmpZR = r1 == 0x0
call ram[0x8023610:4]
sp = sp + unique[0xfdd0:4]
return pc
r1 = ram[0x8014cb8:4]
r0 = ram[0x8014ccc:4]
call ram[0x800ac30:4]
goto ram[0x8014c6e:4]

OV = tmpOV
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
r7 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
sp = mult_addr
NG = tmpNG
sp = sp - unique[0xfdd0:4]
call ram[0x80343b0:4]
call ram[0x8014ae0:4]
r4 = r0
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x24:4]
call ram[0x8034390:4]
r1 = *[ram]unique[0x114b0:4]
r0 = r4
NG = tmpNG
NG = tmpNG
call ram[0x8006128:4]
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
goto ram[0x8034390:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
goto ram[0x80343b0:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = ram[0x8014d24:4]
return pc
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r2
if (unique[0x11bd0:1]) goto ram[0x8014d44:4]
r3 = ram[0x8014d68:4]
