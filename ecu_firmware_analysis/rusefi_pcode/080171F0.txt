sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
NG = tmpNG
sp = sp - unique[0xfdd0:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
r6 = ram[0x80172bc:4]
r5 = ram[0x80172c0:4]
r3 = ram[0x80172c4:4]
s15 = r7
r8 = *[ram]unique[0x112a0:4]
s16 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
tmpZR = r4 == 0x0
s0 = s16
NG = tmpNG
r1 = r6
r0 = r5
call ram[0x8032870:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8017216:4]
r3 = ram[0x80172c4:4]
r11 = ram[0x80172dc:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r10 = ram[0x80172e0:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r4 = s16
tmpZR = r8 == 0x0
tmpZR = r9 == 0x0
goto ram[0x801724c:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8017260:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8017246:4]
r1 = r10
tmpZR = r0 == 0x0
call ram[0x8015240:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801724c:4]
r3 = ram[0x80172c4:4]
r4 = ram[0x80172c8:4]
r12 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x114b0:4]
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x80172cc:4]
tmpZR = r11 == 0x0
r3 = r8
r2 = r7
call ram[0x8016520:4]
r0 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x114b0:4]
r1 = ram[0x80172d0:4]
r4 = r4 + r8
*[ram]unique[0x114b0:4] = register[0x30:4]
r4 = *[ram]unique[0x114b0:4]
r2 = r7
r3 = r11
OV = tmpOV
r4 = r4 + r11
*[ram]unique[0x114b0:4] = register[0x30:4]
call ram[0x8016520:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8017204:4]
r3 = ram[0x80172c8:4]
r2 = *[ram]unique[0x114b0:4]
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x80172d4:4]
r4 = r3
call ram[0x8016520:4]
r2 = *[ram]unique[0x114b0:4]
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x80172d8:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8016520:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
NG = tmpNG
goto ram[0x80172ca:4]
r4 = zext(unique[0x11f10:2])
NG = tmpNG
r0 = sext(unique[0x14630:2])
NG = tmpNG
r0 = sext(unique[0x14630:2])
NG = tmpNG
r0 = sext(unique[0x14630:2])
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x801731c:4]
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
CALLOTHER 0x13, 0x2c
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r3 = *[ram]unique[0x11420:4]
sp = sp - unique[0xfdd0:4]
r4 = r0
*[ram]unique[0x114b0:4] = register[0x28:4]
r3 = *[ram]unique[0x11420:4]
r5 = r1
call [pc]
r6 = *[ram]unique[0x11420:4]
r3 = sext(unique[0x12560:2])
*[ram]unique[0x114b0:4] = register[0x2c:4]
r0 = *[ram]unique[0x11420:4]
r7 = s0
call ram[0x80017ac:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r8 = r0
r9 = r1
r0 = r7
*[ram]unique[0x17820:4] = register[0x44:4]
call ram[0x80017ac:4]
r2 = *[ram]unique[0x114b0:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r0 = r5
r1 = ram[0x801739c:4]
call ram[0x8016520:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r6 = r0
r7 = r1
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
call ram[0x80017ac:4]
r6 = r0
r7 = r1
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
call ram[0x80017ac:4]
r6 = r0
r7 = r1
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
call ram[0x80017ac:4]
r6 = r0
r7 = r1
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
call ram[0x80017ac:4]
r6 = r0
r7 = r1
*[ram]unique[0x17820:4] = register[0x3c:4]
r2 = *[ram]unique[0x114b0:4]
r1 = ram[0x80173a0:4]
r0 = r5
call ram[0x8016520:4]
sp = sp + unique[0xfdd0:4]
return pc

if (unique[0x11bd0:1]) goto ram[0x80173e6:4]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x80173f8:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x80173f8:4]
r2 = ram[0x80173fc:4]
r1 = zext(unique[0x12120:1])
r0 = ram[0x8017400:4]
r4 = ram[0x8017404:4]
call ram[0x8014d30:4]
r1 = ram[0x8017408:4]
r2 = r0
r0 = ram[0x801740c:4]
call ram[0x8016520:4]
r3 = ram[0x8017410:4]
r2 = ram[0x8017414:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x8017418:4]
tmpZR = r0 == 0x0
tmpZR = r5 == 0x0
r5 = zext(unique[0x11ed0:1])
r3 = zext(unique[0x11ed0:1])
r0 = ram[0x801741c:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
r3 = r2
r3 = r4
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r2 = r4
sp = mult_addr
