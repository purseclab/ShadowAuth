tmpZR = r3 == 0x0
sp = mult_addr
r4 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bd0:1]) goto ram[0x803f81e:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = register[0x20:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803f84e:4]
r0 = sext(unique[0x18230:2])
tmpZR = r0 == 0x0
NG = tmpNG
r4 = *[ram]unique[0x112a0:4]
tmpZR = r4 == 0x0
*[ram]unique[0x112a0:4] = register[0x30:4]
r0 = *[ram]unique[0x112a0:4]
tmpZR = r1 == 0x0
NG = tmpNG
sp = mult_addr
*[ram]unique[0x112a0:4] = register[0x24:4]
return pc
if (unique[0x11bd0:1]) goto ram[0x803f828:4]
OV = tmpOV
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
r5 = zext(unique[0x11ef0:2])
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
r0 = r0 + r3
r0 = SUBPIECE unique[0x19db0:8], 0x0
tmpZR = r5 == 0x0
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x803f7f8:4]
r3 = *[ram]unique[0x112a0:4]
CY = shift_carry
tmpZR = r3 == 0x0
r0 = sext(unique[0x18230:2])
r4 = *[ram]unique[0x112a0:4]
unique[0xfae0:1] = ZR != 0x0
tmpZR = r4 == 0x0
tmpZR = r4 == 0x0
*[ram]unique[0x112a0:4] = register[0x30:4]
goto ram[0x803f7fa:4]
tmpZR = r3 == 0x0
sp = mult_addr
r5 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
if (unique[0x11bd0:1]) goto ram[0x803f888:4]
OV = tmpOV
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
tmpZR = r4 == 0x0
*[ram]unique[0x11420:4] = register[0x30:4]
r3 = zext(unique[0x11ef0:2])
r0 = *[ram]unique[0x11420:4]
r5 = *[ram]unique[0x11420:4]
OV = tmpOV
r2 = r2 + r4
r2 = SUBPIECE unique[0x19db0:8], 0x0
r3 = r2 * r3
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
tmpZR = r4 == 0x0
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
if (unique[0xf6a0:1]) goto ram[0x803f8ce:4]
r1 = sext(unique[0x18230:2])
tmpZR = r1 == 0x0
sp = mult_addr
r3 = *[ram]unique[0x112a0:4]
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x2c:4]
return pc
r3 = *[ram]unique[0x112a0:4]
tmpZR = r2 == 0x0
CY = shift_carry
r3 = *[ram]unique[0x112a0:4]
unique[0xfae0:1] = ZR != 0x0
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
r1 = sext(unique[0x18230:2])
*[ram]unique[0x112a0:4] = register[0x2c:4]
goto ram[0x803f8ba:4]
sp = mult_addr + 0x4
r5 = ram[0x803fbbc:4]
call ram[0x8014d10:4]
call ram[0x80417c0:4]
r6 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
if (unique[0xf8d0:1]) goto ram[0x803fbc4:4]
OV = tmpOV
if (unique[0xfa30:1]) goto ram[0x803fa58:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fa8a:4]
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x803f93a:4]
r3 = *[ram]unique[0x112a0:4]
CY = shift_carry
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
unique[0xfac0:1] = ZR != 0x0
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x803f99a:4]
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x803f9aa:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fb3e:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803faee:4]
NG = tmpNG
r5 = *[ram]unique[0x112a0:4]
if (unique[0xf740:1]) goto ram[0x803f96e:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fda4:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fd9c:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fd84:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fcfe:4]
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x803f98a:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fd94:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fd8c:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fd7c:4]
NG = tmpNG
if (unique[0xf930:1]) goto ram[0x803fd0c:4]
call ram[0x8041790:4]
call ram[0x8014d00:4]
sp = mult_addr
goto ram[0x80409e0:4]
r3 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
