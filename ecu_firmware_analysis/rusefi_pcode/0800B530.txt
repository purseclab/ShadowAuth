r3 = ram[0x800b584:4]
r2 = ram[0x800b588:4]
s15 = *[ram]unique[0x4210:4]
s14 = *[ram]unique[0x4230:4]
s12 = *[ram]unique[0x4230:4]
s11 = s15 f/ s14
s13 = s12 f/ s14
s15 = *[ram]unique[0x41f0:4]
s14 = *[ram]unique[0x4230:4]
r3 = ram[0x800b58c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
s13 = s11 f- s13
s10 = s15 f- s14
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
s12 = s10 f/ s13
s13 = s15
CALLOTHER 0x1, 0xa, 0xe, 0x6, cr6, cr5, cr6
OV = unique[0x4780:1] & 0x1
unique[0xfcc0:1] = unique[0xfc90:1] && unique[0xfca0:1]
s15 = s14
*[ram]unique[0x4230:4] = register[0x33c:4]
*[ram]unique[0x4230:4] = register[0x334:4]
*[ram]unique[0x4230:4] = register[0x330:4]
return pc
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
r0 = mult_addr
sp = mult_addr + 0x4
r8 = ram[0x800b5f8:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x800b5dc:4]
r6 = ram[0x800b5f0:4]
r4 = ram[0x800b5f4:4]
tmpZR = r10 == 0x0
tmpZR = r7 == 0x0
NG = tmpNG
tmpZR = r9 == 0x0
r1 = zext(unique[0x12150:1])
r3 = zext(unique[0x12150:1])
OV = tmpOV
tmpZR = r5 == 0x0
r0 = r4
r3 = r9
r2 = r1
if (unique[0xf6a0:1]) goto ram[0x800b5e0:4]
if (unique[0x11bf0:1]) goto ram[0x800b5d0:4]
r1 = *[ram]unique[0x11420:4]
call ram[0x802c7b0:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf860:1]) goto ram[0x800b5b2:4]
return pc
lr = zext(unique[0x12120:1])
r12 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x800b5c8:4]
goto ram[0x800b5d0:4]

r0 = unique[0xfdc0:4]
NG = tmpNG
r0 = sext(unique[0x11f30:1])
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r8 = ram[0x800b668:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x800b64c:4]
r6 = ram[0x800b660:4]
r4 = ram[0x800b664:4]
tmpZR = r10 == 0x0
tmpZR = r7 == 0x0
NG = tmpNG
tmpZR = r9 == 0x0
r1 = zext(unique[0x12150:1])
r3 = zext(unique[0x12150:1])
