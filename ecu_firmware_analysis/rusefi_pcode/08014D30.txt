sp = mult_addr
r4 = r2
if (unique[0x11bd0:1]) goto ram[0x8014d44:4]
r3 = ram[0x8014d68:4]
r0 = *[ram]unique[0x11420:4]
r3 = zext(unique[0x11eb0:1])
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r0 = r4
return pc
r5 = r1
call ram[0x8024580:4]
call ram[0x8024650:4]
r1 = r0
r0 = r4
call ram[0x8003d9c:4]
r0 = r5
call ram[0x8024500:4]
r1 = r0
OV = tmpOV
call ram[0x80145c0:4]
r0 = r4
return pc
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r2 = ram[0x8014d7c:4]
r1 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x20:4]
goto ram[0x8022820:4]
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
sp = mult_addr
OV = tmpOV
OV = tmpOV
tmpZR = r6 == 0x0
NG = tmpNG
NG = tmpNG
goto ram[0x8014d98:4]
OV = tmpOV
tmpZR = r2 == 0x0
if (unique[0xf6a0:1]) goto ram[0x8014da6:4]
r5 = sext(unique[0x12590:2])
OV = tmpOV
OV = tmpOV
tmpZR = r3 == 0x0
if (unique[0xf860:1]) goto ram[0x8014d90:4]
sp = mult_addr
NG = tmpNG
goto ram[0x8013500:4]

sp = mult_addr + 0x4
r7 = *[ram]unique[0x114b0:4]
r8 = zext(unique[0x12120:1])
