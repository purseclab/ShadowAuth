sp = mult_addr
r3 = *[ram]unique[0x11420:4]
r4 = r0
mult_addr = mult_addr + 0x8
r3 = *[ram]unique[0x11420:4]
s18 = s0
s0 = s1
r5 = r1
call [pc]
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x8028284:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
s17 = s0
r0 = r4
if (unique[0xf6c0:1]) goto ram[0x8028278:4]
call ram[0x80281e0:4]
s16 = s0
r3 = *[ram]unique[0x11420:4]
s0 = s17
r1 = r5
r0 = r4
call [pc]
r3 = ram[0x8028288:4]
s15 = s16 f* s0
*[ram]unique[0x41f0:4] = register[0x344:4]
s0 = s18 f/ s15
mult_addr = mult_addr + 0x8
tmpZR = r2 == 0x0
*[ram]unique[0x41f0:4] = register[0x33c:4]
return pc
call [pc]
r2 = *[ram]unique[0x11420:4]
s16 = s0
goto ram[0x8028250:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x802829c:4]
r0 = zext(unique[0x12120:1])
r0 = r0 >> unique[0x19d40:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r3 = ram[0x80282ac:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
return pc
NG = tmpNG
NG = tmpNG
r3 = ram[0x80282bc:4]
r0 = zext(unique[0x12120:1])
r0 = r0 >> unique[0x19d40:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r3 = ram[0x80282cc:4]
r0 = zext(unique[0x12120:1])
r0 = r0 >> unique[0x19d40:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r3 = ram[0x80282d8:4]
r0 = *[ram]unique[0x112a0:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x80282ec:4]
r0 = zext(unique[0x12120:1])
r0 = r0 >> unique[0x19d40:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8028340:4]
OV = tmpOV
sp = mult_addr
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x30:4]
OV = tmpOV
*[ram]unique[0x17740:4] = register[0x2c:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r4 == 0x0
r1 = *[ram]unique[0x112a0:4]
if (unique[0xf860:1]) goto ram[0x8028326:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
r3 = r3 + r2
sp = sp + 0x4
