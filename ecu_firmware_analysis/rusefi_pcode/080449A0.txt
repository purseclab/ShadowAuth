sp = mult_addr
r7 = ram[0x80449f4:4]
r5 = ram[0x80449f8:4]
r0 = ram[0x80449fc:4]
r3 = ram[0x8044a00:4]
r1 = ram[0x8044a04:4]
tmpZR = r12 == 0x0
NG = tmpNG
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x80449da:4]
OV = tmpOV
r2 = r3
r4 = *[ram]unique[0x11340:4]
*[ram]unique[0x112d0:4] = register[0x30:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80449ba:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
OV = tmpOV
r3 = r3 + r2
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x80449de:4]
*[ram]unique[0x112d0:4] = register[0x38:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80449d6:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80449ee:4]
r3 = *[ram]unique[0x12270:4]
r5 = *[ram]unique[0x12270:4]
OV = tmpOV
goto ram[0x80449b2:4]
sp = mult_addr
return pc

r0 = *[ram]unique[0x11420:4]
NG = tmpNG
r0 = *[ram]unique[0x12270:4]
r0 = *[ram]unique[0x12270:4]
r0 = *[ram]unique[0x12270:4]
r4 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
goto ram[0x8044a10:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
