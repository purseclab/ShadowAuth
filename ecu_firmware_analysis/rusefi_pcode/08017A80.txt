sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x2c:4]
sp = sp - unique[0xfdd0:4]
r0 = ram[0x8017de4:4]
tmpZR = r1 == 0x0
call ram[0x800fa00:4]
r3 = ram[0x8017de8:4]
r2 = zext(unique[0x11eb0:1])
if (unique[0x11bd0:1]) goto ram[0x8017aaa:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r2 = ram[0x8017dec:4]
r5 = ram[0x8017df0:4]
s18 = *[ram]unique[0x41f0:4]
r2 = ram[0x8017df4:4]
r4 = ram[0x8017df8:4]
r0 = ram[0x8017dfc:4]
r1 = ram[0x8017e00:4]
r7 = zext(unique[0x11eb0:1])
r5 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x11420:4]
r6 = *[ram]unique[0x11420:4]
s17 = *[ram]unique[0x41f0:4]
s16 = 0x3f800000
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
NG = tmpNG
OV = unique[0x4780:1] & 0x1
*[ram]unique[0x11460:4] = unique[0x17690:1]
if (unique[0xf930:1]) goto ram[0x8017c04:4]
r0 = s18
call ram[0x8002104:4]
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
tmpZR = r12 == 0x0
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
NG = tmpNG
NG = tmpNG
tmpZR = r8 == 0x0
tmpZR = r1 == 0x0
tmpZR = r9 == 0x0
OV = tmpOV
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x80061c8:4]
s15 = r6
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
r10 = r0
if (unique[0xf930:1]) goto ram[0x8017d0a:4]
r0 = r6
call ram[0x8002104:4]
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
tmpZR = r12 == 0x0
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
NG = tmpNG
NG = tmpNG
tmpZR = r1 == 0x0
OV = tmpOV
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x80061c8:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
r8 = r0
if (unique[0xf930:1]) goto ram[0x8017dbe:4]
OV = tmpOV
if (unique[0xfa30:1]) goto ram[0x8017dc6:4]
OV = tmpOV
if (unique[0xfaa0:1]) goto ram[0x8017e70:4]
r0 = s17
call ram[0x8002104:4]
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
tmpZR = r12 == 0x0
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
NG = tmpNG
tmpZR = r3 == 0x0
NG = tmpNG
tmpZR = r1 == 0x0
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x80061c8:4]
r9 = r0
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x8017c76:4]
r0 = s17
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = ram[0x8017e04:4]
r1 = ram[0x8017e08:4]
r0 = *[ram]unique[0x11420:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8016520:4]
s15 = r6
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf930:1]) goto ram[0x8017d62:4]
r0 = r6
call ram[0x8002104:4]
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
tmpZR = r12 == 0x0
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
NG = tmpNG
tmpZR = r3 == 0x0
NG = tmpNG
tmpZR = r1 == 0x0
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x80061c8:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
r8 = r0
tmpZR = r10 == 0x0
if (unique[0xf740:1]) goto ram[0x8017b8c:4]
OV = tmpOV
if (unique[0xfaa0:1]) goto ram[0x8017e70:4]
tmpZR = r9 == 0x0
r0 = r6
call ram[0x80017ac:4]
r11 = ram[0x8017e04:4]
*[ram]unique[0x114b0:4] = register[0x34:4]
r2 = r0
r3 = r1
r0 = s17
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r6 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x8017e0c:4]
r0 = r6
call ram[0x8016520:4]
r0 = r7
r6 = *[ram]unique[0x112a0:4]
call ram[0x802b2c0:4]
r1 = ram[0x8017e10:4]
r2 = r0
r0 = r6
call ram[0x8016520:4]
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x8017e80:4]
r7 = ram[0x8017e14:4]
NG = tmpNG
OV = tmpOV
*[ram]unique[0x11460:4] = unique[0x17690:1]
unique[0xfc80:1] = unique[0xfc50:1] && unique[0xfc60:1]
tmpZR = r6 == 0x0
if (unique[0xf890:1]) goto ram[0x8017cf2:4]
NG = tmpNG
r0 = r4
call ram[0x802c180:4]
r0 = r8
call ram[0x8043ff0:4]
NG = tmpNG
r0 = r4
call ram[0x802c180:4]
OV = tmpOV
r0 = r9
call ram[0x8043ff0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8017cd0:4]
r0 = *[ram]unique[0x112a0:4]
r1 = ram[0x8017e18:4]
call ram[0x8016520:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf720:1]) goto ram[0x8017dd8:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8017dc6:4]
r0 = s17
call ram[0x8002104:4]
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
tmpZR = r12 == 0x0
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
NG = tmpNG
NG = tmpNG
tmpZR = r1 == 0x0
OV = tmpOV
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x80061c8:4]
tmpZR = r8 == 0x0
r9 = r0
goto ram[0x8017bde:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf720:1]) goto ram[0x8017e20:4]
r0 = s17
call ram[0x8002104:4]
NG = tmpNG
tmpZR = r12 == 0x0
OV = tmpOV
tmpZR = r2 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
tmpZR = r2 == 0x0
OV = tmpOV
tmpZR = r3 == 0x0
OV = tmpOV
tmpZR = r2 == 0x0
NG = tmpNG
NG = tmpNG
tmpZR = r3 == 0x0
OV = tmpOV
tmpZR = r1 == 0x0
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x80061c8:4]
tmpZR = r10 == 0x0
r9 = r0
r8 = r10
goto ram[0x8017bde:4]
OV = tmpOV
if (unique[0xfa10:1]) goto ram[0x8017c6a:4]
r0 = s18
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = ram[0x8017e04:4]
r1 = ram[0x8017e1c:4]
goto ram[0x8017bf4:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8017dc6:4]
tmpZR = r9 == 0x0
r8 = r9
goto ram[0x8017c76:4]
CALLOTHER 0x11, 0x18
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x8017e98:4]
NG = tmpNG
CALLOTHER 0x11, 0x48
NG = tmpNG
CALLOTHER 0x11, 0x60
NG = tmpNG
CALLOTHER 0x11, 0x9c
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
CALLOTHER 0x11, 0xac
NG = tmpNG
CALLOTHER 0x11, 0x20
NG = tmpNG
r0 = r6
call ram[0x80017ac:4]
r11 = ram[0x8017e8c:4]
*[ram]unique[0x114b0:4] = register[0x34:4]
r2 = r0
r3 = r1
r0 = s17
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r6 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x8017e84:4]
r0 = r6
call ram[0x8016520:4]
r0 = r7
r6 = *[ram]unique[0x112a0:4]
call ram[0x802b2c0:4]
r1 = ram[0x8017e88:4]
r2 = r0
r0 = r6
call ram[0x8016520:4]
NG = tmpNG
r9 = r0
r8 = r0
call ram[0x8043ff0:4]
goto ram[0x8017cc2:4]
r0 = r6
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = ram[0x8017e8c:4]
r1 = ram[0x8017e90:4]
goto ram[0x8017bf4:4]
r0 = r10
goto ram[0x8017e6a:4]
CALLOTHER 0x11, 0x60
NG = tmpNG
CALLOTHER 0x11, 0x9c
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x8017f20:4]
NG = tmpNG
CALLOTHER 0x11, 0x34
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = sp - unique[0xfdd0:4]
r12 = r1
r1 = r2
OV = tmpOV
r6 = r3
r3 = *[ram]unique[0x114b0:4]
if (unique[0xf890:1]) goto ram[0x8017eba:4]
r5 = ram[0x8017eec:4]
r0 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x8017eca:4]
r3 = ram[0x8017ef0:4]
r1 = ram[0x8017ef4:4]
r0 = *[ram]unique[0x11420:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8016520:4]
OV = tmpOV
r5 = r5 + r4
r0 = ram[0x8017ef8:4]
r2 = zext(unique[0x12120:1])
*[ram]unique[0x114b0:4] = register[0x28:4]
tmpZR = r4 == 0x0
tmpZR = r4 == 0x0
r2 = r6
r0 = r12
*[ram]unique[0x114b0:4] = register[0x30:4]
call ram[0x8014db0:4]
sp = sp + unique[0xfdd0:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x8017f84:4]
NG = tmpNG
CALLOTHER 0x11, 0xb4
NG = tmpNG
r0 = sext(unique[0x11f30:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = sp - unique[0xfdd0:4]
r5 = r2
r4 = r0
r0 = ram[0x8017f20:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
call ram[0x8014690:4]
r3 = *[ram]unique[0x114b0:4]
r1 = ram[0x8017f24:4]
*[ram]unique[0x114b0:4] = register[0x34:4]
r2 = r4
call ram[0x8017ea0:4]
sp = sp + unique[0xfdd0:4]
return pc
if (unique[0xf890:1]) goto ram[0x8017f0c:4]
NG = tmpNG
CALLOTHER 0x5, 0x8, cr0, unique[0x11520:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
sp = sp - unique[0xfdd0:4]
r0 = r1
*[ram]unique[0x17820:4] = register[0x28:4]
call ram[0x8014690:4]
r2 = *[ram]unique[0x12270:4]
r1 = r4
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8017ea0:4]
sp = mult_addr + 0x4
r6 = r0
sp = sp - unique[0xfdd0:4]
r0 = r1
r7 = r2
r8 = r3
call ram[0x8014690:4]
OV = tmpOV
OV = tmpOV
r3 = *[ram]unique[0x114b0:4]
r2 = r0
if (unique[0xf7b0:1]) goto ram[0x8017f92:4]
r0 = ram[0x8017fa4:4]
r1 = ram[0x8017fa8:4]
r0 = r0 + r2
tmpZR = r5 == 0x0
r4 = zext(unique[0x12120:1])
*[ram]unique[0x114b0:4] = register[0x30:4]
tmpZR = r5 == 0x0
*[ram]unique[0x114b0:4] = register[0x34:4]
r2 = r8
r1 = r7
r0 = r6
call ram[0x8014db0:4]
sp = sp + unique[0xfdd0:4]
return pc
r3 = ram[0x8017fac:4]
r1 = ram[0x8017fb0:4]
r0 = *[ram]unique[0x11420:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8016520:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176b0:1]
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x8018040:4]
NG = tmpNG
CALLOTHER 0x11, 0xb4
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = sp - unique[0xfdd0:4]
r12 = r1
r1 = r2
OV = tmpOV
r6 = r3
r3 = *[ram]unique[0x114b0:4]
if (unique[0xf890:1]) goto ram[0x8017fda:4]
r5 = ram[0x801800c:4]
r0 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x8017fea:4]
r3 = ram[0x8018010:4]
r1 = ram[0x8018014:4]
r0 = *[ram]unique[0x11420:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8016520:4]
OV = tmpOV
r5 = r5 + r4
r0 = ram[0x8018018:4]
r2 = zext(unique[0x12120:1])
*[ram]unique[0x114b0:4] = register[0x28:4]
tmpZR = r4 == 0x0
tmpZR = r4 == 0x0
r2 = r6
r0 = r12
*[ram]unique[0x114b0:4] = register[0x30:4]
call ram[0x8014db0:4]
sp = sp + unique[0xfdd0:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x80180a4:4]
NG = tmpNG
CALLOTHER 0x11, 0xb4
NG = tmpNG
r0 = sext(unique[0x11f30:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = sp - unique[0xfdd0:4]
r5 = r2
r4 = r0
r0 = ram[0x8018040:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
call ram[0x8014690:4]
r3 = *[ram]unique[0x114b0:4]
r1 = ram[0x8018044:4]
*[ram]unique[0x114b0:4] = register[0x34:4]
r2 = r4
call ram[0x8017fc0:4]
sp = sp + unique[0xfdd0:4]
return pc
if (unique[0xf890:1]) goto ram[0x801802c:4]
NG = tmpNG
CALLOTHER 0x5, 0x8, cr0, unique[0x11520:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
sp = sp - unique[0xfdd0:4]
r0 = r1
*[ram]unique[0x17820:4] = register[0x28:4]
call ram[0x8014690:4]
r2 = *[ram]unique[0x12270:4]
r1 = r4
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8017fc0:4]
sp = mult_addr
r5 = ram[0x80180ec:4]
r1 = ram[0x80180f0:4]
r4 = ram[0x80180f4:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8016520:4]
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
*[ram]unique[0x17820:4] = register[0x28:4]
call ram[0x800a650:4]
tmpZR = r3 == 0x0
r2 = r0
r0 = ram[0x80180f8:4]
*[ram]unique[0x11480:4] = unique[0x176b0:1]
call ram[0x800a6a0:4]
r0 = ram[0x80180f8:4]
call ram[0x800a820:4]
r4 = r0
r0 = ram[0x80180fc:4]
call ram[0x800a6a0:4]
r0 = ram[0x80180fc:4]
call ram[0x800a820:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r1 = ram[0x8018100:4]
r0 = *[ram]unique[0x11420:4]
unique[0xfae0:1] = ZR != 0x0
r1 = ram[0x8018104:4]
call ram[0x8016520:4]
r3 = ram[0x8018108:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x80180dc:4]
r4 = ram[0x801810c:4]
r0 = ram[0x8018110:4]
r1 = ram[0x8018114:4]
r2 = ram[0x8018118:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
sp = mult_addr
r1 = ram[0x801811c:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]

r4 = *[ram]unique[0x11420:4]
NG = tmpNG
CALLOTHER 0x11, 0xc8
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
unique[0xfae0:1] = ZR != 0x0
tmpZR = r4 == 0x0
unique[0xfb00:1] = CY != 0x0
tmpZR = r4 == 0x0
NG = tmpNG
NG = tmpNG
r4 = zext(unique[0x11eb0:1])
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
sp = mult_addr
call ram[0x80239a0:4]
sp = mult_addr
goto ram[0x8018070:4]

sp = mult_addr
r2 = ram[0x8018148:4]
r3 = ram[0x801814c:4]
r1 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x800b6d0:4]
sp = mult_addr
goto ram[0x8018070:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
sp = mult_addr + 0x4
r3 = ram[0x80181b8:4]
r5 = ram[0x80181bc:4]
r6 = *[ram]unique[0x112a0:4]
r7 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
sp = sp - unique[0xfdd0:4]
r4 = r0
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r3 = r1
r2 = r0
*[ram]unique[0x17820:4] = register[0x2c:4]
r1 = ram[0x80181c0:4]
r2 = r6
r0 = r7
call ram[0x8016520:4]
r0 = r6
r6 = *[ram]unique[0x11420:4]
call ram[0x80344a0:4]
r0 = s0
call ram[0x80017ac:4]
tmpZR = r3 == 0x0
r4 = r0
r0 = *[ram]unique[0x11420:4]
r5 = r1
call ram[0x80017ac:4]
r8 = r0
r9 = r1
*[ram]unique[0x17820:4] = register[0x44:4]
r1 = ram[0x80181c4:4]
r2 = r4
r3 = r5
r0 = r6
call ram[0x8016520:4]
sp = sp + unique[0xfdd0:4]
return pc

OV = tmpOV
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x8018248:4]
NG = tmpNG
unique[0xfb20:1] = CY != 0x0
tmpZR = r4 == 0x0
unique[0xfb60:1] = NG != 0x0
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r2 = *[ram]unique[0x11420:4]
NG = tmpNG
sp = mult_addr
r4 = r0
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bd0:1]) goto ram[0x80181e4:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
return pc
r0 = ram[0x8018210:4]
r1 = ram[0x8018214:4]
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x28:4]
tmpZR = r0 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x24:4]
call ram[0x803b460:4]
r3 = ram[0x8018218:4]
r1 = ram[0x801821c:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8016520:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r7 = mult_addr
NG = tmpNG
unique[0xfb80:1] = OV != 0x0
tmpZR = r4 == 0x0
r2 = ram[0x8018230:4]
r3 = ram[0x8018234:4]
r2 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x8018238:4]
goto ram[0x8016520:4]

r0 = *[ram]unique[0x11420:4]
NG = tmpNG
r7 = mult_addr
NG = tmpNG
unique[0xfba0:1] = OV != 0x0
tmpZR = r4 == 0x0
NG = tmpNG
NG = tmpNG
r2 = r0
r1 = ram[0x801824c:4]
r0 = ram[0x8018250:4]
goto ram[0x8016520:4]

