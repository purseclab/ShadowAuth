r3 = *[ram]unique[0x112a0:4]
sp = mult_addr
r5 = *[ram]unique[0x112a0:4]
OV = tmpOV
unique[0xfc20:1] = NG == OV
r5 = r3
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x80300c8:4]
r6 = *[ram]unique[0x112a0:4]
OV = tmpOV
r2 = r4
if (unique[0xf740:1]) goto ram[0x8030028:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x803001e:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x803002c:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8030026:4]
tmpZR = r2 == 0x0
OV = tmpOV
s13 = *[ram]unique[0x41f0:4]
r2 = r1
if (unique[0xf740:1]) goto ram[0x8030044:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x803003a:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x8030048:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8030042:4]
tmpZR = r2 == 0x0
s15 = *[ram]unique[0x41f0:4]
OV = tmpOV
s13 = s13 f- s15
if (unique[0xf6a0:1]) goto ram[0x80300ae:4]
OV = tmpOV
OV = tmpOV
r2 = r1
if (unique[0xf800:1]) goto ram[0x80300b4:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x8030060:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x80300ba:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8030068:4]
OV = tmpOV
tmpZR = r2 == 0x0
OV = tmpOV
s15 = *[ram]unique[0x41f0:4]
r2 = r5
if (unique[0xf800:1]) goto ram[0x8030088:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x803007e:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x803008c:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8030086:4]
tmpZR = r2 == 0x0
s14 = *[ram]unique[0x41f0:4]
s15 = s15 f- s14
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
unique[0xfc80:1] = unique[0xfc50:1] && unique[0xfc60:1]
r4 = r1
s13 = s15
OV = tmpOV
r1 = r5
if (unique[0xf6c0:1]) goto ram[0x803005a:4]
r0 = r4
sp = mult_addr
return pc
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x8030068:4]
goto ram[0x803006e:4]
tmpZR = r2 == 0x0
OV = tmpOV
s15 = *[ram]unique[0x41f0:4]
r2 = r5
goto ram[0x803007e:4]
NG = tmpNG
r0 = r4
sp = mult_addr
return pc
r3 = ram[0x803012c:4]
sp = mult_addr
r5 = *[ram]unique[0x11420:4]
r6 = CALLOTHER 0x24
CALLOTHER 0x21
r2 = ram[0x8030130:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
unique[0xfb00:1] = CY != 0x0
r7 = ram[0x8030134:4]
tmpZR = r4 == 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x30:4]
if (unique[0x11bd0:1]) goto ram[0x80300f4:4]
CALLOTHER 0x1e
r2 = ram[0x8030138:4]
r4 = ram[0x803013c:4]
*[ram]unique[0x177b0:4] = unique[0x177d0:1]
tmpZR = r0 == 0x0
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
r4 = *[ram]unique[0x11420:4]
tmpZR = r1 == 0x0
r1 = sext(unique[0x17f90:1])
CY = shift_carry
*[ram]unique[0x11460:4] = unique[0x17690:1]
unique[0xfac0:1] = ZR != 0x0
r1 = ram[0x8030140:4]
r1 = *[ram]unique[0x11420:4]
r3 = r3 + r2
unique[0xfac0:1] = ZR != 0x0
r1 = zext(unique[0x12120:1])
tmpZR = r1 == 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x34:4]
sp = mult_addr
return pc

NG = tmpNG
goto ram[0x8030132:4]
goto ram[0x80302e4:4]
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
CALLOTHER 0xc, 0x0, cr14, unique[0x114f0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x8030176:4]
sp = mult_addr
r6 = ram[0x8030178:4]
r7 = ram[0x803017c:4]
r0 = r2
r1 = r3
NG = tmpNG
NG = tmpNG
call ram[0x8006128:4]
r5 = *[ram]unique[0x12270:4]
r2 = r0
r3 = r1
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
return pc
return pc
goto [unique[0x11ac0:4]]
NG = tmpNG
goto [unique[0x11ac0:4]]
NG = tmpNG
r3 = ram[0x8030188:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
r2 = *[ram]unique[0x12270:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x28:4]
return pc

NG = tmpNG
sp = mult_addr
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
sp = sp + 0x4
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc

sp = mult_addr
NG = tmpNG
tmpZR = r3 == 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]
r5 = r0
r4 = r1
*[ram]unique[0x4230:4] = register[0x300:4]
*[ram]unique[0x4230:4] = register[0x304:4]
if (unique[0x11bf0:1]) goto ram[0x80301e6:4]
r1 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
unique[0xfc40:1] = NG == OV
r4 = r1
*[ram]unique[0x11420:4] = register[0x30:4]
return pc
s0 = s0 f+ s1
s15 = 0x3f000000
s0 = s0 f* s15
s1 = 0x3f800000
call ram[0x8015900:4]
