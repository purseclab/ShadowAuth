sp = mult_addr
mult_addr = mult_addr + 0x8
r4 = r0
call ram[0x8030000:4]
OV = tmpOV
r3 = *[ram]unique[0x112a0:4]
r2 = r1
if (unique[0xf800:1]) goto ram[0x80323cc:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x80322e6:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x80323d2:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x80322ee:4]
tmpZR = r2 == 0x0
s16 = *[ram]unique[0x41f0:4]
OV = tmpOV
if (unique[0xf740:1]) goto ram[0x803230a:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x8032300:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x803230e:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x8032308:4]
r5 = ram[0x80323e0:4]
tmpZR = r2 == 0x0
s0 = *[ram]unique[0x41f0:4]
s15 = *[ram]unique[0x4230:4]
s0 = s16 f- s0
s16 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
tmpZR = r2 == 0x0
s16 = s16 f* s0
s15 = *[ram]unique[0x41f0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf740:1]) goto ram[0x8032388:4]
r6 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x80323be:4]
r4 = ram[0x80323e4:4]
r0 = ram[0x80323e8:4]
s15 = r6
r2 = r4
s0 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
tmpZR = r1 == 0x0
NG = tmpNG
call ram[0x801ae10:4]
s15 = s0
s16 = s16 f* s15
s0 = *[ram]unique[0x4210:4]
s0 = s16 f* s0
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8032382:4]
r3 = ram[0x80323ec:4]
*[ram]unique[0x112a0:4] = register[0x38:4]
*[ram]unique[0x4230:4] = register[0x300:4]
*[ram]unique[0x4230:4] = register[0x33c:4]
mult_addr = mult_addr + 0x8
return pc
tmpZR = r3 == 0x0
s15 = *[ram]unique[0x41f0:4]
s15 = 0x0 f- s15
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf890:1]) goto ram[0x80323b2:4]
tmpZR = r3 == 0x0
s0 = *[ram]unique[0x41f0:4]
s15 = *[ram]unique[0x42b0:4]
s0 = s16 f* s0
NG = tmpNG
goto ram[0x803236c:4]
s15 = *[ram]unique[0x42b0:4]
NG = tmpNG
s0 = s15
goto ram[0x803236c:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
unique[0xfcc0:1] = unique[0xfc90:1] && unique[0xfca0:1]
tmpZR = r6 == 0x0
tmpZR = r6 == 0x0
goto ram[0x8032344:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x80322ee:4]
goto ram[0x80322f4:4]
tmpZR = r2 == 0x0
s16 = *[ram]unique[0x41f0:4]
OV = tmpOV
goto ram[0x8032300:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
goto [pc]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
call ram[0x8030000:4]
OV = tmpOV
r3 = *[ram]unique[0x112a0:4]
r1 = r2
if (unique[0xf800:1]) goto ram[0x8032448:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x8032412:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x803244e:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x803241a:4]
tmpZR = r1 == 0x0
OV = tmpOV
s0 = *[ram]unique[0x41f0:4]
if (unique[0xf740:1]) goto ram[0x8032430:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x803242c:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x803243a:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x8032434:4]
tmpZR = r2 == 0x0
s15 = *[ram]unique[0x41f0:4]
s0 = s0 f- s15
return pc
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x803241a:4]
goto ram[0x8032420:4]
tmpZR = r1 == 0x0
s0 = *[ram]unique[0x41f0:4]
OV = tmpOV
goto ram[0x803242c:4]

NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = sp - unique[0xfdd0:4]
NG = tmpNG
r0 = sp
call ram[0x8022220:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x803247c:4]
s0 = 0x3f800000
sp = sp + unique[0xfdd0:4]
return pc
r2 = ram[0x8032494:4]
r0 = ram[0x8032498:4]
s0 = *[ram]unique[0x4230:4]
tmpZR = r1 == 0x0
NG = tmpNG
sp = sp + unique[0xfdd0:4]
sp = sp + 0x4
goto ram[0x801ae10:4]
r6 = 0x80324f8
NG = tmpNG
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
sp = sp - unique[0xfdd0:4]
NG = tmpNG
r0 = sp
call ram[0x8022220:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x80324bc:4]
s0 = 0x3f800000
sp = sp + unique[0xfdd0:4]
return pc
r2 = ram[0x80324d4:4]
r0 = ram[0x80324d8:4]
s0 = *[ram]unique[0x4230:4]
tmpZR = r1 == 0x0
NG = tmpNG
sp = sp + unique[0xfdd0:4]
sp = sp + 0x4
goto ram[0x801ae10:4]
r5 = 0x8032738
NG = tmpNG
goto [pc]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x8032514:4]
r0 = s0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80324f8:4]
r2 = ram[0x8032518:4]
r0 = ram[0x803251c:4]
tmpZR = r1 == 0x0
NG = tmpNG
goto ram[0x801ae10:4]
sp = mult_addr
call ram[0x80017ac:4]
r2 = r0
r3 = r1
tmpZR = r0 == 0x0
r1 = ram[0x8032520:4]
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
return pc

NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r4 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
call [pc]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r2 = ram[0x803256c:4]
r3 = ram[0x8032570:4]
mult_addr = mult_addr + 0x8
r4 = r0
r0 = *[ram]unique[0x112a0:4]
s17 = *[ram]unique[0x41f0:4]
call ram[0x80302f0:4]
s15 = r0
s16 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
r0 = r4
call ram[0x80144a0:4]
s16 = s16 f* s17
s15 = *[ram]unique[0x42b0:4]
s16 = s16 f* s15
s0 = s16 f/ s0
mult_addr = mult_addr + 0x8
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80325cc:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf9c0:1]) goto ram[0x803269e:4]
goto [pc]
*[ram]unique[0x11440:4] = unique[0x176d0:2]
r7 = zext(unique[0x11eb0:1])
r3 = zext(unique[0x11eb0:1])
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r7 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
