sp = mult_addr
r5 = ram[0x802ccf0:4]
r1 = ram[0x802ccf4:4]
r0 = ram[0x802ccf8:4]
call ram[0x8016520:4]
r4 = *[ram]unique[0x11420:4]
call ram[0x8014ae0:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r4 == 0x0
tmpZR = r3 == 0x0
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
sp = mult_addr
goto ram[0x800e180:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x802cd28:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x802cd16:4]
tmpZR = r0 == 0x0
OV = tmpOV
r0 = *[ram]unique[0x112a0:4]
return pc
r1 = ram[0x802cd2c:4]
tmpZR = r2 == 0x0
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x802cd0a:4]
r0 = *[ram]unique[0x112a0:4]
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
sp = sp - unique[0xfdd0:4]
r3 = r0
NG = tmpNG
