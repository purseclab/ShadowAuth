sp = mult_addr
call ram[0x8014d10:4]
call ram[0x80417c0:4]
r2 = ram[0x8041a34:4]
r1 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bf0:1]) goto ram[0x8041a24:4]
r2 = ram[0x8041a38:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8041a24:4]
r0 = *[ram]unique[0x11420:4]
call [pc]
call ram[0x8041790:4]
call ram[0x8014d00:4]
sp = mult_addr
goto ram[0x80409e0:4]
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x8041a64:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8041a5c:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8041a5c:4]
NG = tmpNG
call ram[0x8034370:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
r0 = ram[0x8041a68:4]
call ram[0x8040b00:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x8041a94:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8041a7e:4]
