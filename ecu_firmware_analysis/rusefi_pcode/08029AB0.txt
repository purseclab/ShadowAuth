sp = mult_addr
mult_addr = mult_addr + 0x8
r4 = r0
sp = sp - unique[0xfdd0:4]
NG = tmpNG
r5 = r1
call ram[0x80343b0:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8029ad8:4]
NG = tmpNG
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8034390:4]
r6 = ram[0x8029c80:4]
NG = tmpNG
call ram[0x80343b0:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8029b80:4]
r4 = ram[0x8029c84:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8029b8c:4]
r3 = ram[0x8029c88:4]
r3 = zext(unique[0x11eb0:1])
if (unique[0x11bd0:1]) goto ram[0x8029b02:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8029b78:4]
r7 = ram[0x8029c8c:4]
r2 = ram[0x8029c90:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
r5 = zext(unique[0x123a0:2])
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xfaa0:1]) goto ram[0x8029c6c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8029bf0:4]
s15 = r5
s16 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
r4 = ram[0x8029c94:4]
r2 = ram[0x8029c98:4]
r3 = *[ram]unique[0x11420:4]
r0 = ram[0x8029c9c:4]
tmpZR = r1 == 0x0
s15 = *[ram]unique[0x41f0:4]
r1 = *[ram]unique[0x120f0:4]
s15 = s15 f+ s16
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
OV = tmpOV
*[ram]unique[0x41f0:4] = register[0x33c:4]
*[ram]unique[0x17740:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x8040900:4]
r3 = ram[0x8029ca0:4]
r2 = ram[0x8029ca4:4]
s15 = *[ram]unique[0x41f0:4]
s16 = s15 f+ s16
*[ram]unique[0x41f0:4] = register[0x340:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8029c66:4]
NG = tmpNG
call ram[0x8034390:4]
goto ram[0x8029ac8:4]
r1 = ram[0x8029ca8:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x8029b78:4]
r3 = ram[0x8029cac:4]
r0 = ram[0x8029cb0:4]
r1 = zext(unique[0x12120:1])
call ram[0x8028860:4]
s15 = r0
s1 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
*[ram]unique[0x4230:4] = register[0x304:4]
call ram[0x8014ae0:4]
r3 = ram[0x8029cb4:4]
r7 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
s1 = *[ram]unique[0x4230:4]
tmpZR = r3 == 0x0
r3 = *[ram]unique[0x12270:4]
if (unique[0x11bd0:1]) goto ram[0x8029bc8:4]
s0 = *[ram]unique[0x42b0:4]
call ram[0x8034a70:4]
goto ram[0x8029af4:4]
OV = tmpOV
tmpZR = r1 == 0x0
call ram[0x8002060:4]
s15 = r7
s13 = *[ram]unique[0x42b0:4]
s1 = *[ram]unique[0x4230:4]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
s14 = s13 f/ s15
s15 = r0
s0 = s15 f/ s14
goto ram[0x8029bc2:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x8029b26:4]
r3 = ram[0x8029cac:4]
s14 = *[ram]unique[0x42b0:4]
s13 = *[ram]unique[0x4230:4]
s0 = *[ram]unique[0x4230:4]
s15 = s13 f/ s14
s14 = r5
s16 = CALLOTHER 0xc4, s14, unique[0x31a0:1]
s15 = s15 f* s16
s0 = s15 f* s0
call ram[0x80231e0:4]
*[ram]unique[0x4230:4] = register[0x300:4]
call ram[0x8014ae0:4]
r3 = ram[0x8029cb4:4]
r4 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
s1 = *[ram]unique[0x4230:4]
tmpZR = r3 == 0x0
r3 = *[ram]unique[0x12270:4]
if (unique[0x11bf0:1]) goto ram[0x8029c78:4]
OV = tmpOV
tmpZR = r1 == 0x0
call ram[0x8002060:4]
s15 = r4
s13 = *[ram]unique[0x42b0:4]
s1 = *[ram]unique[0x4230:4]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
s14 = s13 f/ s15
s15 = r0
s0 = s15 f/ s14
call ram[0x8034a70:4]
goto ram[0x8029b2e:4]
call ram[0x80408b0:4]
goto ram[0x8029b78:4]
r1 = ram[0x8029cc4:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x8029b78:4]
s0 = *[ram]unique[0x42b0:4]
goto ram[0x8029c60:4]

NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
r3 = mult_addr
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x8029bc8:4]
NG = tmpNG
r4 = mult_addr
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x8029cd0:4]
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
r3 = *[ram]unique[0x114b0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r7 = *[ram]unique[0x114b0:4]
r3 = ram[0x802a014:4]
tmpZR = r5 == 0x0
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
call ram[0x8014ae0:4]
r3 = ram[0x8029d2c:4]
r3 = *[ram]unique[0x11420:4]
r5 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8029d12:4]
r3 = ram[0x8029d30:4]
r2 = r0
r0 = ram[0x8029d34:4]
r5 = *[ram]unique[0x11420:4]
r0 = zext(unique[0x11eb0:1])
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x34:4]
if (unique[0x11bd0:1]) goto ram[0x8029d12:4]
if (unique[0x11bf0:1]) goto ram[0x8029d08:4]
r3 = ram[0x8029d38:4]
r0 = zext(unique[0x12120:1])
sp = mult_addr
r0 = r0 >> unique[0x19d40:4]
r3 = r1
goto ram[0x80386a0:4]
r0 = ram[0x8029d3c:4]
tmpZR = r3 == 0x0
r3 = zext(unique[0x11ed0:1])
if (unique[0x11bd0:1]) goto ram[0x8029d14:4]
return pc
r3 = ram[0x8029d38:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
sp = mult_addr
unique[0xfae0:1] = ZR != 0x0
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
r3 = r1
goto ram[0x80386a0:4]
NG = tmpNG
NG = tmpNG
r4 = zext(unique[0x11f10:2])
NG = tmpNG
r2 = zext(unique[0x11f10:2])
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
OV = tmpOV
NG = tmpNG
sp = mult_addr
r4 = r0
call ram[0x8014ae0:4]
r3 = ram[0x8029da4:4]
r3 = *[ram]unique[0x11420:4]
r5 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8029d88:4]
r3 = ram[0x8029da8:4]
r2 = r0
r0 = ram[0x8029dac:4]
r5 = *[ram]unique[0x11420:4]
r0 = zext(unique[0x11eb0:1])
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x34:4]
if (unique[0x11bd0:1]) goto ram[0x8029d88:4]
if (unique[0x11bf0:1]) goto ram[0x8029d7e:4]
r3 = ram[0x8029db0:4]
r0 = zext(unique[0x12120:1])
r0 = r0 >> unique[0x19d40:4]
tmpZR = r0 == 0x0
sp = mult_addr
r0 = zext(unique[0x1a070:1])
r3 = r1
goto ram[0x80386a0:4]
r0 = ram[0x8029db4:4]
tmpZR = r3 == 0x0
r3 = zext(unique[0x11ed0:1])
if (unique[0x11bd0:1]) goto ram[0x8029d8a:4]
return pc
r3 = ram[0x8029db0:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
sp = mult_addr
unique[0xfae0:1] = ZR != 0x0
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
r3 = r1
goto ram[0x80386a0:4]

NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11f10:2])
NG = tmpNG
r2 = zext(unique[0x11f10:2])
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
call ram[0x8014ae0:4]
r3 = ram[0x8029e00:4]
r3 = *[ram]unique[0x11420:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8029dfe:4]
r6 = ram[0x8029e04:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
r5 = r0
r4 = r1
if (unique[0xf740:1]) goto ram[0x8029df2:4]
r0 = zext(unique[0x12120:1])
r2 = r5
r3 = r4
r0 = r0 >> unique[0x19d40:4]
sp = mult_addr
goto ram[0x803b140:4]
r2 = r0
r3 = r1
NG = tmpNG
call ram[0x80236d0:4]
goto ram[0x8029dde:4]
return pc
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
call ram[0x8014ae0:4]
r3 = ram[0x8029e58:4]
r3 = *[ram]unique[0x11420:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8029e56:4]
r4 = ram[0x8029e5c:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
r6 = r0
r5 = r1
if (unique[0xf740:1]) goto ram[0x8029e4a:4]
r4 = zext(unique[0x12120:1])
r4 = r4 >> unique[0x19d40:4]
tmpZR = r4 == 0x0
tmpZR = r0 == 0x0
r2 = r6
r3 = r5
sp = mult_addr
goto ram[0x803b140:4]
r2 = r0
r3 = r1
NG = tmpNG
call ram[0x80236d0:4]
goto ram[0x8029e2e:4]
return pc
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r2 = ram[0x8029ec8:4]
r0 = ram[0x8029ecc:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x8029ed0:4]
r0 = *[ram]unique[0x11420:4]
sp = mult_addr
r4 = ram[0x8029ed4:4]
OV = tmpOV
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r6 = *[ram]unique[0x11420:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8029ebc:4]
r4 = ram[0x8029ed8:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x8040900:4]
r5 = r0
tmpZR = r0 == 0x0
call ram[0x8021510:4]
tmpZR = r0 == 0x0
call ram[0x8021360:4]
if (unique[0x11bf0:1]) goto ram[0x8029eb6:4]
r3 = ram[0x8029ed0:4]
r2 = ram[0x8029edc:4]
r3 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
unique[0xfb20:1] = CY != 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
call ram[0x80408b0:4]
goto ram[0x8029ea4:4]
r1 = ram[0x8029ee0:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x8029ea4:4]
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
goto ram[0x8029ed6:4]
r0 = mult_addr
NG = tmpNG
OV = tmpOV
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r5 = ram[0x802a054:4]
r10 = ram[0x802a088:4]
r9 = ram[0x802a08c:4]
r8 = ram[0x802a064:4]
sp = sp - unique[0xfdd0:4]
tmpZR = r7 == 0x0
NG = tmpNG
r6 = *[ram]unique[0x11340:4]
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x8029f2a:4]
r0 = *[ram]unique[0x120f0:4]
call ram[0x8024650:4]
*[ram]unique[0x114b0:4] = register[0x38:4]
r2 = r0
tmpZR = r3 == 0x0
r1 = r9
r0 = r8
call ram[0x8016520:4]
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8029f0a:4]
r9 = ram[0x802a090:4]
r10 = ram[0x802a094:4]
r8 = ram[0x802a098:4]
r11 = ram[0x802a09c:4]
NG = tmpNG
r6 = zext(unique[0x1a070:1])
r0 = r6
call ram[0x803e8a0:4]
r7 = *[ram]unique[0x11340:4]
r2 = ram[0x802a058:4]
r5 = r0
NG = tmpNG
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8029f64:4]
r0 = *[ram]unique[0x11420:4]
r0 = r0 + r1
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8029faa:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8029f56:4]
r2 = r10
NG = tmpNG
r0 = r8
call ram[0x803f010:4]
