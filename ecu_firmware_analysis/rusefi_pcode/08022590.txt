sp = mult_addr
r5 = ram[0x80225d4:4]
r1 = ram[0x80225d8:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x112a0:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x80225c8:4]
r6 = ram[0x80225dc:4]
NG = tmpNG
NG = tmpNG
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80225d0:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x80225aa:4]
sp = mult_addr
goto ram[0x8022370:4]
call [pc]
goto ram[0x80225bc:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
CALLOTHER 0xc, 0x8, cr0, r1
sp = mult_addr
mult_addr = mult_addr + 0x8
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r5 = r1
r4 = r0
if (unique[0xf6a0:1]) goto ram[0x80226dc:4]
if (unique[0xf7e0:1]) goto ram[0x8022606:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r0 = r4
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80225f4:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8022726:4]
NG = tmpNG
r0 = sp
call ram[0x8022220:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8022644:4]
s1 = *[ram]unique[0x4230:4]
s15 = *[ram]unique[0x42b0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
unique[0xfb60:1] = NG != 0x0
s1 = s15
if (unique[0xf740:1]) goto ram[0x8022648:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
