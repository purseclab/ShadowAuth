sp = mult_addr + 0x4
OV = tmpOV
r5 = r3
NG = tmpNG
tmpZR = r3 == 0x0
r4 = r0
*[ram]unique[0x11440:4] = unique[0x176d0:2]
*[ram]unique[0x11340:4] = unique[0x17780:1]
NG = tmpNG
r7 = r2
tmpZR = r8 == 0x0
call ram[0x803ea40:4]
OV = tmpOV
if (unique[0x11bf0:1]) goto ram[0x8024a8c:4]
r12 = ram[0x8024aa8:4]
NG = tmpNG
r2 = r7
OV = tmpOV
r3 = zext(unique[0x12150:1])
NG = tmpNG
r3 = zext(unique[0x1a070:1])
OV = tmpOV
r3 = *[ram]unique[0x120f0:4]
tmpZR = r6 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8024a50:4]
NG = tmpNG
r6 = unique[0x14480:4] | unique[0x14430:4]
r0 = r4
*[ram]unique[0x112a0:4] = register[0x38:4]
NG = tmpNG
call ram[0x80248a0:4]
r2 = r5
r1 = r7
r0 = r4
call ram[0x80248a0:4]
r1 = r8
r0 = r4
NG = tmpNG
sp = mult_addr
goto ram[0x80248a0:4]
r0 = unique[0x14480:4] | unique[0x14430:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
NG = tmpNG
r0 = r4
call ram[0x80248a0:4]
r1 = r8
r0 = r4
NG = tmpNG
sp = mult_addr
goto ram[0x80248a0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r5 = r0
r3 = r1
r4 = r2
r1 = ram[0x8024ad8:4]
r0 = ram[0x8024adc:4]
r2 = r5
call ram[0x8016520:4]
r0 = ram[0x8024ae0:4]
call ram[0x801fba0:4]
NG = tmpNG
r0 = r4
r2 = r3
NG = tmpNG
call ram[0x8024a20:4]
NG = tmpNG
return pc
