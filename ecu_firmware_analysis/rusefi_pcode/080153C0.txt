sp = mult_addr
r5 = r1
r4 = r0
r1 = r2
r0 = r5
r2 = r3
call ram[0x8015340:4]
r3 = ram[0x80153fc:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
tmpZR = r0 == 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]
r0 = r4
call ram[0x8022820:4]
if (unique[0x11bf0:1]) goto ram[0x80153e4:4]
return pc
r2 = zext(unique[0x11eb0:1])
r3 = ram[0x8015400:4]
r1 = ram[0x8015404:4]
r2 = *[ram]unique[0x120f0:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x8015240:4]

NG = tmpNG
NG = tmpNG
goto ram[0x80154d4:4]
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x801545c:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r5 = ram[0x8015490:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
r6 = r0
if (unique[0xf890:1]) goto ram[0x8015450:4]
r8 = ram[0x801549c:4]
r9 = ram[0x80154a0:4]
r7 = ram[0x8015494:4]
NG = tmpNG
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8015482:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x801546e:4]
goto [pc]
OV = tmpOV
NG = tmpNG
NG = tmpNG
r3 = *[ram]unique[0x112a0:4]
*[ram]unique[0x11340:4] = register[0x28:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x801542c:4]
r2 = ram[0x8015498:4]
