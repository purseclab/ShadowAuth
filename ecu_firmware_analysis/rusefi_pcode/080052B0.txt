sp = mult_addr + 0x4
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80052fa:4]
r8 = r1
r6 = r0
tmpZR = r9 == 0x0
r4 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x80052ee:4]
r3 = zext(unique[0x11ef0:2])
OV = tmpOV
tmpZR = r5 == 0x0
if (unique[0xf7e0:1]) goto ram[0x80052e6:4]
r3 = sext(unique[0x12560:2])
OV = tmpOV
r1 = r4
r0 = r6
if (unique[0xf6a0:1]) goto ram[0x80052e6:4]
call [pc]
tmpZR = r9 == 0x0
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf6c0:1]) goto ram[0x80052ca:4]
r7 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80052c2:4]
r0 = r9
return pc
r9 = r7
r0 = r9
return pc

NG = tmpNG
goto ram[0x800530c:4]

OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r3 = ram[0x800531c:4]
r0 = zext(unique[0x11ed0:1])
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
return pc
*[ram]unique[0x11480:4] = register[0x34:4]
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x8005334:4]
sp = mult_addr
r1 = ram[0x8005354:4]
r0 = r2
r4 = r2
call ram[0x8003ac8:4]
if (unique[0x11bd0:1]) goto ram[0x8005338:4]
r0 = ram[0x8005358:4]
return pc
r0 = ram[0x8005358:4]
return pc
r1 = ram[0x8005358:4]
r0 = r4
call ram[0x8003ac8:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005330:4]
r0 = r4
r1 = ram[0x800535c:4]
call ram[0x8003ac8:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005330:4]
NG = tmpNG
return pc
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r3 = ram[0x8005368:4]
r0 = zext(unique[0x12120:1])
return pc
OV = tmpOV
NG = tmpNG
r3 = ram[0x8005378:4]
r2 = r1
r1 = r0
r0 = *[ram]unique[0x11420:4]
