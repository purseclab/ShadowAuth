sp = mult_addr
r0 = ram[0x802c754:4]
r4 = ram[0x802c758:4]
r1 = sext(unique[0x12420:1])
r1 = CALLOTHER 0x0, r1
sp = sp - unique[0xfdd0:4]
NG = tmpNG
call ram[0x802c180:4]
r1 = ram[0x802c75c:4]
r2 = ram[0x802c760:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
unique[0xfb60:1] = NG != 0x0
tmpZR = r3 == 0x0
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x28:4]
r0 = ram[0x802c764:4]
r2 = ram[0x802c768:4]
r6 = *[ram]unique[0x120f0:4]
r5 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x12270:4]
r1 = unique[0xfdc0:4]
mult_addr = mult_addr - 0x4
OV = tmpOV
mult_addr = mult_addr + 0x4
tmpZR = r3 == 0x0
r1 = ram[0x802c76c:4]
tmpZR = r0 == 0x0
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x801ea70:4]
sp = sp + unique[0xfdd0:4]
return pc
goto [unique[0x11ac0:4]]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0xf820:1]) goto ram[0x802c750:4]
NG = tmpNG
sp = mult_addr
r4 = r0
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802c77e:4]
NG = tmpNG
call ram[0x802c180:4]
r3 = *[ram]unique[0x11420:4]
s0 = *[ram]unique[0x42b0:4]
r3 = *[ram]unique[0x11420:4]
r0 = r4
sp = mult_addr
goto [pc]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802c7aa:4]
NG = tmpNG
goto ram[0x802c180:4]
return pc
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r7 = r3
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r6 = r1
if (unique[0xf7b0:1]) goto ram[0x802c85a:4]
r5 = r2
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
unique[0xfb20:1] = CY != 0x0
tmpZR = r9 == 0x0
tmpZR = r9 == 0x0
NG = tmpNG
r4 = r0
*[ram]unique[0x11460:4] = unique[0x17690:1]
if (unique[0xf720:1]) goto ram[0x802c824:4]
r1 = r5
r0 = r6
call ram[0x8024540:4]
