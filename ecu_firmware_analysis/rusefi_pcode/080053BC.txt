sp = mult_addr
r5 = ram[0x80053fc:4]
r4 = ram[0x8005400:4]
r6 = *[ram]unique[0x112a0:4]
r4 = *[ram]unique[0x11420:4]
sp = sp - unique[0xfdd0:4]
r5 = r3
if (unique[0x11bf0:1]) goto ram[0x80053e2:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r3 = r2
r2 = r1
r1 = r0
r0 = r4
call [pc]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80053f0:4]
sp = sp + unique[0xfdd0:4]
return pc
*[ram]unique[0x114b0:4] = register[0x2c:4]
r2 = ram[0x8005404:4]
NG = tmpNG
r0 = r4
call [pc]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80053de:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
sp = sp + unique[0xfdd0:4]
return pc
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
sp = mult_addr
r4 = ram[0x8005418:4]
r4 = *[ram]unique[0x112a0:4]
r12 = r4
sp = sp + 0x4
goto [pc]
OV = tmpOV
NG = tmpNG
sp = sp - unique[0xfdd0:4]
if (unique[0x11bf0:1]) goto ram[0x8005434:4]
if (unique[0x11bf0:1]) goto ram[0x800543a:4]
if (unique[0x11bf0:1]) goto ram[0x8005440:4]
r3 = zext(unique[0x11eb0:1])
*[ram]unique[0x11420:4] = register[0x2c:4]
r2 = zext(unique[0x11eb0:1])
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
tmpZR = r0 == 0x0
sp = sp + unique[0xfdd0:4]
return pc
r1 = unique[0xfdc0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8005422:4]
r0 = r2
sp = sp + unique[0xfdd0:4]
return pc
tmpZR = r0 == 0x0
