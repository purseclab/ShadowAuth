sp = mult_addr + 0x4
r11 = ram[0x8030588:4]
mult_addr = mult_addr + 0x8
r3 = zext(unique[0x12120:1])
NG = tmpNG
sp = sp - unique[0xfdd0:4]
r5 = r5 >> unique[0x19d40:4]
if (unique[0xf720:1]) goto ram[0x8030354:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r3 = ram[0x8030578:4]
r4 = r0
r10 = *[ram]unique[0x112a0:4]
call ram[0x8025d50:4]
NG = tmpNG
tmpZR = r0 == 0x0
CALLOTHER 0x1, 0xa, 0xb, 0x6, cr8, cr13, cr0
call ram[0x8022220:4]
r3 = *[ram]unique[0x112a0:4]
r9 = *[ram]unique[0x112a0:4]
r6 = *[ram]unique[0x112a0:4]
tmpZR = r2 == 0x0
s17 = *[ram]unique[0x41f0:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x80304a6:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8030448:4]
r0 = zext(unique[0x12120:1])
r7 = ram[0x803057c:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8030494:4]
r2 = *[ram]unique[0x11420:4]
r8 = zext(unique[0x12120:1])
tmpZR = r3 == 0x0
r7 = zext(unique[0x11ed0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8030454:4]
r3 = *[ram]unique[0x112a0:4]
r2 = s16
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x803048e:4]
r5 = zext(unique[0x12120:1])
r5 = r5 >> unique[0x19d40:4]
tmpZR = r5 == 0x0
r5 = zext(unique[0x1a070:1])
tmpZR = r8 == 0x0
call ram[0x8014ae0:4]
r2 = ram[0x803057c:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x803034a:4]
r2 = ram[0x803057c:4]
s15 = *[ram]unique[0x41f0:4]
r1 = *[ram]unique[0x11420:4]
r2 = ram[0x8030580:4]
r3 = zext(unique[0x12120:1])
*[ram]unique[0x112a0:4] = register[0x40:4]
s13 = r3
r3 = zext(unique[0x12120:1])
*[ram]unique[0x112a0:4] = register[0x34:4]
s14 = r3
tmpZR = r3 == 0x0
OV = tmpOV
s13 = CALLOTHER 0xc5, s13, unique[0x3240:1]
s14 = CALLOTHER 0xc5, s14, unique[0x3240:1]
s15 = CALLOTHER 0xc5, s15, unique[0x3240:1]
r3 = zext(unique[0x11ed0:1])
*[ram]unique[0x112a0:4] = unique[0x17850:2]
unique[0xfc20:1] = NG == OV
tmpZR = r6 == 0x0
tmpZR = r6 == 0x0
*[ram]unique[0x112a0:4] = register[0x38:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x4230:4] = register[0x334:4]
*[ram]unique[0x4230:4] = register[0x338:4]
*[ram]unique[0x4230:4] = register[0x33c:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r7 = r5
r8 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80303a8:4]
s15 = r9
s14 = *[ram]unique[0x4230:4]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf740:1]) goto ram[0x80303a8:4]
r2 = *[ram]unique[0x112a0:4]
r3 = s16
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x8030482:4]
r2 = zext(unique[0x12120:1])
NG = tmpNG
r1 = r1 >> unique[0x19d40:4]
if (unique[0xf720:1]) goto ram[0x80304c8:4]
if (unique[0x11bf0:1]) goto ram[0x80304c4:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x80304ce:4]
r8 = r7
r5 = r7
goto ram[0x80303c6:4]
tmpZR = r8 == 0x0
goto ram[0x80303c6:4]
r8 = *[ram]unique[0x112a0:4]
call ram[0x8025110:4]
tmpZR = r2 == 0x0
*[ram]unique[0x177b0:4] = unique[0x177d0:1]
goto ram[0x8030396:4]
r0 = zext(unique[0x12120:1])
r7 = ram[0x803057c:4]
if (unique[0x11bd0:1]) goto ram[0x80304b6:4]
r3 = *[ram]unique[0x11420:4]
r7 = zext(unique[0x12120:1])
goto ram[0x803044a:4]
r8 = *[ram]unique[0x112a0:4]
call ram[0x8025110:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
goto ram[0x80304ae:4]
r5 = r8
goto ram[0x80303c6:4]
r8 = r1
NG = tmpNG
goto ram[0x80303c6:4]
call ram[0x8014ae0:4]
s15 = *[ram]unique[0x42b0:4]
r4 = *[ram]unique[0x12270:4]
s17 = s17 f* s15
OV = tmpOV
s15 = s17 f* s15
*[ram]unique[0x114b0:4] = register[0x2c:4]
r0 = s15
tmpZR = r3 == 0x0
*[ram]unique[0x114b0:4] = register[0x2c:4]
call ram[0x80020dc:4]
OV = tmpOV
tmpZR = r2 == 0x0
OV = tmpOV
tmpZR = r1 == 0x0
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r2 == 0x0
*[ram]unique[0x114b0:4] = register[0x2c:4]
tmpZR = r3 == 0x0
*[ram]unique[0x114b0:4] = register[0x2c:4]
r1 = *[ram]unique[0x12270:4]
NG = tmpNG
tmpZR = r2 == 0x0
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x28:4]
r2 = *[ram]unique[0x12270:4]
r4 = *[ram]unique[0x12270:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x8030540:4]
r2 = ram[0x803057c:4]
r2 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r2 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x8030552:4]
r2 = ram[0x803057c:4]
r2 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r2 = zext(unique[0x12120:1])
NG = tmpNG
r5 = r5 >> unique[0x19d40:4]
if (unique[0xf740:1]) goto ram[0x803056e:4]
r3 = ram[0x803057c:4]
*[ram]unique[0x114b0:4] = register[0x34:4]
r2 = *[ram]unique[0x11420:4]
NG = tmpNG
r8 = r5
*[ram]unique[0x112a0:4] = unique[0x17760:1]
goto ram[0x80303e2:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
r5 = r8
goto ram[0x80303e2:4]

OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
NG = tmpNG
r2 = r2 + unique[0xfd40:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
goto ram[0x802e770:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r5 = ram[0x803064c:4]
r7 = *[ram]unique[0x11420:4]
sp = sp - unique[0xfdd0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8030648:4]
r4 = ram[0x8030650:4]
r6 = r4
r0 = *[ram]unique[0x112d0:4]
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x8030654:4]
r0 = r7
call ram[0x8016520:4]
r0 = *[ram]unique[0x11300:4]
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = *[ram]unique[0x11300:4]
r6 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x8030658:4]
r0 = r6
call ram[0x8016520:4]
r0 = *[ram]unique[0x11300:4]
call ram[0x80017ac:4]
r3 = r1
tmpZR = r1 == 0x0
r2 = r0
*[ram]unique[0x114b0:4] = register[0x24:4]
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x803065c:4]
call ram[0x8016520:4]
tmpZR = r3 == 0x0
tmpZR = r4 == 0x0
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x8030660:4]
r0 = r4
call ram[0x8016520:4]
sp = sp + unique[0xfdd0:4]
return pc
if (unique[0xf6e0:1]) goto ram[0x8030658:4]
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
OV = tmpOV
NG = tmpNG
OV = tmpOV
NG = tmpNG
r4 = r0
NG = tmpNG
r0 = r4
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x80306aa:4]
r3 = ram[0x80306b8:4]
r5 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
tmpZR = r0 == 0x0
NG = tmpNG
call ram[0x800557c:4]
tmpZR = r6 == 0x0
OV = tmpOV
tmpZR = r2 == 0x0
tmpZR = r1 == 0x0
unique[0xfb00:1] = CY != 0x0
tmpZR = r4 == 0x0
NG = tmpNG
*[ram]unique[0x11480:4] = register[0x2c:4]
*[ram]unique[0x11480:4] = register[0x30:4]
*[ram]unique[0x11480:4] = register[0x2c:4]
sp = mult_addr
goto ram[0x80305a0:4]
r3 = ram[0x80306bc:4]
r1 = ram[0x80306c0:4]
r0 = *[ram]unique[0x11420:4]
sp = mult_addr
goto ram[0x8016520:4]
NG = tmpNG
NG = tmpNG
if (unique[0xf6e0:1]) goto ram[0x80306c8:4]
NG = tmpNG
r4 = r6
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8030706:4]
r3 = ram[0x8030714:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
r0 = r3
NG = tmpNG
call ram[0x800557c:4]
OV = tmpOV
unique[0xfb00:1] = CY != 0x0
tmpZR = r4 == 0x0
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x30:4]
*[ram]unique[0x112a0:4] = register[0x28:4]
sp = mult_addr
*[ram]unique[0x112a0:4] = register[0x28:4]
goto ram[0x80305a0:4]
r3 = ram[0x8030718:4]
r1 = ram[0x803071c:4]
r0 = *[ram]unique[0x11420:4]
sp = mult_addr
goto ram[0x8016520:4]
NG = tmpNG
NG = tmpNG
if (unique[0xf6e0:1]) goto ram[0x8030724:4]
NG = tmpNG
r4 = r6
NG = tmpNG
r3 = ram[0x803072c:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
goto ram[0x80305a0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r3 = ram[0x803073c:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
goto ram[0x80305a0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r3 = ram[0x803074c:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
goto ram[0x80305a0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r3 = ram[0x803075c:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
goto ram[0x80305a0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r3 = ram[0x803076c:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
goto ram[0x80305a0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r3 = ram[0x803077c:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
goto ram[0x80305a0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r3 = ram[0x803078c:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
goto ram[0x80305a0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r3 = ram[0x80307a0:4]
r1 = ram[0x80307a4:4]
r2 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x80307a8:4]
goto ram[0x8016520:4]
if (unique[0xf860:1]) goto ram[0x80306c4:4]
NG = tmpNG
if (unique[0xf6e0:1]) goto ram[0x80307a8:4]
NG = tmpNG
r0 = r10
NG = tmpNG
NG = tmpNG
NG = tmpNG
r1 = ram[0x8030844:4]
r3 = ram[0x8030848:4]
r2 = ram[0x803084c:4]
sp = mult_addr + 0x4
r5 = *[ram]unique[0x11420:4]
r4 = ram[0x8030850:4]
r7 = ram[0x8030854:4]
tmpZR = r1 == 0x0
sp = sp - unique[0xfdd0:4]
r4 = zext(unique[0x11ed0:1])
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x8030858:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r2 = r3
call ram[0x8016520:4]
r3 = ram[0x803085c:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r3 = r1
r1 = ram[0x8030860:4]
r4 = *[ram]unique[0x11420:4]
r2 = r0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
tmpZR = r6 == 0x0
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x24:4]
r3 = *[ram]unique[0x12270:4]
r1 = ram[0x8030864:4]
r0 = r4
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
if (unique[0x11bf0:1]) goto ram[0x803083c:4]
tmpZR = r5 == 0x0
r8 = ram[0x8030868:4]
OV = tmpOV
NG = tmpNG
r0 = *[ram]unique[0x112d0:4]
r9 = *[ram]unique[0x112a0:4]
call ram[0x80017ac:4]
r2 = r4
*[ram]unique[0x17820:4] = register[0x24:4]
r0 = r9
r1 = r8
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8030818:4]
sp = sp + unique[0xfdd0:4]
return pc

NG = tmpNG
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x80308b2:4]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x80308b4:4]
NG = tmpNG
OV = tmpOV
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x8030828:4]
NG = tmpNG
r0 = sp
NG = tmpNG
r4 = sext(unique[0x11f30:1])
NG = tmpNG
r4 = sext(unique[0x11f30:1])
NG = tmpNG
r4 = lr
NG = tmpNG
r12 = r1
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r4 = r0
call ram[0x8014cd0:4]
r2 = ram[0x80308d4:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r6 = r0
r7 = r1
OV = tmpOV
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
if (unique[0xf890:1]) goto ram[0x80308c6:4]
r3 = ram[0x80308d8:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x80308bc:4]
r3 = *[ram]unique[0x12270:4]
NG = tmpNG
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x2c:4]
r3 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r9 == 0x0
*[ram]unique[0x17820:4] = register[0x44:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
return pc
r1 = ram[0x80308dc:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x800ac30:4]
goto ram[0x8030898:4]
sp = mult_addr
r1 = ram[0x80308e0:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
r12 = r3
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r10 = r0
call ram[0x8014cd0:4]
r2 = ram[0x803098c:4]
r3 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x11420:4]
r4 = r0
r5 = r1
OV = tmpOV
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x34:4]
if (unique[0xf890:1]) goto ram[0x803097c:4]
r11 = ram[0x803099c:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x8030970:4]
r3 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r7 == 0x0
*[ram]unique[0x17820:4] = register[0x3c:4]
r1 = *[ram]unique[0x12270:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
r3 = *[ram]unique[0x112a0:4]
tmpZR = r1 == 0x0
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x24:4]
if (unique[0xf6a0:1]) goto ram[0x8030968:4]
r3 = ram[0x8030990:4]
*[ram]unique[0x112a0:4] = register[0x28:4]
r3 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r9 == 0x0
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x44:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x17820:4] = register[0x34:4]
return pc
r1 = ram[0x8030994:4]
r0 = *[ram]unique[0x112a0:4]
call ram[0x800ac30:4]
goto ram[0x803091e:4]
sp = mult_addr
