sp = mult_addr
r4 = ram[0x80229f0:4]
r3 = ram[0x80229f4:4]
r1 = zext(unique[0x12120:1])
r5 = ram[0x80229f8:4]
r2 = ram[0x80229fc:4]
r0 = zext(unique[0x12120:1])
r6 = *[ram]unique[0x11420:4]
sp = sp - unique[0xfdd0:4]
CY = shift_carry
unique[0xfac0:1] = ZR != 0x0
r2 = r3
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x802b2c0:4]
r1 = sext(unique[0x12560:2])
r2 = *[ram]unique[0x114b0:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
r3 = r0
r1 = ram[0x8022a00:4]
r0 = r6
call ram[0x8016520:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r3 = r1
r1 = sext(unique[0x12560:2])
*[ram]unique[0x114b0:4] = register[0x24:4]
NG = tmpNG
r2 = r0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x8022a04:4]
call ram[0x8016520:4]
r6 = *[ram]unique[0x11420:4]
call ram[0x8022930:4]
r0 = s0
call ram[0x80017ac:4]
tmpZR = r4 == 0x0
r2 = r0
r3 = r1
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r5 = r1
r1 = ram[0x8022a08:4]
r4 = r0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x17820:4] = register[0x34:4]
call ram[0x80017ac:4]
r4 = r0
r5 = r1
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x34:4]
r1 = ram[0x8022a0c:4]
r0 = r6
call ram[0x8016520:4]
sp = sp + unique[0xfdd0:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x8022a5e:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x8022a64:4]
NG = tmpNG
