sp = mult_addr
r3 = ram[0x80173f8:4]
r2 = ram[0x80173fc:4]
r1 = zext(unique[0x12120:1])
r0 = ram[0x8017400:4]
r4 = ram[0x8017404:4]
call ram[0x8014d30:4]
r1 = ram[0x8017408:4]
r2 = r0
r0 = ram[0x801740c:4]
call ram[0x8016520:4]
r3 = ram[0x8017410:4]
r2 = ram[0x8017414:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x8017418:4]
tmpZR = r0 == 0x0
tmpZR = r5 == 0x0
r5 = zext(unique[0x11ed0:1])
r3 = zext(unique[0x11ed0:1])
r0 = ram[0x801741c:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
r3 = r2
r3 = r4
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r2 = r4
sp = mult_addr
goto ram[0x8016520:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x801746e:4]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x8017472:4]
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x80174a8:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x801747c:4]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x801748a:4]
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x801742a:4]
return pc
sp = mult_addr
r3 = ram[0x8017450:4]
r3 = r3 + r0
sp = sp - unique[0xfdd0:4]
r4 = r0
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r2 = ram[0x8017454:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r3 = r4
r1 = ram[0x8017458:4]
r0 = ram[0x801745c:4]
call ram[0x8016520:4]
sp = sp + unique[0xfdd0:4]
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x80174cc:4]
