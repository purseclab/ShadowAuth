sp = mult_addr
sp = sp - unique[0xfdd0:4]
r5 = r1
r1 = sp
r4 = r0
call ram[0x803b630:4]
if (unique[0x11bd0:1]) goto ram[0x803c96c:4]
r3 = *[ram]unique[0x114b0:4]
r1 = unique[0xfdc0:4]
r2 = unique[0xfdc0:4]
*[ram]unique[0x17820:4] = register[0x28:4]
r0 = r4
call ram[0x800aaa0:4]
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x803c96c:4]
r1 = r5
r0 = r4
call ram[0x803b6c0:4]
r1 = r6
r0 = r4
call ram[0x803c7c0:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
tmpZR = r0 == 0x0
sp = sp + unique[0xfdd0:4]
return pc
sp = mult_addr + 0x4
NG = tmpNG
sp = sp - unique[0xfdd0:4]
r7 = *[ram]unique[0x11420:4]
r5 = r0
call ram[0x803c490:4]
r10 = r0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x803ca22:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x803cb24:4]
tmpZR = r3 == 0x0
tmpZR = r11 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
r8 = r3
r9 = r11
goto ram[0x803c9b8:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803ca2a:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
tmpZR = r9 == 0x0
NG = tmpNG
r0 = r5
call ram[0x803c7c0:4]
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x803cb0e:4]
r1 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803c9cc:4]
r0 = r7
call ram[0x803ba90:4]
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x803cb0e:4]
r4 = *[ram]unique[0x11420:4]
r6 = zext(unique[0x11eb0:1])
OV = tmpOV
