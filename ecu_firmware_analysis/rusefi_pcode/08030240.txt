sp = mult_addr
NG = tmpNG
NG = tmpNG
mult_addr = mult_addr + 0x8
r6 = r1
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11440:4] = unique[0x176d0:2]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r1 = r3
s1 = 0x40200000
s0 = 0x3fc00000
r4 = r0
call ram[0x80301c0:4]
s17 = *[ram]unique[0x42b0:4]
s16 = *[ram]unique[0x42b0:4]
r1 = r5
s1 = s17
s0 = s16
r0 = r4
OV = tmpOV
call ram[0x80301c0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8030270:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
r1 = r5
*[ram]unique[0x112a0:4] = register[0x38:4]
*[ram]unique[0x11420:4] = register[0x3c:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r2 == 0x0
tmpZR = r0 == 0x0
call ram[0x800557c:4]
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x11420:4] = register[0x34:4]
mult_addr = mult_addr + 0x8
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x34:4]
r1 = r5
*[ram]unique[0x11420:4] = register[0x3c:4]
tmpZR = r0 == 0x0
tmpZR = r2 == 0x0
sp = mult_addr
goto ram[0x800557c:4]
*[ram]unique[0x11480:4] = register[0x20:4]
call [pc]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
sp = mult_addr
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x803030a:4]
goto [pc]
NG = tmpNG
NG = tmpNG
r3 = ram[0x803031c:4]
r0 = *[ram]unique[0x112a0:4]
return pc
NG = tmpNG
return pc
r2 = r0
r1 = ram[0x8030320:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
NG = tmpNG
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r11 = ram[0x8030588:4]
mult_addr = mult_addr + 0x8
r3 = zext(unique[0x12120:1])
NG = tmpNG
sp = sp - unique[0xfdd0:4]
r5 = r5 >> unique[0x19d40:4]
if (unique[0xf720:1]) goto ram[0x8030354:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r3 = ram[0x8030578:4]
r4 = r0
r10 = *[ram]unique[0x112a0:4]
call ram[0x8025d50:4]
NG = tmpNG
tmpZR = r0 == 0x0
CALLOTHER 0x1, 0xa, 0xb, 0x6, cr8, cr13, cr0
call ram[0x8022220:4]
r3 = *[ram]unique[0x112a0:4]
r9 = *[ram]unique[0x112a0:4]
r6 = *[ram]unique[0x112a0:4]
tmpZR = r2 == 0x0
s17 = *[ram]unique[0x41f0:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x80304a6:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8030448:4]
r0 = zext(unique[0x12120:1])
r7 = ram[0x803057c:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8030494:4]
r2 = *[ram]unique[0x11420:4]
r8 = zext(unique[0x12120:1])
tmpZR = r3 == 0x0
r7 = zext(unique[0x11ed0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8030454:4]
r3 = *[ram]unique[0x112a0:4]
r2 = s16
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x803048e:4]
r5 = zext(unique[0x12120:1])
r5 = r5 >> unique[0x19d40:4]
tmpZR = r5 == 0x0
r5 = zext(unique[0x1a070:1])
tmpZR = r8 == 0x0
call ram[0x8014ae0:4]
r2 = ram[0x803057c:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x803034a:4]
r2 = ram[0x803057c:4]
s15 = *[ram]unique[0x41f0:4]
r1 = *[ram]unique[0x11420:4]
r2 = ram[0x8030580:4]
r3 = zext(unique[0x12120:1])
*[ram]unique[0x112a0:4] = register[0x40:4]
s13 = r3
r3 = zext(unique[0x12120:1])
*[ram]unique[0x112a0:4] = register[0x34:4]
s14 = r3
tmpZR = r3 == 0x0
OV = tmpOV
s13 = CALLOTHER 0xc5, s13, unique[0x3240:1]
s14 = CALLOTHER 0xc5, s14, unique[0x3240:1]
s15 = CALLOTHER 0xc5, s15, unique[0x3240:1]
r3 = zext(unique[0x11ed0:1])
*[ram]unique[0x112a0:4] = unique[0x17850:2]
unique[0xfc20:1] = NG == OV
tmpZR = r6 == 0x0
tmpZR = r6 == 0x0
