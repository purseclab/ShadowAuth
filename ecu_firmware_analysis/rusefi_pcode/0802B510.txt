sp = mult_addr
r4 = ram[0x802b568:4]
r0 = zext(unique[0x12120:1])
call ram[0x802b2c0:4]
r1 = ram[0x802b56c:4]
r2 = r0
r0 = ram[0x802b570:4]
call ram[0x8016520:4]
r5 = zext(unique[0x12120:1])
r0 = ram[0x802b574:4]
r3 = ram[0x802b578:4]
r2 = ram[0x802b57c:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x802b580:4]
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r2 = r0
r0 = ram[0x802b570:4]
call ram[0x8016520:4]
r2 = zext(unique[0x12120:1])
r1 = ram[0x802b584:4]
r0 = ram[0x802b570:4]
call ram[0x802b400:4]
r3 = ram[0x802b588:4]
r3 = zext(unique[0x11eb0:1])
if (unique[0x11bd0:1]) goto ram[0x802b556:4]
return pc
r3 = ram[0x802b58c:4]
r2 = ram[0x802b590:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x802b594:4]
r0 = ram[0x802b570:4]
sp = mult_addr
goto ram[0x8016520:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0xf6e0:1]) goto ram[0x802b53c:4]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x802b5dc:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x802b5e6:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x20:4]
r3 = mult_addr
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x802b584:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x802b5b8:4]
tmpZR = r3 == 0x0
r3 = zext(unique[0x1a070:1])
OV = tmpOV
tmpZR = r0 == 0x0
unique[0xfc00:1] = CY && unique[0xfbe0:1]
tmpZR = r0 == 0x0
return pc
tmpZR = r0 == 0x0
return pc

sp = mult_addr
call ram[0x802b5a0:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x802b5e0:4]
r3 = ram[0x802b5e4:4]
r2 = *[ram]unique[0x120f0:4]
if (unique[0x11bf0:1]) goto ram[0x802b5da:4]
r1 = ram[0x802b5e8:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x28:4]
NG = tmpNG
*[ram]unique[0x17740:4] = register[0x28:4]
return pc

