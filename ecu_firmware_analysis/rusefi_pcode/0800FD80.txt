sp = mult_addr
r4 = r0
NG = tmpNG
CALLOTHER 0x111, r3
call ram[0x80426a0:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x800fdaa:4]
NG = tmpNG
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x28:4]
if (unique[0xf6a0:1]) goto ram[0x800fdbc:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
sp = mult_addr
goto ram[0x8042660:4]
tmpZR = r0 == 0x0
r2 = ram[0x800fe84:4]
r1 = ram[0x800fe88:4]
call ram[0x8015240:4]
r0 = ram[0x800fe84:4]
call ram[0x8040b00:4]
r3 = ram[0x800fe8c:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800fdea:4]
r3 = ram[0x800fe90:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800fe16:4]
r3 = ram[0x800fe94:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800fe54:4]
r0 = ram[0x800fe98:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
NG = tmpNG
tmpZR = r3 == 0x0
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x34:4]
goto ram[0x800fd9e:4]
r2 = ram[0x800fe9c:4]
r0 = *[ram]unique[0x11420:4]
r3 = r4
NG = tmpNG
call ram[0x8040260:4]
if (unique[0x11bd0:1]) goto ram[0x800fe42:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x800fea0:4]
r2 = *[ram]unique[0x11420:4]
r3 = ram[0x800fea4:4]
*[ram]unique[0x11420:4] = register[0x24:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r3 = *[ram]unique[0x11420:4]
goto ram[0x800fdce:4]
r2 = ram[0x800fe9c:4]
r0 = *[ram]unique[0x11420:4]
r3 = r4
NG = tmpNG
call ram[0x8040260:4]
if (unique[0x11bd0:1]) goto ram[0x800fe42:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x800fea8:4]
r2 = *[ram]unique[0x11420:4]
r3 = ram[0x800fea4:4]
*[ram]unique[0x11420:4] = register[0x24:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r3 = *[ram]unique[0x11420:4]
goto ram[0x800fdce:4]
tmpZR = r0 == 0x0
r2 = ram[0x800feac:4]
r1 = ram[0x800fe88:4]
call ram[0x8015240:4]
r0 = ram[0x800feac:4]
call ram[0x8040b00:4]
r2 = ram[0x800fe9c:4]
r0 = *[ram]unique[0x11420:4]
r3 = r4
NG = tmpNG
call ram[0x8040260:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x800fe42:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x800feb0:4]
r2 = *[ram]unique[0x11420:4]
r3 = ram[0x800fea4:4]
*[ram]unique[0x11420:4] = register[0x24:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r3 = *[ram]unique[0x11420:4]
goto ram[0x800fdce:4]

r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r7 = r0
r5 = r1
r0 = ram[0x800ffb0:4]
r1 = r7
call ram[0x8024540:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800ffac:4]
r4 = r0
r1 = r7
r0 = ram[0x800ffb0:4]
r6 = ram[0x800ffb4:4]
call ram[0x80243e0:4]
tmpZR = r8 == 0x0
r3 = *[ram]unique[0x11420:4]
tmpZR = r9 == 0x0
CY = shift_carry
if (unique[0xf6c0:1]) goto ram[0x800ff28:4]
NG = tmpNG
NG = tmpNG
CALLOTHER 0x111, r7
call ram[0x80426a0:4]
r3 = ram[0x800ffb8:4]
tmpZR = r10 == 0x0
r2 = *[ram]unique[0x11420:4]
tmpZR = r8 == 0x0
CY = shift_carry
if (unique[0xf6c0:1]) goto ram[0x800ff16:4]
r2 = *[ram]unique[0x11420:4]
CY = shift_carry
if (unique[0xf6a0:1]) goto ram[0x800ff3a:4]
tmpZR = r0 == 0x0
r2 = ram[0x800ffbc:4]
r1 = ram[0x800ffc0:4]
call ram[0x8015240:4]
r0 = ram[0x800ffbc:4]
call ram[0x8040b00:4]
r3 = r7
r2 = ram[0x800ffb0:4]
r1 = ram[0x800ffc4:4]
sp = mult_addr
tmpZR = r0 == 0x0
goto ram[0x8015240:4]
tmpZR = r2 == 0x0
tmpZR = r2 == 0x0
tmpZR = r2 == 0x0
tmpZR = r1 == 0x0
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
tmpZR = r12 == 0x0
tmpZR = r12 == 0x0
r4 = r4 >> unique[0x19d40:4]
NG = tmpNG
tmpZR = r1 == 0x0
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
call ram[0x802e830:4]
CALLOTHER 0x111, r7
call ram[0x80426a0:4]
r3 = ram[0x800ffc8:4]
r2 = ram[0x800ffcc:4]
*[ram]unique[0x17740:4] = register[0x28:4]
tmpZR = r10 == 0x0
*[ram]unique[0x112a0:4] = register[0x34:4]
call ram[0x802e830:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
