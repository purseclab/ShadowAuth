sp = mult_addr
call ram[0x80017ac:4]
r3 = ram[0x800213c:4]
NG = tmpNG
r6 = r0
r7 = r1
call ram[0x800185c:4]
call ram[0x8001de0:4]
r4 = r0
call ram[0x8001768:4]
r3 = ram[0x8002140:4]
NG = tmpNG
call ram[0x800185c:4]
r2 = r0
r3 = r1
r0 = r6
r1 = r7
call ram[0x80014ec:4]
call ram[0x8001de0:4]
r1 = r4
return pc
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
r3 = ram[0x800214c:4]
r0 = *[ram]unique[0x11420:4]
return pc

NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r4 = r1
r7 = r0
call ram[0x8003210:4]
r1 = r4
r6 = r0
r0 = r7
call ram[0x8003218:4]
r4 = r0
r0 = *[ram]unique[0x11420:4]
tmpZR = r8 == 0x0
CY = shift_carry
if (unique[0xf8b0:1]) goto ram[0x80022e2:4]
tmpZR = r5 == 0x0
r3 = ram[0x8002380:4]
r3 = SUBPIECE unique[0x16dd0:8], 0x4
tmpZR = r5 == 0x0
tmpZR = r3 == 0x0
r5 = r8 - unique[0x13290:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
tmpZR = r5 == 0x0
tmpZR = r5 == 0x0
r3 = ram[0x8002384:4]
r5 = r5 + r3
