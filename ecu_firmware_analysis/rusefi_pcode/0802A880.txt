sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
r7 = ram[0x802a964:4]
sp = sp - unique[0xfdd0:4]
r10 = r0
NG = tmpNG
r11 = r1
call ram[0x80343b0:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802a942:4]
r4 = ram[0x802a968:4]
r8 = ram[0x802a96c:4]
NG = tmpNG
tmpZR = r9 == 0x0
goto ram[0x802a8c2:4]
r3 = *[ram]unique[0x114b0:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x4c:4]
tmpZR = r4 == 0x0
if (unique[0xf7e0:1]) goto ram[0x802a942:4]
r1 = zext(unique[0x12150:1])
r0 = r8
call ram[0x802a840:4]
s16 = *[ram]unique[0x4210:4]
r3 = zext(unique[0x11eb0:1])
s16 = s0 f* s16
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802a952:4]
s15 = *[ram]unique[0x4230:4]
s9 = *[ram]unique[0x41f0:4]
s13 = *[ram]unique[0x4230:4]
s10 = *[ram]unique[0x4230:4]
s14 = *[ram]unique[0x4230:4]
s11 = *[ram]unique[0x4230:4]
s12 = *[ram]unique[0x4230:4]
r5 = *[ram]unique[0x11300:4]
CALLOTHER 0x1, 0xa, 0xe, 0x1, cr7, cr8, cr4
r3 = *[ram]unique[0x11420:4]
CALLOTHER 0x1, 0xa, 0xe, 0x0, cr6, cr8, cr5
r0 = sp
r1 = r3
s14 = 0x0 f- unique[0x4c10:4]
CALLOTHER 0x1, 0xa, 0xe, 0x7, cr6, cr7, cr5
CALLOTHER 0x1, 0xa, 0xa, 0x0, cr7, cr8, cr6
s0 = s15
*[ram]unique[0x4230:4] = register[0x334:4]
*[ram]unique[0x4230:4] = register[0x338:4]
if (unique[0x11bf0:1]) goto ram[0x802a934:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x4230:4] = register[0x33c:4]
r3 = *[ram]unique[0x11420:4]
call [pc]
r3 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802a8aa:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf7b0:1]) goto ram[0x802a8c2:4]
NG = tmpNG
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8034390:4]
s0 = s16
r0 = r4
call ram[0x8014a80:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
goto ram[0x802a8da:4]

OV = tmpOV
NG = tmpNG
CALLOTHER 0xc, 0x0, cr2, r8
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r8 = ram[0x802aa5c:4]
NG = tmpNG
r6 = r2
r7 = r3
call ram[0x80343b0:4]
r3 = *[ram]unique[0x112a0:4]
r0 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x800ffd0:4]
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x802aa3e:4]
NG = tmpNG
call ram[0x8034390:4]
NG = tmpNG
call ram[0x80343b0:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x802aa52:4]
r1 = ram[0x802aa58:4]
r2 = *[ram]unique[0x112a0:4]
s12 = *[ram]unique[0x41f0:4]
r12 = ram[0x802aa60:4]
tmpZR = lr == 0x0
s11 = 0x3f800000
r0 = lr
NG = tmpNG
NG = tmpNG
r5 = zext(unique[0x123a0:2])
OV = tmpOV
r0 = r0 + r3
r4 = r4 + r5
if (unique[0xf6c0:1]) goto ram[0x802a9c8:4]
tmpZR = r1 == 0x0
tmpZR = r0 == 0x0
NG = tmpNG
r0 = zext(unique[0x11ef0:2])
r5 = *[ram]unique[0x112a0:4]
r0 = zext(unique[0x1a1b0:2])
if (unique[0x11bd0:1]) goto ram[0x802aa14:4]
r4 = zext(unique[0x1a1b0:2])
tmpZR = r1 == 0x0
tmpZR = lr == 0x0
OV = tmpOV
*[ram]unique[0x11440:4] = unique[0x176d0:2]
if (unique[0xf6c0:1]) goto ram[0x802a9c2:4]
r3 = *[ram]unique[0x112a0:4]
r0 = r6
r1 = r7
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x802a880:4]
sp = mult_addr
NG = tmpNG
goto ram[0x8034390:4]
s15 = r0
r4 = zext(unique[0x1a1b0:2])
s13 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
s14 = s11 f- s12
s15 = r4
s14 = s14 f* s13
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
CALLOTHER 0x1, 0xa, 0xa, 0x1, cr7, cr6, cr7
s15 = CALLOTHER 0xc3, s14, unique[0x3120:1]
r0 = s15
r4 = zext(unique[0x1a1b0:2])
goto ram[0x802a9ea:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
NG = tmpNG
sp = mult_addr
goto ram[0x8034390:4]
r12 = ram[0x802aa60:4]
goto ram[0x802a9f8:4]
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
r0 = sext(unique[0x11f50:2])
NG = tmpNG
r0 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x802aaa4:4]
s15 = *[ram]unique[0x42b0:4]
s14 = *[ram]unique[0x4230:4]
mult_addr = mult_addr + 0x8
s16 = s14 f/ s15
call ram[0x8028860:4]
s15 = r0
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
s0 = *[ram]unique[0x4230:4]
s15 = s15 f* s16
mult_addr = mult_addr + 0x8
s0 = s15 f* s0
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
tmpZR = r5 == 0x0
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x802abfc:4]
r0 = ram[0x802ac00:4]
r1 = zext(unique[0x12120:1])
r5 = ram[0x802ac04:4]
NG = tmpNG
call ram[0x8024cf0:4]
r1 = zext(unique[0x12120:1])
r0 = ram[0x802ac08:4]
NG = tmpNG
call ram[0x8024cf0:4]
r1 = zext(unique[0x12120:1])
r0 = ram[0x802ac0c:4]
NG = tmpNG
call ram[0x8024cf0:4]
r1 = zext(unique[0x12120:1])
r0 = ram[0x802ac10:4]
NG = tmpNG
call ram[0x8024cf0:4]
r1 = zext(unique[0x12120:1])
r0 = ram[0x802ac14:4]
NG = tmpNG
call ram[0x8024cf0:4]
NG = tmpNG
r1 = zext(unique[0x12120:1])
r0 = ram[0x802ac18:4]
call ram[0x8024cf0:4]
r1 = zext(unique[0x12120:1])
r0 = r5
call ram[0x80243e0:4]
r1 = zext(unique[0x12120:1])
r0 = r5
call ram[0x80243e0:4]
r1 = zext(unique[0x12120:1])
tmpZR = r7 == 0x0
r0 = r5
