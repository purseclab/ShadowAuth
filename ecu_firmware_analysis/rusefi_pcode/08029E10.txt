sp = mult_addr
call ram[0x8014ae0:4]
r3 = ram[0x8029e58:4]
r3 = *[ram]unique[0x11420:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8029e56:4]
r4 = ram[0x8029e5c:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
r6 = r0
r5 = r1
if (unique[0xf740:1]) goto ram[0x8029e4a:4]
r4 = zext(unique[0x12120:1])
r4 = r4 >> unique[0x19d40:4]
tmpZR = r4 == 0x0
tmpZR = r0 == 0x0
r2 = r6
r3 = r5
sp = mult_addr
goto ram[0x803b140:4]
r2 = r0
r3 = r1
NG = tmpNG
call ram[0x80236d0:4]
goto ram[0x8029e2e:4]
return pc
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r2 = ram[0x8029ec8:4]
r0 = ram[0x8029ecc:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x8029ed0:4]
r0 = *[ram]unique[0x11420:4]
sp = mult_addr
r4 = ram[0x8029ed4:4]
OV = tmpOV
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r6 = *[ram]unique[0x11420:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8029ebc:4]
r4 = ram[0x8029ed8:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x8040900:4]
r5 = r0
tmpZR = r0 == 0x0
call ram[0x8021510:4]
tmpZR = r0 == 0x0
call ram[0x8021360:4]
if (unique[0x11bf0:1]) goto ram[0x8029eb6:4]
r3 = ram[0x8029ed0:4]
r2 = ram[0x8029edc:4]
r3 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
unique[0xfb20:1] = CY != 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
call ram[0x80408b0:4]
goto ram[0x8029ea4:4]
r1 = ram[0x8029ee0:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x8029ea4:4]
mult_addr = mult_addr + 0x4
