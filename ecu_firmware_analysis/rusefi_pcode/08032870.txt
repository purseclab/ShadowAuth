sp = mult_addr + 0x4
r3 = ram[0x8032950:4]
mult_addr = mult_addr + 0x8
r8 = r2
r2 = s0
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r10 = r0
if (unique[0xf6a0:1]) goto ram[0x8032934:4]
s15 = *[ram]unique[0x41f0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
s16 = s0
r6 = r1
if (unique[0xf860:1]) goto ram[0x8032924:4]
r11 = ram[0x8032958:4]
tmpZR = r4 == 0x0
NG = tmpNG
tmpZR = r9 == 0x0
goto ram[0x80328c2:4]
r7 = r4
if (unique[0xf890:1]) goto ram[0x8032928:4]
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf6a0:1]) goto ram[0x8032928:4]
tmpZR = r3 == 0x0
tmpZR = r5 == 0x0
OV = tmpOV
tmpZR = r3 == 0x0
if (unique[0x11bd0:1]) goto ram[0x80328e4:4]
s15 = *[ram]unique[0x41f0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf740:1]) goto ram[0x80328ac:4]
r8 = r4
goto ram[0x80328b0:4]
s17 = *[ram]unique[0x41f0:4]
s15 = *[ram]unique[0x41f0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf890:1]) goto ram[0x80328d6:4]
r0 = s15
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = s17
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r2 = r10
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = r11
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s15 = *[ram]unique[0x41f0:4]
goto ram[0x80328d6:4]
tmpZR = r7 == 0x0
r0 = r7
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r2 = r0
r1 = ram[0x8032954:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
NG = tmpNG
r0 = r7
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc

NG = tmpNG
r0 = zext(unique[0x11eb0:1])
*[ram]unique[0x11480:4] = register[0x20:4]
NG = tmpNG
*[ram]unique[0x11480:4] = register[0x30:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
r8 = s0
r4 = ram[0x8032b9c:4]
sp = sp - unique[0xfdd0:4]
OV = tmpOV
r11 = *[ram]unique[0x112a0:4]
if (unique[0xf8b0:1]) goto ram[0x8032b1e:4]
r6 = s1
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8032aca:4]
r7 = r2
r10 = r0
r2 = r1
r9 = r1
r1 = r0
r0 = ram[0x8032ba0:4]
r5 = r3
call ram[0x8032870:4]
s0 = r6
r3 = r0
r2 = r5
r0 = ram[0x8032ba4:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r1 = r7
call ram[0x8032870:4]
r3 = *[ram]unique[0x114b0:4]
OV = tmpOV
r4 = r0
if (unique[0xf820:1]) goto ram[0x8032a66:4]
OV = tmpOV
if (unique[0xfa30:1]) goto ram[0x8032aee:4]
tmpZR = r2 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8032aba:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8032b4c:4]
NG = tmpNG
OV = tmpOV
r2 = *[ram]unique[0x120f0:4]
r1 = *[ram]unique[0x120b0:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
tmpZR = r0 == 0x0
tmpZR = r10 == 0x0
s17 = *[ram]unique[0x41f0:4]
s2 = *[ram]unique[0x41f0:4]
r0 = ram[0x8032ba8:4]
*[ram]unique[0x41f0:4] = register[0x308:4]
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
s3 = *[ram]unique[0x41f0:4]
s1 = *[ram]unique[0x41f0:4]
s4 = r8
s0 = s17
call ram[0x8019a30:4]
r3 = *[ram]unique[0x114b0:4]
r1 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x120f0:4]
s2 = *[ram]unique[0x41f0:4]
r0 = ram[0x8032bac:4]
NG = tmpNG
OV = tmpOV
r1 = r1 + r3
r2 = r2 + r3
s3 = *[ram]unique[0x41f0:4]
s1 = *[ram]unique[0x41f0:4]
r3 = r3 + r7
s4 = r8
s16 = s0
r7 = r7 + r4
s0 = s17
s19 = *[ram]unique[0x41f0:4]
s18 = *[ram]unique[0x41f0:4]
call ram[0x8019a30:4]
s4 = r6
r0 = ram[0x8032bac:4]
s3 = s0
s2 = s19
s1 = s16
s0 = s18
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8019a30:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8032b42:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8032aa4:4]
NG = tmpNG
r3 = *[ram]unique[0x112a0:4]
r0 = ram[0x8032bac:4]
OV = tmpOV
OV = tmpOV
r3 = r3 + r4
r2 = r2 + r7
r4 = r4 + r7
s3 = *[ram]unique[0x41f0:4]
s2 = *[ram]unique[0x41f0:4]
s1 = *[ram]unique[0x41f0:4]
s0 = *[ram]unique[0x41f0:4]
s4 = r6
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8019a30:4]
r3 = *[ram]unique[0x112a0:4]
tmpZR = r5 == 0x0
s0 = *[ram]unique[0x41f0:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
OV = tmpOV
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8032b86:4]
NG = tmpNG
r3 = *[ram]unique[0x120f0:4]
r0 = ram[0x8032bb0:4]
goto ram[0x8032a78:4]
r0 = s1
call ram[0x80017ac:4]
r2 = r0
r3 = r1
tmpZR = r0 == 0x0
r1 = ram[0x8032bb4:4]
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
tmpZR = r9 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8032b7c:4]
NG = tmpNG
OV = tmpOV
r0 = *[ram]unique[0x120f0:4]
r3 = *[ram]unique[0x120b0:4]
s1 = *[ram]unique[0x41f0:4]
s3 = *[ram]unique[0x41f0:4]
r0 = ram[0x8032bb0:4]
r1 = r1 + r10
