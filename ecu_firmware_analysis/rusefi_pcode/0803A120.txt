OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x803a156:4]
if (unique[0x11bf0:1]) goto ram[0x803a156:4]
OV = tmpOV
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
r0 = r0 + r3
tmpZR = r1 == 0x0
r3 = zext(unique[0x11ef0:2])
NG = tmpNG
tmpZR = r1 == 0x0
tmpZR = r1 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803a152:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803a15a:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
return pc
NG = tmpNG
return pc
NG = tmpNG
return pc
NG = tmpNG
return pc

OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803a172:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803a176:4]
OV = tmpOV
r0 = ram[0x803a188:4]
unique[0xfae0:1] = ZR != 0x0
tmpZR = r0 == 0x0
return pc
r0 = ram[0x803a18c:4]
return pc
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x803a182:4]
r0 = ram[0x803a190:4]
tmpZR = r0 == 0x0
return pc
NG = tmpNG
return pc

*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r2 = *[ram]unique[0x12270:4]
OV = tmpOV
