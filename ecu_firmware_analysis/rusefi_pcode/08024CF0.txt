if (unique[0x11bd0:1]) goto ram[0x8024cf4:4]
return pc
sp = mult_addr + 0x4
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r5 = r0
r6 = r2
r4 = r1
if (unique[0xf6a0:1]) goto ram[0x8024d8e:4]
r0 = r1
call ram[0x802b190:4]
r3 = r0
r1 = ram[0x8024dd8:4]
r0 = ram[0x8024ddc:4]
r2 = r5
call ram[0x8016520:4]
r0 = r4
call ram[0x802b5a0:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8024d48:4]
r8 = ram[0x8024df4:4]
r3 = *[ram]unique[0x120f0:4]
if (unique[0x11bf0:1]) goto ram[0x8024d4e:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8024d92:4]
r0 = r4
call ram[0x802b190:4]
r3 = *[ram]unique[0x120f0:4]
r2 = r0
*[ram]unique[0x114b0:4] = register[0x2c:4]
r1 = ram[0x8024de0:4]
r3 = r5
tmpZR = r0 == 0x0
call ram[0x8015240:4]
sp = sp + unique[0xfdd0:4]
return pc
r0 = ram[0x8024de4:4]
*[ram]unique[0x17740:4] = register[0x34:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x24:4]
if (unique[0xf720:1]) goto ram[0x8024d96:4]
r1 = r4
r0 = r5
call ram[0x8024540:4]
r1 = r4
r3 = r0
r0 = r5
r4 = r3
call ram[0x80243e0:4]
r1 = r0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8024d48:4]
NG = tmpNG
r2 = r6
r0 = r4
tmpZR = r1 == 0x0
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x803ffd0:4]
r3 = ram[0x8024de8:4]
goto ram[0x8024d0c:4]
r2 = ram[0x8024de8:4]
goto ram[0x8024d3a:4]
r2 = ram[0x8024dec:4]
r1 = zext(unique[0x12150:1])
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8024da8:4]
r0 = *[ram]unique[0x11420:4]
r0 = r0 + r1
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8024db4:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8024d98:4]
goto ram[0x8024d48:4]
r2 = ram[0x8024df0:4]
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
r2 = *[ram]unique[0x11420:4]
r5 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8024d48:4]
r0 = *[ram]unique[0x11420:4]
r2 = r6
OV = tmpOV
r3 = r5
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto [pc]

