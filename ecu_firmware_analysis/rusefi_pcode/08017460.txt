sp = mult_addr
r6 = r1
r5 = r0
call ram[0x8014690:4]
r3 = ram[0x80174cc:4]
tmpZR = r2 == 0x0
tmpZR = r2 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80174ae:4]
tmpZR = r3 == 0x0
OV = tmpOV
r4 = r0
if (unique[0xf7e0:1]) goto ram[0x8017484:4]
return pc
r0 = r6
call ram[0x80146f0:4]
r2 = ram[0x80174d0:4]
r3 = s0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80174bc:4]
r2 = ram[0x80174d4:4]
r0 = r4
r4 = r4 + r2
*[ram]unique[0x41f0:4] = register[0x300:4]
call ram[0x8017420:4]
call ram[0x80239a0:4]
sp = mult_addr
goto ram[0x8031860:4]
r2 = r5
r1 = ram[0x80174d8:4]
r0 = ram[0x80174dc:4]
sp = mult_addr
goto ram[0x8016520:4]
r2 = r6
r1 = ram[0x80174e0:4]
r0 = ram[0x80174dc:4]
sp = mult_addr
goto ram[0x8016520:4]

goto ram[0x8016d30:4]
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x8017556:4]
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x8017578:4]
NG = tmpNG
sp = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x80174fa:4]
return pc
sp = mult_addr
r3 = ram[0x8017518:4]
r2 = ram[0x801751c:4]
r3 = *[ram]unique[0x11480:4]
r1 = ram[0x8017520:4]
sp = sp - unique[0xfdd0:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r3 = r0
r0 = ram[0x8017524:4]
call ram[0x8016520:4]
sp = sp + unique[0xfdd0:4]
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x8017594:4]
NG = tmpNG
sp = mult_addr
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x80175c0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r2 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x801753a:4]
return pc
sp = mult_addr
r2 = ram[0x8017550:4]
*[ram]unique[0x11480:4] = register[0x24:4]
call ram[0x80174f0:4]
call ram[0x80239a0:4]
sp = mult_addr
goto ram[0x8031860:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r2 == 0x0
