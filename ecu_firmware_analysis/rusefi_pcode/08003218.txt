sp = mult_addr
r7 = *[ram]unique[0x12270:4]
r2 = ram[0x80033ac:4]
NG = tmpNG
r4 = r1
r0 = r6
r1 = r7
call ram[0x8006128:4]
r2 = ram[0x80033ac:4]
r5 = r0
NG = tmpNG
r0 = r6
r1 = r7
call ram[0x8006128:4]
OV = tmpOV
if (unique[0xfa30:1]) goto ram[0x8003394:4]
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
r5 = ram[0x80033b0:4]
r1 = ram[0x80033b4:4]
r5 = SUBPIECE unique[0x17480:8], 0x4
NG = tmpNG
tmpZR = r3 == 0x0
r2 = r2 - unique[0x13290:4]
r3 = ram[0x80033b8:4]
*[ram]unique[0x11420:4] = register[0x34:4]
OV = tmpOV
r3 = SUBPIECE unique[0x16dd0:8], 0x4
r1 = SUBPIECE unique[0x17480:8], 0x4
OV = tmpOV
NG = tmpNG
tmpZR = r3 == 0x0
NG = tmpNG
tmpZR = r3 == 0x0
OV = tmpOV
tmpZR = r6 == 0x0
unique[0xfb40:1] = NG != 0x0
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0xf820:1]) goto ram[0x800337e:4]
r3 = ram[0x80033bc:4]
NG = tmpNG
r3 = SUBPIECE unique[0x16dd0:8], 0x4
tmpZR = r2 == 0x0
r5 = ram[0x80033c0:4]
r3 = ram[0x80033c4:4]
r6 = ram[0x80033c8:4]
r7 = ram[0x80033cc:4]
r1 = ram[0x80033d0:4]
r0 = unique[0x13270:4] + r0
NG = tmpNG
r3 = SUBPIECE unique[0x17480:8], 0x4
tmpZR = r3 == 0x0
r5 = SUBPIECE unique[0x17480:8], 0x4
tmpZR = r3 == 0x0
NG = tmpNG
r5 = SUBPIECE unique[0x17480:8], 0x4
r7 = ram[0x80033d4:4]
tmpZR = r3 == 0x0
r1 = SUBPIECE unique[0x17480:8], 0x4
r7 = SUBPIECE unique[0x17480:8], 0x4
tmpZR = r0 == 0x0
NG = tmpNG
OV = tmpOV
r6 = SUBPIECE unique[0x17480:8], 0x4
tmpZR = r3 == 0x0
tmpZR = r0 == 0x0
NG = tmpNG
tmpZR = r1 == 0x0
r0 = r0 - unique[0x13290:4]
r5 = ram[0x80033d8:4]
tmpZR = r1 == 0x0
OV = tmpOV
r5 = SUBPIECE unique[0x17480:8], 0x4
NG = tmpNG
tmpZR = r6 == 0x0
OV = tmpOV
tmpZR = r7 == 0x0
tmpZR = r1 == 0x0
r2 = unique[0x13270:4] + r3
r6 = ram[0x80033dc:4]
unique[0xfc00:1] = CY && unique[0xfbe0:1]
tmpZR = r7 == 0x0
tmpZR = r7 == 0x0
tmpZR = r1 == 0x0
OV = tmpOV
r5 = r5 + r7
r1 = SUBPIECE unique[0x17480:8], 0x4
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
tmpZR = r2 == 0x0
OV = tmpOV
OV = tmpOV
tmpZR = r1 == 0x0
if (unique[0xf700:1]) goto ram[0x800334c:4]
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x34:4]
r0 = r4
return pc
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x8003360:4]
r6 = ram[0x80033e0:4]
r6 = SUBPIECE unique[0x17480:8], 0x4
NG = tmpNG
NG = tmpNG
r6 = r3 - unique[0x13290:4]
if (unique[0x11bd0:1]) goto ram[0x80033a6:4]
r6 = ram[0x80033e0:4]
r6 = SUBPIECE unique[0x17480:8], 0x4
NG = tmpNG
tmpZR = r7 == 0x0
r3 = r3 - unique[0x13290:4]
r6 = CALLOTHER 0x0, r3
NG = tmpNG
tmpZR = r3 == 0x0
r3 = r3 + r6
goto ram[0x8003338:4]
tmpZR = r3 == 0x0
r2 = ram[0x80033bc:4]
tmpZR = r3 == 0x0
r2 = SUBPIECE unique[0x16dd0:8], 0x4
NG = tmpNG
tmpZR = r2 == 0x0
goto ram[0x800329a:4]
tmpZR = r2 == 0x0
tmpZR = r0 == 0x0
tmpZR = r2 == 0x0
tmpZR = r0 == 0x0
goto ram[0x8003248:4]
NG = tmpNG
goto ram[0x8003376:4]

*[ram]unique[0x11480:4] = register[0x20:4]
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x8003424:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
r1 = zext(unique[0x11ef0:2])
r0 = zext(unique[0x11ef0:2])
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x28:4]
NG = tmpNG
OV = tmpOV
r5 = mult_addr
