r3 = ram[0x8038208:4]
sp = mult_addr
r4 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x80381f4:4]
r5 = *[ram]unique[0x112a0:4]
NG = tmpNG
OV = tmpOV
NG = tmpNG
OV = tmpOV
r3 = r1
if (unique[0xf800:1]) goto ram[0x80381d6:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf720:1]) goto ram[0x80381d2:4]
tmpZR = r3 == 0x0
OV = tmpOV
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
tmpZR = r1 == 0x0
r0 = r0 + r3
if (unique[0xf860:1]) goto ram[0x80381c8:4]
OV = tmpOV
unique[0xfcc0:1] = unique[0xfc90:1] && unique[0xfca0:1]
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
sp = mult_addr
return pc
r6 = *[ram]unique[0x112a0:4]
r5 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x80381c4:4]
NG = tmpNG
sp = mult_addr
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r2 = ram[0x8038508:4]
r4 = ram[0x803850c:4]
r2 = *[ram]unique[0x11420:4]
r3 = ram[0x8038510:4]
r5 = ram[0x8038514:4]
r0 = *[ram]unique[0x11420:4]
r11 = ram[0x8038588:4]
r1 = r2
sp = sp - unique[0xfdd0:4]
r1 = zext(unique[0x12120:1])
*[ram]unique[0x114b0:4] = register[0x24:4]
r6 = r2
r2 = ram[0x8038518:4]
r1 = ram[0x803851c:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
call ram[0x8016520:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r0 = r3
call ram[0x801cbb0:4]
r9 = *[ram]unique[0x112a0:4]
r8 = *[ram]unique[0x112a0:4]
r2 = r0
r0 = r9
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x8032580:4]
r3 = ram[0x8038520:4]
lr = zext(unique[0x12120:1])
r1 = ram[0x8038524:4]
r12 = zext(unique[0x12120:1])
r7 = r0
tmpZR = r0 == 0x0
r10 = zext(unique[0x121f0:1])
r0 = ram[0x8038528:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
r10 = r1
r10 = r11
CY = shift_carry
r0 = *[ram]unique[0x11420:4]
unique[0xfae0:1] = ZR != 0x0
r3 = r1
r3 = r11
