sp = mult_addr
NG = tmpNG
mult_addr = mult_addr + 0x8
r1 = r2
s16 = s0
s17 = 0x41700000
r4 = r0
call ram[0x8034ca0:4]
s16 = s16 f+ s17
r0 = r4
s0 = s16
NG = tmpNG
NG = tmpNG
call ram[0x8034ca0:4]
s0 = s16 f+ s17
mult_addr = mult_addr + 0x8
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r4 = ram[0x800b2cc:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
sp = sp - unique[0xfdd0:4]
r6 = r0
if (unique[0xf950:1]) goto ram[0x800b254:4]
r0 = ram[0x800b2d0:4]
r4 = ram[0x800b2d4:4]
r8 = ram[0x800b30c:4]
call ram[0x802cbc0:4]
r0 = ram[0x800b2d8:4]
call ram[0x802cbc0:4]
call ram[0x8040900:4]
r3 = zext(unique[0x12120:1])
r9 = *[ram]unique[0x112a0:4]
r5 = r0
r0 = *[ram]unique[0x112a0:4]
r7 = r7 >> unique[0x19d40:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x800b1be:4]
tmpZR = r1 == 0x0
r3 = r7
tmpZR = r10 == 0x0
r7 = ram[0x800b2dc:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
r2 = r9
r0 = ram[0x800b2e0:4]
