sp = mult_addr
r4 = r0
call ram[0x8040dd0:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x804156c:4]
r3 = *[ram]unique[0x11420:4]
r5 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
r0 = ram[0x8041580:4]
r2 = r2 + r5
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r5 = *[ram]unique[0x11420:4]
NG = tmpNG
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
tmpZR = r0 == 0x0
r2 = ram[0x8041584:4]
r1 = ram[0x8041588:4]
call ram[0x8015240:4]
r0 = ram[0x8041584:4]
call ram[0x8040b00:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r1
r5 = r0
r6 = r2
r7 = r3
call ram[0x8040dd0:4]
if (unique[0x11bd0:1]) goto ram[0x80415a6:4]
r0 = ram[0x80415f0:4]
call ram[0x8040b00:4]
r0 = ram[0x80415f4:4]
*[ram]unique[0x11420:4] = register[0x3c:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x38:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80415c0:4]
goto ram[0x80415d6:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x80415d6:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80415b6:4]
tmpZR = r0 == 0x0
r2 = ram[0x80415f8:4]
r1 = ram[0x80415fc:4]
call ram[0x8015240:4]
r0 = ram[0x80415f8:4]
