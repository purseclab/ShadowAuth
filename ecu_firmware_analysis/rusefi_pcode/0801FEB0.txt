sp = mult_addr
mult_addr = mult_addr + 0x8
r4 = r0
r0 = *[ram]unique[0x11420:4]
sp = sp - unique[0xfdd0:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x801ffe2:4]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801ff7a:4]
r2 = ram[0x802001c:4]
r3 = ram[0x8020020:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801fee8:4]
r0 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
s0 = r2
r3 = *[ram]unique[0x11420:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto [pc]
r3 = ram[0x8020024:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801ff10:4]
r2 = ram[0x8020028:4]
r0 = ram[0x802002c:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
OV = tmpOV
OV = tmpOV
r1 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = register[0x24:4]
*[ram]unique[0x112a0:4] = register[0x28:4]
r2 = sext(unique[0x12560:2])
s14 = r2
r2 = sext(unique[0x12560:2])
s15 = r2
s14 = CALLOTHER 0xc4, s14, unique[0x31a0:1]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
*[ram]unique[0x4230:4] = register[0x338:4]
*[ram]unique[0x4230:4] = register[0x33c:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x801ffea:4]
r3 = *[ram]unique[0x11420:4]
r1 = r4
r3 = *[ram]unique[0x11420:4]
r0 = unique[0xfdc0:4]
call [pc]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x801ff5c:4]
r3 = *[ram]unique[0x11420:4]
s16 = *[ram]unique[0x4230:4]
r3 = *[ram]unique[0x11420:4]
r1 = r4
r0 = unique[0xfdc0:4]
call [pc]
r3 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x801ff9a:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x114b0:4] = register[0x28:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x114b0:4]
r3 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x114b0:4]
r0 = r4
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto [pc]
r3 = ram[0x8020024:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801fff8:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801fec8:4]
r2 = ram[0x802001c:4]
r1 = ram[0x8020020:4]
r2 = *[ram]unique[0x11420:4]
r5 = ram[0x802002c:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x28:4]
if (unique[0xf6c0:1]) goto ram[0x801fed4:4]
goto ram[0x801ff10:4]
r3 = *[ram]unique[0x11420:4]
s0 = s16
r3 = *[ram]unique[0x11420:4]
r1 = r4
r0 = unique[0xfdc0:4]
call [pc]
r3 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801ff5c:4]
r3 = *[ram]unique[0x11420:4]
s1 = *[ram]unique[0x4230:4]
r3 = *[ram]unique[0x11420:4]
s0 = s16
r1 = r4
r0 = unique[0xfdc0:4]
call [pc]
r3 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801ff5c:4]
s15 = *[ram]unique[0x4230:4]
s14 = *[ram]unique[0x4230:4]
s15 = s15 f+ s14
NG = tmpNG
*[ram]unique[0x4230:4] = register[0x33c:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
goto ram[0x801ff64:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r2 = ram[0x8020030:4]
r1 = ram[0x8020034:4]
tmpZR = r0 == 0x0
call ram[0x80172f0:4]
goto ram[0x801ff38:4]
tmpZR = r0 == 0x0
call ram[0x800fa40:4]
r3 = ram[0x8020028:4]
r2 = ram[0x802002c:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
s15 = *[ram]unique[0x4230:4]
CALLOTHER 0x1, 0xa, 0xf, 0x7, cr7, cr13, cr7
r3 = s15
*[ram]unique[0x112a0:4] = unique[0x17850:2]
goto ram[0x801fec8:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r0 = *[ram]unique[0x11480:4]
NG = tmpNG
r5 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = r0
r0 = *[ram]unique[0x11420:4]
sp = mult_addr
if (unique[0x11bf0:1]) goto ram[0x8020078:4]
r4 = s1
r2 = ram[0x8020088:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8020066:4]
s1 = s0
r1 = *[ram]unique[0x11420:4]
s0 = r4
OV = tmpOV
sp = mult_addr
goto ram[0x800fac0:4]
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x802008c:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
return pc
r1 = ram[0x8020094:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
s0 = *[ram]unique[0x42b0:4]
return pc
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r2 = mult_addr
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = r0
r0 = *[ram]unique[0x11420:4]
sp = mult_addr
if (unique[0x11bf0:1]) goto ram[0x80200da:4]
r4 = s1
r2 = ram[0x80200ec:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80200c8:4]
s1 = s0
r1 = *[ram]unique[0x11420:4]
s0 = r4
OV = tmpOV
call ram[0x800fac0:4]
s0 = s0 f+ s0
return pc
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x80200f0:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
return pc
r1 = ram[0x80200f8:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
s0 = *[ram]unique[0x42b0:4]
return pc

NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r2 = mult_addr
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x80202c0:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
sp = sp - unique[0xfdd0:4]
if (unique[0xf8b0:1]) goto ram[0x80202ba:4]
r2 = ram[0x80202c4:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x80202b6:4]
OV = tmpOV
r6 = ram[0x80202c8:4]
unique[0xfae0:1] = ZR != 0x0
tmpZR = r6 == 0x0
r2 = zext(unique[0x12120:1])
r3 = ram[0x80202cc:4]
r0 = ram[0x80202d0:4]
r7 = zext(unique[0x12120:1])
r5 = ram[0x80202d4:4]
r1 = ram[0x80202d8:4]
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r2 = r0
r2 = r3
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r3 = r0
r0 = *[ram]unique[0x11420:4]
call ram[0x8016520:4]
r3 = ram[0x80202dc:4]
r7 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r2 = r6
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x80202e0:4]
r0 = r7
call ram[0x8016520:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x80201f0:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x8020260:4]
r1 = ram[0x80202e4:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8016520:4]
r0 = zext(unique[0x12120:1])
r6 = *[ram]unique[0x11420:4]
call ram[0x802b2c0:4]
r1 = ram[0x80202e8:4]
r2 = r0
r0 = r6
call ram[0x8016520:4]
r0 = zext(unique[0x12120:1])
r6 = *[ram]unique[0x11420:4]
call ram[0x802b2c0:4]
r1 = ram[0x80202ec:4]
r2 = r0
r0 = r6
call ram[0x8016520:4]
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
call ram[0x801f880:4]
r1 = ram[0x80202f0:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8016520:4]
r0 = zext(unique[0x12120:1])
r6 = *[ram]unique[0x11420:4]
call ram[0x802b2c0:4]
r1 = ram[0x80202e8:4]
r2 = r0
r0 = r6
call ram[0x8016520:4]
r0 = zext(unique[0x12120:1])
r6 = *[ram]unique[0x11420:4]
call ram[0x802b2c0:4]
r1 = ram[0x80202ec:4]
r2 = r0
r0 = r6
call ram[0x8016520:4]
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
call ram[0x801f880:4]
r3 = *[ram]unique[0x112a0:4]
if (unique[0x11bf0:1]) goto ram[0x8020230:4]
sp = sp + unique[0xfdd0:4]
return pc
r3 = zext(unique[0x12120:1])
r2 = *[ram]unique[0x112a0:4]
r6 = *[ram]unique[0x11420:4]
r0 = zext(unique[0x12120:1])
*[ram]unique[0x114b0:4] = register[0x28:4]
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x802024e:4]
call ram[0x802b2c0:4]
r2 = *[ram]unique[0x114b0:4]
r1 = ram[0x80202f4:4]
r3 = r0
r0 = r6
call ram[0x8016520:4]
r0 = zext(unique[0x12120:1])
r6 = *[ram]unique[0x11420:4]
call ram[0x802b2c0:4]
r1 = ram[0x80202f8:4]
r2 = r0
r0 = r6
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80201ec:4]
r4 = zext(unique[0x12120:1])
r3 = ram[0x80202fc:4]
r0 = ram[0x8020300:4]
r1 = *[ram]unique[0x11420:4]
r2 = ram[0x8020304:4]
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r0 = r3
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x80172f0:4]
call ram[0x802b2c0:4]
r2 = *[ram]unique[0x114b0:4]
r1 = ram[0x80202f4:4]
r3 = r0
r0 = r6
call ram[0x8016520:4]
goto ram[0x8020228:4]
r0 = zext(unique[0x12120:1])
r6 = *[ram]unique[0x11420:4]
call ram[0x802b2c0:4]
r3 = ram[0x8020308:4]
r2 = r0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
