sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
r6 = r1
r7 = r2
r5 = r0
call ram[0x8014690:4]
r8 = ram[0x8017660:4]
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8017628:4]
tmpZR = r3 == 0x0
OV = tmpOV
r4 = r0
if (unique[0xf7e0:1]) goto ram[0x80175d0:4]
sp = sp + unique[0xfdd0:4]
return pc
r0 = r6
call ram[0x8014690:4]
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
r5 = r0
if (unique[0xf6a0:1]) goto ram[0x8017638:4]
r0 = r7
call ram[0x8014690:4]
tmpZR = r2 == 0x0
tmpZR = r2 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801763e:4]
r6 = ram[0x8017644:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
r2 = *[ram]unique[0x11480:4]
*[ram]unique[0x114b0:4] = register[0x34:4]
OV = tmpOV
NG = tmpNG
NG = tmpNG
tmpZR = r5 == 0x0
NG = tmpNG
NG = tmpNG
r1 = ram[0x8017648:4]
r2 = ram[0x801764c:4]
r0 = ram[0x8017650:4]
*[ram]unique[0x11480:4] = register[0x34:4]
r3 = r4
call ram[0x8016520:4]
call ram[0x80239a0:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8031860:4]
r1 = ram[0x8017654:4]
r2 = r5
r0 = ram[0x8017650:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8016520:4]
r1 = ram[0x8017658:4]
r2 = r6
goto ram[0x801762c:4]
r1 = ram[0x801765c:4]
r2 = r7
goto ram[0x801762c:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
sp = mult_addr
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x80176c4:4]
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x80176ec:4]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x80176d2:4]
NG = tmpNG
sp = mult_addr
NG = tmpNG
sp = mult_addr
NG = tmpNG
goto ram[0x8016ec4:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x801767a:4]
return pc
sp = mult_addr
r3 = ram[0x8017698:4]
r2 = ram[0x801769c:4]
r3 = zext(unique[0x11ed0:1])
r1 = ram[0x80176a0:4]
sp = sp - unique[0xfdd0:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r3 = r0
r0 = ram[0x80176a4:4]
call ram[0x8016520:4]
sp = sp + unique[0xfdd0:4]
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x8017714:4]
NG = tmpNG
sp = mult_addr
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x8017740:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r2 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x80176ba:4]
return pc
sp = mult_addr
r2 = ram[0x80176d0:4]
*[ram]unique[0x11480:4] = unique[0x176b0:1]
call ram[0x8017670:4]
call ram[0x80239a0:4]
sp = mult_addr
goto ram[0x8031860:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x80176ea:4]
return pc
sp = mult_addr
r3 = ram[0x8017708:4]
r2 = ram[0x801770c:4]
r3 = zext(unique[0x11f10:2])
r1 = ram[0x8017710:4]
sp = sp - unique[0xfdd0:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r3 = r0
r0 = ram[0x8017714:4]
call ram[0x8016520:4]
sp = sp + unique[0xfdd0:4]
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x8017784:4]
NG = tmpNG
sp = mult_addr
NG = tmpNG
if (unique[0xf6a0:1]) goto ram[0x80177b0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r2 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x801772a:4]
