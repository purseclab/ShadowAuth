sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
sp = sp - unique[0xfdd0:4]
tmpZR = r10 == 0x0
r7 = ram[0x8016388:4]
s16 = *[ram]unique[0x42b0:4]
s17 = *[ram]unique[0x42b0:4]
*[ram]unique[0x112a0:4] = register[0x48:4]
r9 = r10
r8 = r0
r10 = r1
r3 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8016262:4]
r3 = zext(unique[0x12150:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801625a:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8016344:4]
NG = tmpNG
r0 = r10
call ram[0x8014880:4]
OV = tmpOV
r11 = r0
if (unique[0xf6c0:1]) goto ram[0x801627e:4]
r0 = r10
call ram[0x8003e80:4]
r11 = r0
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x801633a:4]
r1 = r10
r0 = ram[0x8016388:4]
r2 = r11
NG = tmpNG
call ram[0x80060b4:4]
*[ram]unique[0x177b0:4] = unique[0x177d0:1]
r3 = *[ram]unique[0x12270:4]
OV = tmpOV
r10 = r10 + r11
if (unique[0xf800:1]) goto ram[0x8016370:4]
r11 = *[ram]unique[0x112a0:4]
NG = tmpNG
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x28:4]
*[ram]unique[0x17710:4] = register[0x38:4]
r2 = zext(unique[0x11eb0:1])
tmpZR = r4 == 0x0
tmpZR = r1 == 0x0
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x38:4]
*[ram]unique[0x4230:4] = register[0x340:4]
*[ram]unique[0x11420:4] = register[0x38:4]
if (unique[0xf7e0:1]) goto ram[0x801630a:4]
r1 = *[ram]unique[0x11420:4]
r3 = ram[0x8016394:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801631c:4]
r1 = *[ram]unique[0x11420:4]
r3 = ram[0x8016398:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8016350:4]
r3 = ram[0x801639c:4]
r6 = *[ram]unique[0x11420:4]
if (unique[0x11bd0:1]) goto ram[0x80162e2:4]
goto ram[0x801635e:4]
r6 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801635e:4]
r0 = *[ram]unique[0x11420:4]
r1 = r7
call ram[0x8013ff0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80162dc:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801635e:4]
*[ram]unique[0x17710:4] = register[0x28:4]
r3 = *[ram]unique[0x114b0:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r9 = r4
if (unique[0x11bf0:1]) goto ram[0x8016306:4]
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x114b0:4] = register[0x30:4]
goto ram[0x8016252:4]
r0 = r7
call ram[0x80146f0:4]
NG = tmpNG
*[ram]unique[0x17710:4] = register[0x28:4]
*[ram]unique[0x4230:4] = register[0x300:4]
goto ram[0x80162f8:4]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80162cc:4]
OV = tmpOV
s15 = 0x3f800000
unique[0xfae0:1] = ZR != 0x0
s15 = s17
NG = tmpNG
*[ram]unique[0x17710:4] = register[0x28:4]
*[ram]unique[0x4230:4] = register[0x33c:4]
goto ram[0x80162f8:4]
r1 = ram[0x80163a0:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
r0 = r9
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r1 = zext(unique[0x11ef0:2])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8016322:4]
r3 = ram[0x801639c:4]
r6 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80162e2:4]
r2 = ram[0x8016388:4]
r1 = ram[0x80163a4:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
tmpZR = r9 == 0x0
goto ram[0x8016344:4]
r1 = ram[0x80163a8:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
r9 = r6
r0 = r9
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x11420:4] = register[0x38:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
NG = tmpNG
