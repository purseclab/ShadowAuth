sp = mult_addr
r0 = s0
r4 = s0
call ram[0x80017ac:4]
r3 = 0x8019638
r3 = *[ram]unique[0x12270:4]
r6 = r0
r7 = r1
call ram[0x8001d40:4]
if (unique[0x11bd0:1]) goto ram[0x8019610:4]
s15 = *[ram]unique[0x42b0:4]
s14 = r4
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf890:1]) goto ram[0x8019612:4]
return pc
r3 = r7
r1 = ram[0x801962c:4]
r0 = ram[0x8019630:4]
r2 = r6
call ram[0x8016520:4]
r3 = ram[0x8019634:4]
*[ram]unique[0x112a0:4] = register[0x30:4]
return pc

NG = tmpNG
OV = tmpOV
r0 = mult_addr
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
call [pc]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
CALLOTHER 0x1, 0xa, 0xf, 0x6, cr7, cr13, cr0
r3 = ram[0x8019668:4]
r2 = s15
sp = mult_addr
r0 = s0
*[ram]unique[0x112a0:4] = register[0x28:4]
call ram[0x80017ac:4]
sp = mult_addr
r2 = r0
r3 = r1
r0 = ram[0x801966c:4]
r1 = ram[0x8019670:4]
goto ram[0x8016520:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
r0 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r7 = ram[0x80196dc:4]
r0 = ram[0x80196e0:4]
r4 = ram[0x80196e4:4]
r5 = ram[0x80196e8:4]
r6 = ram[0x80196ec:4]
sp = sp - unique[0xfdd0:4]
call ram[0x8021d50:4]
