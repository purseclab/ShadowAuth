sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
r6 = r3
*[ram]unique[0x114b0:4] = register[0x28:4]
r7 = r1
*[ram]unique[0x114b0:4] = register[0x20:4]
r3 = r1
r2 = ram[0x8005ee0:4]
goto ram[0x8005d3a:4]
r3 = r5
r5 = r3
r4 = zext(unique[0x12150:1])
r11 = zext(unique[0x121f0:1])
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x8005d38:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8005e70:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r4 = zext(unique[0x11eb0:1])
*[ram]unique[0x112a0:4] = register[0x4c:4]
*[ram]unique[0x112a0:4] = register[0x4c:4]
tmpZR = r5 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005e3e:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8005e7a:4]
r10 = r6
tmpZR = r11 == 0x0
r2 = r10
r3 = r11
tmpZR = r0 == 0x0
tmpZR = r1 == 0x0
call ram[0x80061c8:4]
r2 = r10
r8 = r0
r9 = r1
r3 = r11
tmpZR = r0 == 0x0
tmpZR = r1 == 0x0
call ram[0x80061c8:4]
tmpZR = r12 == 0x0
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x4c:4]
goto ram[0x8005ddc:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8005dfa:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005e34:4]
r10 = r0
r0 = *[ram]unique[0x114b0:4]
r4 = r10 * r0
r0 = *[ram]unique[0x114b0:4]
r11 = r1
r4 = unique[0x13270:4] + r4
r1 = SUBPIECE unique[0x17480:8], 0x4
r1 = r1 + r4
OV = tmpOV
tmpZR = r11 == 0x0
r0 = r10
r1 = r11
tmpZR = r12 == 0x0
r4 = zext(unique[0x12150:1])
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x8005df0:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8005e00:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8005e10:4]
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x8005da2:4]
tmpZR = r12 == 0x0
goto ram[0x8005dd8:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8005e10:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x8005df4:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8005e58:4]
r3 = *[ram]unique[0x114b0:4]
if (unique[0x11bf0:1]) goto ram[0x8005e20:4]
OV = tmpOV
tmpZR = r1 == 0x0
r3 = *[ram]unique[0x114b0:4]
if (unique[0x11bf0:1]) goto ram[0x8005e2e:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8005e6c:4]
r3 = *[ram]unique[0x114b0:4]
*[ram]unique[0x11420:4] = register[0x3c:4]
sp = sp + unique[0xfdd0:4]
return pc
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8005db2:4]
tmpZR = r12 == 0x0
goto ram[0x8005dd8:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005ea2:4]
NG = tmpNG
tmpZR = r8 == 0x0
r9 = ram[0x8005ee4:4]
tmpZR = r10 == 0x0
tmpZR = r11 == 0x0
NG = tmpNG
goto ram[0x8005d94:4]
r2 = *[ram]unique[0x114b0:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x114b0:4]
tmpZR = r0 == 0x0
tmpZR = r1 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005e2e:4]
OV = tmpOV
goto ram[0x8005e2a:4]
NG = tmpNG
r4 = zext(unique[0x11eb0:1])
*[ram]unique[0x114b0:4] = register[0x28:4]
OV = tmpOV
goto ram[0x8005d60:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8005ecc:4]
r3 = zext(unique[0x11eb0:1])
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8005ec2:4]
r4 = zext(unique[0x11eb0:1])
NG = tmpNG
OV = tmpOV
tmpZR = r8 == 0x0
tmpZR = r9 == 0x0
tmpZR = r10 == 0x0
tmpZR = r11 == 0x0
NG = tmpNG
goto ram[0x8005d94:4]
r3 = zext(unique[0x11eb0:1])
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005e88:4]
NG = tmpNG
tmpZR = r8 == 0x0
tmpZR = r9 == 0x0
tmpZR = r10 == 0x0
tmpZR = r11 == 0x0
NG = tmpNG
goto ram[0x8005d94:4]
tmpZR = r10 == 0x0
tmpZR = r11 == 0x0
goto ram[0x8005d70:4]
NG = tmpNG
tmpZR = r8 == 0x0
tmpZR = r9 == 0x0
tmpZR = r10 == 0x0
tmpZR = r11 == 0x0
goto ram[0x8005d94:4]
*[ram]unique[0x11480:4] = register[0x34:4]
NG = tmpNG
r1 = *[ram]unique[0x114b0:4]
OV = tmpOV
goto ram[0x8005d24:4]

sp = mult_addr
r4 = ram[0x8005f00:4]
r3 = r2
r2 = r1
r1 = r0
r0 = *[ram]unique[0x11420:4]
sp = sp + 0x4
goto ram[0x8005d24:4]

NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x8005f18:4]
r3 = r2
r2 = r1
r1 = r0
r0 = *[ram]unique[0x11420:4]
sp = sp + 0x4
goto ram[0x8005d24:4]

NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x8005f2c:4]
r4 = *[ram]unique[0x112a0:4]
r12 = r4
sp = sp + 0x4
goto [pc]
OV = tmpOV
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x8005f46:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8005f3c:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
return pc
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
tmpZR = r0 == 0x0
return pc
r0 = r1
return pc

sp = mult_addr
if (unique[0x11bf0:1]) goto ram[0x8005f60:4]
r5 = r0
r4 = r1
if (unique[0x11bf0:1]) goto ram[0x8005f5a:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8005fbc:4]
r3 = sext(unique[0x12560:2])
if (unique[0x11bd0:1]) goto ram[0x8005f66:4]
NG = tmpNG
r0 = r6
return pc
r1 = r4
r0 = r5
call ram[0x8004ecc:4]
r3 = *[ram]unique[0x11420:4]
r6 = r0
if (unique[0x11bf0:1]) goto ram[0x8005f82:4]
r1 = *[ram]unique[0x11420:4]
r0 = r5
call [pc]
OV = tmpOV
unique[0xfc40:1] = NG == OV
tmpZR = r6 == 0x0
r3 = zext(unique[0x11ef0:2])
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x8005fca:4]
r1 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8005f9e:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005f9a:4]
r0 = r5
call ram[0x8002f90:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
r1 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8005fac:4]
r0 = r5
call ram[0x8002f90:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x800522c:4]
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
call ram[0x8005230:4]
r0 = r6
return pc
call ram[0x8005224:4]
r3 = sext(unique[0x12560:2])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8005f60:4]
goto ram[0x8005f66:4]
r1 = *[ram]unique[0x11420:4]
r0 = r5
call ram[0x8002f90:4]
goto ram[0x8005f88:4]
r3 = ram[0x8005fe0:4]
r1 = r0
r0 = *[ram]unique[0x11420:4]
goto ram[0x8005f4c:4]

NG = tmpNG
NG = tmpNG
OV = tmpOV
sp = mult_addr
if (unique[0xf7e0:1]) goto ram[0x8006006:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x8006006:4]
OV = tmpOV
if (unique[0x11bf0:1]) goto ram[0x8006002:4]
r2 = r4
r4 = zext(unique[0x12150:1])
*[ram]unique[0x11320:4] = unique[0x17780:1]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8005ff6:4]
sp = mult_addr
return pc
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8006028:4]
r3 = r0
OV = tmpOV
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8006002:4]
OV = tmpOV
r4 = r4 + r1
OV = tmpOV
r2 = zext(unique[0x12150:1])
*[ram]unique[0x11340:4] = unique[0x17780:1]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8006018:4]
sp = mult_addr
return pc
tmpZR = r3 == 0x0
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x80060a8:4]
tmpZR = r7 == 0x0
NG = tmpNG
tmpZR = r6 == 0x0
tmpZR = r6 == 0x0
tmpZR = r3 == 0x0
tmpZR = r4 == 0x0
r5 = *[ram]unique[0x11300:4]
*[ram]unique[0x11300:4] = register[0x34:4]
r5 = *[ram]unique[0x11300:4]
*[ram]unique[0x11300:4] = register[0x34:4]
r5 = *[ram]unique[0x11300:4]
*[ram]unique[0x11300:4] = register[0x34:4]
r5 = *[ram]unique[0x11300:4]
*[ram]unique[0x11300:4] = register[0x34:4]
OV = tmpOV
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8006046:4]
OV = tmpOV
NG = tmpNG
CY = shift_carry
r1 = r1 + r3
tmpZR = r5 == 0x0
r3 = r3 + r0
if (unique[0xf6a0:1]) goto ram[0x80060ae:4]
OV = tmpOV
NG = tmpNG
tmpZR = r12 == 0x0
OV = tmpOV
r6 = r1
r7 = *[ram]unique[0x112d0:4]
*[ram]unique[0x11340:4] = register[0x3c:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x800608e:4]
OV = tmpOV
NG = tmpNG
r3 = r3 + r5
r1 = r1 + r5
tmpZR = r2 == 0x0
goto ram[0x800600c:4]
OV = tmpOV
r3 = r0
goto ram[0x8006012:4]
r2 = r5
goto ram[0x800600c:4]

sp = mult_addr
tmpZR = r4 == 0x0
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x800610e:4]
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x800610e:4]
r3 = r1
r6 = r0
r1 = r3
r5 = *[ram]unique[0x112d0:4]
tmpZR = r4 == 0x0
tmpZR = r4 == 0x0
CY = shift_carry
if (unique[0xf6c0:1]) goto ram[0x80060e8:4]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x112d0:4] = register[0x34:4]
r1 = r3
if (unique[0xf7b0:1]) goto ram[0x80060c6:4]
if (unique[0x11bf0:1]) goto ram[0x800610a:4]
r3 = r6
r4 = zext(unique[0x11eb0:1])
*[ram]unique[0x112d0:4] = unique[0x17780:1]
OV = tmpOV
if (unique[0x11bf0:1]) goto ram[0x8006112:4]
r2 = r2 + r6
r6 = r6 + r5
goto ram[0x8006106:4]
r4 = zext(unique[0x12150:1])
OV = tmpOV
*[ram]unique[0x112d0:4] = unique[0x17780:1]
if (unique[0x11bf0:1]) goto ram[0x8006112:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80060fa:4]
sp = mult_addr
return pc
r6 = r0
goto ram[0x80060e6:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800610a:4]
r5 = r5 + r3
NG = tmpNG
*[ram]unique[0x112d0:4] = unique[0x17780:1]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x800611a:4]
sp = mult_addr
return pc

if (unique[0x11bd0:1]) goto ram[0x800614a:4]
if (unique[0x11bd0:1]) goto ram[0x800614a:4]
OV = tmpOV
unique[0xfc40:1] = NG == OV
tmpZR = r0 == 0x0
tmpZR = r1 == 0x0
goto ram[0x8006146:4]
unique[0xfac0:1] = ZR != 0x0
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
tmpZR = r1 == 0x0
tmpZR = r0 == 0x0
goto ram[0x80064bc:4]
tmpZR = r12 == 0x0
*[ram]unique[0x17820:4] = register[0x58:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x800616a:4]
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8006190:4]
call ram[0x80061f8:4]
lr = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x12270:4]
sp = sp + unique[0xfdd0:4]
return pc
OV = tmpOV
tmpZR = r1 == 0x0
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x80061ac:4]
call ram[0x80061f8:4]
lr = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x12270:4]
sp = sp + unique[0xfdd0:4]
OV = tmpOV
tmpZR = r1 == 0x0
OV = tmpOV
tmpZR = r3 == 0x0
return pc
OV = tmpOV
tmpZR = r3 == 0x0
call ram[0x80061f8:4]
