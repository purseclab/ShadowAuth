sp = mult_addr
r3 = zext(unique[0x12120:1])
sp = sp - unique[0xfdd0:4]
r4 = r0
if (unique[0x11bd0:1]) goto ram[0x80289f0:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
r2 = *[ram]unique[0x112a0:4]
r3 = ram[0x8028a04:4]
tmpZR = r1 == 0x0
OV = tmpOV
call ram[0x80447f0:4]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
sp = sp + unique[0xfdd0:4]
return pc
r2 = *[ram]unique[0x11420:4]
r1 = ram[0x8028a08:4]
tmpZR = r0 == 0x0
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8015f20:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x8028a44:4]
OV = tmpOV
sp = mult_addr
r5 = r0
r4 = r1
if (unique[0xf7b0:1]) goto ram[0x8028a46:4]
r6 = ram[0x8028a58:4]
r0 = ram[0x8028a5c:4]
r3 = ram[0x8028a60:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r0 = r6
OV = tmpOV
*[ram]unique[0x17740:4] = register[0x28:4]
r4 = zext(unique[0x1a070:1])
call ram[0x80282f0:4]
r3 = ram[0x8028a64:4]
r0 = r5
r1 = zext(unique[0x11ed0:1])
NG = tmpNG
sp = mult_addr
goto ram[0x8024cf0:4]
return pc
r2 = r0
sp = mult_addr
r1 = ram[0x8028a68:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]

r0 = sext(unique[0x11f50:2])
NG = tmpNG
r0 = *[ram]unique[0x11480:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
