r3 = ram[0x800afb4:4]
r2 = s0
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x800af9a:4]
sp = mult_addr + 0x4
s15 = *[ram]unique[0x42b0:4]
mult_addr = mult_addr + 0x8
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
sp = sp - unique[0xfdd0:4]
s16 = s0
r4 = r0
if (unique[0xfa70:1]) goto ram[0x800aee6:4]
s15 = *[ram]unique[0x42b0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf930:1]) goto ram[0x800aee6:4]
r5 = ram[0x800afc0:4]
r3 = ram[0x800afb4:4]
r0 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x800af12:4]
s15 = *[ram]unique[0x42b0:4]
s14 = r0
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xfa70:1]) goto ram[0x800af26:4]
s15 = *[ram]unique[0x42b0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf930:1]) goto ram[0x800af26:4]
r6 = ram[0x800afc4:4]
r3 = ram[0x800afb4:4]
s15 = *[ram]unique[0x4230:4]
r2 = s15
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x800afa4:4]
s14 = *[ram]unique[0x42b0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf860:1]) goto ram[0x800ae0a:4]
s14 = *[ram]unique[0x42b0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf740:1]) goto ram[0x800ae32:4]
r0 = s15
call ram[0x80017ac:4]
r8 = r0
r9 = r1
*[ram]unique[0x17820:4] = register[0x44:4]
r2 = ram[0x800afc8:4]
r1 = ram[0x800afcc:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
s14 = *[ram]unique[0x42b0:4]
s15 = s14
*[ram]unique[0x4230:4] = register[0x338:4]
s0 = *[ram]unique[0x41f0:4]
r3 = ram[0x800afb4:4]
r2 = ram[0x800afd4:4]
s15 = s15 f+ s0
s0 = s15 f+ s16
r1 = s0
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x800afac:4]
s15 = *[ram]unique[0x42b0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf860:1]) goto ram[0x800af44:4]
s15 = *[ram]unique[0x42b0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf720:1]) goto ram[0x800af44:4]
tmpZR = r3 == 0x0
s15 = *[ram]unique[0x42b0:4]
r3 = *[ram]unique[0x11480:4]
s14 = *[ram]unique[0x42b0:4]
OV = tmpOV
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
unique[0xfac0:1] = ZR != 0x0
s15 = s14
OV = unique[0x4780:1] & 0x1
if (unique[0xf740:1]) goto ram[0x800ae96:4]
s0 = s0 f+ s15
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf720:1]) goto ram[0x800ae88:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf7b0:1]) goto ram[0x800aeae:4]
s0 = s0 f- s15
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf800:1]) goto ram[0x800aea0:4]
CALLOTHER 0x1, 0xa, 0xf, 0x6, cr7, cr13, cr0
r2 = ram[0x800afe0:4]
r3 = s15
tmpZR = r3 == 0x0
r3 = *[ram]unique[0x120f0:4]
tmpZR = r2 == 0x0
s16 = *[ram]unique[0x41f0:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf860:1]) goto ram[0x800af66:4]
s0 = s0 f- s16
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x4230:4] = register[0x300:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r0 = s16
call ram[0x80017ac:4]
r5 = ram[0x800afc0:4]
r2 = ram[0x800afe4:4]
s16 = *[ram]unique[0x42b0:4]
r6 = r0
r7 = r1
tmpZR = r0 == 0x0
*[ram]unique[0x17820:4] = register[0x3c:4]
r1 = ram[0x800afcc:4]
call ram[0x8015240:4]
r3 = ram[0x800afb4:4]
r0 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x800adb8:4]
r1 = ram[0x800afe8:4]
tmpZR = r0 == 0x0
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
sp = mult_addr
goto ram[0x8015240:4]
call ram[0x80017ac:4]
r6 = r0
r7 = r1
*[ram]unique[0x17820:4] = register[0x3c:4]
r2 = ram[0x800afec:4]
r1 = ram[0x800afcc:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
goto ram[0x800addc:4]
r0 = s0
call ram[0x80017ac:4]
r6 = r0
r7 = r1
*[ram]unique[0x17820:4] = register[0x3c:4]
r2 = ram[0x800aff0:4]
r1 = ram[0x800afcc:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
s0 = *[ram]unique[0x42b0:4]
goto ram[0x800aeae:4]
r0 = s0
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = s16
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x800aff4:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r1 = ram[0x800aff8:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]
r1 = ram[0x800affc:4]
tmpZR = r0 == 0x0
goto ram[0x800af18:4]
r1 = ram[0x800b000:4]
tmpZR = r0 == 0x0
goto ram[0x800af18:4]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
*[ram]unique[0x114b0:4] = register[0x38:4]
r3 = ram[0x800b01c:4]
*[ram]unique[0x114b0:4] = register[0x38:4]
mult_addr = mult_addr + 0x4
r0 = sext(unique[0x11f30:1])
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
r4 = r4 + r6
NG = tmpNG
NG = tmpNG
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r1 = ram[0x800b08c:4]
tmpZR = r3 == 0x0
r3 = *[ram]unique[0x11480:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b062:4]
tmpZR = r2 == 0x0
sp = mult_addr
r2 = *[ram]unique[0x11480:4]
if (unique[0x11bf0:1]) goto ram[0x800b07a:4]
r4 = SUBPIECE unique[0x19db0:8], 0x0
OV = tmpOV
OV = tmpOV
r0 = r0 - unique[0x13290:4]
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x800b090:4]
s14 = *[ram]unique[0x42b0:4]
tmpZR = r3 == 0x0
s14 = *[ram]unique[0x41f0:4]
tmpZR = r3 == 0x0
s15 = r4
r2 = *[ram]unique[0x11480:4]
tmpZR = r0 == 0x0
s0 = *[ram]unique[0x41f0:4]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
s0 = s14 f* s0
CALLOTHER 0x1, 0xa, 0xa, 0x4, cr0, cr7, cr7
return pc
tmpZR = r3 == 0x0
s15 = *[ram]unique[0x42b0:4]
r3 = *[ram]unique[0x11480:4]
tmpZR = r0 == 0x0
s0 = *[ram]unique[0x41f0:4]
s0 = s0 f* s15
return pc
r1 = ram[0x800b098:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
s0 = *[ram]unique[0x42b0:4]
return pc

OV = tmpOV
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
NG = tmpNG
r4 = r4 + r6
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
sp = mult_addr
NG = tmpNG
mult_addr = mult_addr + 0x8
r1 = r2
s16 = s0
s17 = 0x41700000
r4 = r0
call ram[0x8034ca0:4]
s16 = s16 f+ s17
r0 = r4
s0 = s16
NG = tmpNG
NG = tmpNG
call ram[0x8034ca0:4]
s0 = s16 f+ s17
mult_addr = mult_addr + 0x8
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r4 = ram[0x800b2cc:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
sp = sp - unique[0xfdd0:4]
r6 = r0
if (unique[0xf950:1]) goto ram[0x800b254:4]
r0 = ram[0x800b2d0:4]
r4 = ram[0x800b2d4:4]
r8 = ram[0x800b30c:4]
call ram[0x802cbc0:4]
r0 = ram[0x800b2d8:4]
call ram[0x802cbc0:4]
call ram[0x8040900:4]
r3 = zext(unique[0x12120:1])
r9 = *[ram]unique[0x112a0:4]
r5 = r0
r0 = *[ram]unique[0x112a0:4]
r7 = r7 >> unique[0x19d40:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x800b1be:4]
tmpZR = r1 == 0x0
r3 = r7
tmpZR = r10 == 0x0
r7 = ram[0x800b2dc:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
r2 = r9
r0 = ram[0x800b2e0:4]
r1 = r6
call ram[0x8035ca0:4]
r9 = zext(unique[0x121f0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b1d8:4]
r3 = *[ram]unique[0x112a0:4]
if (unique[0x11bf0:1]) goto ram[0x800b1aa:4]
OV = tmpOV
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x800b2e4:4]
r9 = ram[0x800b2fc:4]
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = *[ram]unique[0x120f0:4]
r3 = *[ram]unique[0x112a0:4]
r1 = ram[0x800b2e8:4]
r3 = *[ram]unique[0x112a0:4]
r0 = *[ram]unique[0x112a0:4]
r8 = *[ram]unique[0x112a0:4]
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r3 = zext(unique[0x12120:1])
*[ram]unique[0x114b0:4] = register[0x28:4]
r4 = r4 >> unique[0x19d40:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x800b274:4]
r0 = unique[0xfdc0:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
r3 = r4
r0 = ram[0x800b2ec:4]
r2 = r8
r1 = r6
call ram[0x8035ca0:4]
r1 = *[ram]unique[0x112a0:4]
r0 = ram[0x800b2ec:4]
tmpZR = r1 == 0x0
call ram[0x80067d0:4]
tmpZR = r3 == 0x0
*[ram]unique[0x11480:4] = register[0x20:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b26e:4]
tmpZR = r3 == 0x0
r3 = zext(unique[0x11ed0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b264:4]
sp = sp + unique[0xfdd0:4]
return pc
r7 = ram[0x800b2dc:4]
r1 = ram[0x800b2f0:4]
tmpZR = r10 == 0x0
tmpZR = r0 == 0x0
call ram[0x8015240:4]
r9 = zext(unique[0x121f0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x800b144:4]
r0 = ram[0x800b2f4:4]
call ram[0x8035c30:4]
r0 = *[ram]unique[0x112a0:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x800b280:4]
r11 = ram[0x800b2fc:4]
r3 = *[ram]unique[0x112a0:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
tmpZR = r2 == 0x0
r1 = r9
tmpZR = r0 == 0x0
call ram[0x800557c:4]
r3 = *[ram]unique[0x114b0:4]
r0 = ram[0x800b2e0:4]
*[ram]unique[0x112a0:4] = register[0x44:4]
tmpZR = r1 == 0x0
*[ram]unique[0x112a0:4] = register[0x44:4]
call ram[0x80067d0:4]
tmpZR = r3 == 0x0
r2 = r0
*[ram]unique[0x11480:4] = register[0x28:4]
r0 = ram[0x800b2e0:4]
call ram[0x8038100:4]
r9 = *[ram]unique[0x112a0:4]
tmpZR = r3 == 0x0
OV = tmpOV
*[ram]unique[0x17710:4] = register[0x20:4]
if (unique[0xf890:1]) goto ram[0x800b2aa:4]
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x800b292:4]
tmpZR = r3 == 0x0
r3 = *[ram]unique[0x11480:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b2ba:4]
r0 = ram[0x800b2e0:4]
call ram[0x8038100:4]
tmpZR = r3 == 0x0
*[ram]unique[0x17710:4] = register[0x20:4]
goto ram[0x800b144:4]
r0 = ram[0x800b2f4:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x8035c30:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
goto ram[0x800b0f2:4]
call ram[0x80154b0:4]
sp = sp + unique[0xfdd0:4]
return pc
call ram[0x80408b0:4]
goto ram[0x800b1ae:4]
r1 = ram[0x800b2f0:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x800b196:4]
r1 = ram[0x800b2f8:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
r3 = ram[0x800b2fc:4]
r9 = *[ram]unique[0x112a0:4]
goto ram[0x800b244:4]
r2 = r0
r1 = ram[0x800b300:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
NG = tmpNG
r9 = *[ram]unique[0x112a0:4]
*[ram]unique[0x177b0:4] = unique[0x177d0:1]
goto ram[0x800b244:4]
r1 = ram[0x800b304:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
r9 = *[ram]unique[0x112a0:4]
goto ram[0x800b244:4]
r1 = ram[0x800b308:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
r9 = *[ram]unique[0x112a0:4]
goto ram[0x800b244:4]

OV = tmpOV
NG = tmpNG
OV = tmpOV
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
OV = tmpOV
NG = tmpNG
OV = tmpOV
NG = tmpNG
r0 = sext(unique[0x11f30:1])
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
r3 = ram[0x800b5cc:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
q9 = CALLOTHER 0xaa, d8, d0, unique[0x2360:4], unique[0x2270:1]
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x800b338:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8024870:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x800b328:4]
sp = mult_addr
r0 = ram[0x800b33c:4]
goto ram[0x8043cb0:4]
sp = mult_addr
r1 = ram[0x800b340:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]

NG = tmpNG
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x800b3a8:4]
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x800b38e:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x800b386:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b386:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b386:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b38a:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b38a:4]
tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b392:4]
tmpZR = r3 == 0x0
OV = tmpOV
r0 = ram[0x800b398:4]
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
tmpZR = r0 == 0x0
return pc
r0 = ram[0x800b39c:4]
return pc
r0 = ram[0x800b3a0:4]
return pc
NG = tmpNG
return pc
r0 = ram[0x800b398:4]
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x800b4f0:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x800b4d2:4]
sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
r3 = ram[0x800b4f4:4]
s17 = *[ram]unique[0x42b0:4]
sp = sp - unique[0xfdd0:4]
r11 = 0x800b4e0
r11 = *[ram]unique[0x12270:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
tmpZR = r3 == 0x0
*[ram]unique[0x114b0:4] = register[0x2c:4]
