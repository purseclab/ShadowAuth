sp = mult_addr + 0x4
r3 = *[ram]unique[0x11420:4]
r7 = ram[0x801d428:4]
sp = sp - unique[0xfdd0:4]
r4 = r0
r0 = r3
*[ram]unique[0x114b0:4] = register[0x2c:4]
call ram[0x801cbb0:4]
r2 = r0
r0 = *[ram]unique[0x112a0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x8032580:4]
r6 = *[ram]unique[0x112a0:4]
r5 = r0
r0 = r6
call ram[0x8032820:4]
r3 = *[ram]unique[0x114b0:4]
r2 = *[ram]unique[0x114b0:4]
r1 = ram[0x801d42c:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
*[ram]unique[0x114b0:4] = register[0x34:4]
r0 = ram[0x801d430:4]
*[ram]unique[0x114b0:4] = register[0x38:4]
call ram[0x8016520:4]
r3 = *[ram]unique[0x11420:4]
r1 = ram[0x801d434:4]
r2 = *[ram]unique[0x112a0:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x802cd00:4]
r2 = *[ram]unique[0x112a0:4]
r1 = ram[0x801d438:4]
r3 = r0
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r0 = *[ram]unique[0x112a0:4]
call ram[0x80017ac:4]
r3 = r1
r2 = r0
r1 = ram[0x801d43c:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r1 = ram[0x801d440:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r2 = sext(unique[0x12560:2])
r1 = ram[0x801d444:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r0 = *[ram]unique[0x112a0:4]
call ram[0x8032780:4]
r1 = ram[0x801d448:4]
r2 = r0
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf950:1]) goto ram[0x801d578:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = ram[0x801d430:4]
r1 = ram[0x801d44c:4]
call ram[0x8016520:4]
r1 = ram[0x801d450:4]
r0 = ram[0x801d430:4]
r5 = ram[0x801d454:4]
call ram[0x8016520:4]
r0 = *[ram]unique[0x112a0:4]
call ram[0x80327d0:4]
r2 = r0
r0 = zext(unique[0x12120:1])
r3 = ram[0x801d458:4]
r1 = ram[0x801d45c:4]
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r3 = r5
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x801d5a4:4]
r2 = ram[0x801d460:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x801d5a0:4]
OV = tmpOV
r2 = ram[0x801d464:4]
unique[0xfae0:1] = ZR != 0x0
tmpZR = r2 == 0x0
r1 = ram[0x801d468:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x801d5a8:4]
r0 = *[ram]unique[0x112a0:4]
r5 = ram[0x801d458:4]
call ram[0x80017ac:4]
r3 = r1
r2 = r0
r1 = ram[0x801d46c:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r1 = ram[0x801d470:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r0 = *[ram]unique[0x112a0:4]
call ram[0x8032780:4]
r2 = r0
r0 = *[ram]unique[0x112a0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x80017ac:4]
r6 = zext(unique[0x12120:1])
r3 = ram[0x801d454:4]
r2 = *[ram]unique[0x114b0:4]
CY = shift_carry
unique[0xfac0:1] = ZR != 0x0
r3 = r5
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r1 = ram[0x801d474:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r3 = zext(unique[0x12120:1])
r1 = ram[0x801d478:4]
r0 = ram[0x801d430:4]
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x801d47c:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x120f0:4]
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x801d2c8:4]
r9 = ram[0x801d49c:4]
r8 = ram[0x801d430:4]
tmpZR = r6 == 0x0
NG = tmpNG
r0 = zext(unique[0x12150:1])
call ram[0x802b2c0:4]
OV = tmpOV
r3 = r0
r2 = r5
r1 = r9
r0 = r8
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x801d2aa:4]
r3 = zext(unique[0x12120:1])
r1 = ram[0x801d480:4]
r0 = ram[0x801d430:4]
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x801d47c:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x120f0:4]
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x801d314:4]
r9 = ram[0x801d4a0:4]
r8 = ram[0x801d430:4]
tmpZR = r6 == 0x0
NG = tmpNG
r0 = zext(unique[0x12150:1])
call ram[0x802b2c0:4]
OV = tmpOV
r3 = r0
r2 = r5
r1 = r9
r0 = r8
call ram[0x8016520:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x801d2f6:4]
r3 = zext(unique[0x12120:1])
r0 = zext(unique[0x12120:1])
r6 = ram[0x801d454:4]
r5 = ram[0x801d458:4]
r8 = ram[0x801d430:4]
r9 = ram[0x801d4a4:4]
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x801d47c:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x120f0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x802b2c0:4]
r1 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x114b0:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
r3 = r0
r1 = ram[0x801d484:4]
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r0 = zext(unique[0x12120:1])
call ram[0x802b2c0:4]
r3 = zext(unique[0x12120:1])
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r1 = ram[0x801d47c:4]
r2 = r0
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r3 = *[ram]unique[0x120f0:4]
r0 = ram[0x801d430:4]
r1 = ram[0x801d488:4]
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
tmpZR = r3 == 0x0
call ram[0x8016520:4]
r3 = zext(unique[0x12120:1])
r0 = zext(unique[0x12120:1])
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x801d47c:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x120f0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x802b2c0:4]
r2 = *[ram]unique[0x114b0:4]
r1 = ram[0x801d48c:4]
r3 = r0
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r3 = zext(unique[0x12120:1])
r0 = zext(unique[0x12120:1])
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x801d47c:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x120f0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x802b2c0:4]
r2 = *[ram]unique[0x114b0:4]
r1 = ram[0x801d490:4]
r3 = r0
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r3 = zext(unique[0x12120:1])
r0 = zext(unique[0x12120:1])
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x801d47c:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x120f0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x802b2c0:4]
r2 = *[ram]unique[0x114b0:4]
r1 = ram[0x801d494:4]
r3 = r0
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r3 = zext(unique[0x12120:1])
r0 = zext(unique[0x12120:1])
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x801d47c:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x120f0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x802b2c0:4]
r2 = *[ram]unique[0x114b0:4]
r1 = ram[0x801d498:4]
r3 = r0
r0 = ram[0x801d430:4]
call ram[0x8016520:4]
r3 = zext(unique[0x12120:1])
r0 = zext(unique[0x12120:1])
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
r2 = ram[0x801d47c:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x120f0:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x802b2c0:4]
r2 = *[ram]unique[0x114b0:4]
goto ram[0x801d4a8:4]
NG = tmpNG
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d468:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d4b0:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d4e4:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d530:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d374:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d3a0:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d3c4:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d3f8:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d49c:4]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x801d4bc:4]
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x801d4c2:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d4d0:4]
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x30:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
if (unique[0xf760:1]) goto ram[0x801d488:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d514:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d560:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d38c:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d3b8:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d404:4]
NG = tmpNG
CALLOTHER 0x10, 0x5c
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d464:4]
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d4c0:4]
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d504:4]
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d550:4]
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d58c:4]
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d3c0:4]
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d3f4:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d458:4]
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d4b4:4]
NG = tmpNG
if (unique[0xf7e0:1]) goto ram[0x801d598:4]
NG = tmpNG
r1 = ram[0x801d5c0:4]
r3 = r0
r0 = ram[0x801d5c4:4]
call ram[0x8016520:4]
r2 = zext(unique[0x12120:1])
r3 = zext(unique[0x12120:1])
r1 = ram[0x801d5c8:4]
r0 = ram[0x801d5c4:4]
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r2 = r6
r2 = r5
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r3 = r6
r3 = r5
call ram[0x8016520:4]
r2 = zext(unique[0x12120:1])
r3 = zext(unique[0x12120:1])
r1 = ram[0x801d5cc:4]
r0 = ram[0x801d5c4:4]
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r2 = r6
r2 = r5
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r3 = r6
r3 = r5
call ram[0x8016520:4]
r0 = zext(unique[0x12120:1])
call ram[0x802b2c0:4]
tmpZR = r3 == 0x0
r2 = r0
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x801d5d0:4]
r3 = zext(unique[0x11ed0:1])
r0 = ram[0x801d5c4:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
r3 = r6
r3 = r5
call ram[0x8016520:4]
r0 = zext(unique[0x12120:1])
call ram[0x802b2c0:4]
r7 = *[ram]unique[0x11420:4]
r1 = ram[0x801d5d4:4]
tmpZR = r3 == 0x0
r2 = r0
r3 = zext(unique[0x11ed0:1])
r0 = r8
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
r3 = r6
r3 = r5
call ram[0x8016520:4]
r2 = zext(unique[0x12120:1])
r1 = ram[0x801d5d8:4]
r0 = r8
call ram[0x8016520:4]
tmpZR = r6 == 0x0
NG = tmpNG
r0 = zext(unique[0x12150:1])
call ram[0x802b2c0:4]
r2 = r5
r3 = r0
r1 = r9
r0 = r8
OV = tmpOV
call ram[0x8016520:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801d550:4]
r0 = ram[0x801d5c4:4]
r1 = r4
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x801d040:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = *[ram]unique[0x112a0:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x801d5dc:4]
r0 = ram[0x801d5c4:4]
call ram[0x8016520:4]
goto ram[0x801d1d6:4]
r2 = ram[0x801d5e0:4]
goto ram[0x801d21a:4]
r2 = ram[0x801d5e4:4]
goto ram[0x801d21a:4]
s15 = *[ram]unique[0x4230:4]
r1 = ram[0x801d5e8:4]
r0 = ram[0x801d5c4:4]
CALLOTHER 0x1, 0xa, 0xf, 0x7, cr7, cr13, cr7
r2 = s15
call ram[0x8016520:4]
goto ram[0x801d22c:4]

if (unique[0xf7b0:1]) goto ram[0x801d554:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d59c:4]
NG = tmpNG
if (unique[0xf7b0:1]) goto ram[0x801d5c8:4]
NG = tmpNG
if (unique[0xf7e0:1]) goto ram[0x801d634:4]
NG = tmpNG
if (unique[0xf7e0:1]) goto ram[0x801d658:4]
NG = tmpNG
if (unique[0xf7e0:1]) goto ram[0x801d684:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d5c8:4]
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x801d59c:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x801d5f0:4]
NG = tmpNG
if (unique[0xf780:1]) goto ram[0x801d6b4:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d608:4]
*[ram]unique[0x4230:4] = register[0x300:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
OV = tmpOV
r5 = r1
if (unique[0xf890:1]) goto ram[0x801d61e:4]
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x801d62e:4]
r3 = r5
r2 = r4
r1 = ram[0x801d678:4]
r0 = ram[0x801d67c:4]
sp = mult_addr
goto ram[0x8016520:4]
r6 = ram[0x801d680:4]
r1 = ram[0x801d684:4]
r0 = ram[0x801d67c:4]
*[ram]unique[0x112a0:4] = register[0x30:4]
r3 = r5
r2 = r4
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x3c:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
call ram[0x8016520:4]
r2 = ram[0x801d688:4]
r3 = *[ram]unique[0x112a0:4]
r0 = *[ram]unique[0x11420:4]
tmpZR = r0 == 0x0
OV = tmpOV
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r2 = r5
r1 = r4
call ram[0x8034bc0:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]

if (unique[0xf7e0:1]) goto ram[0x801d5ac:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0xf7e0:1]) goto ram[0x801d5f0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d6b8:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
call ram[0x801d120:4]
r0 = ram[0x801d6bc:4]
r1 = ram[0x801d6c0:4]
call ram[0x8016520:4]
r3 = ram[0x801d6c4:4]
sp = mult_addr
r0 = *[ram]unique[0x11420:4]
goto ram[0x802e190:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
if (unique[0xf7e0:1]) goto ram[0x801d66c:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d6ec:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d70c:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d72c:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d748:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d768:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d788:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d7a8:4]
*[ram]unique[0x4230:4] = register[0x300:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
r2 = ram[0x801d7dc:4]
r3 = s0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801d7d2:4]
sp = mult_addr
r4 = ram[0x801d7e0:4]
*[ram]unique[0x4230:4] = register[0x300:4]
call ram[0x8031860:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x801d120:4]
r1 = ram[0x801d7e4:4]
tmpZR = r0 == 0x0
goto ram[0x8015f20:4]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
if (unique[0xf800:1]) goto ram[0x801d7f8:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d800:4]
r2 = r0
*[ram]unique[0x112a0:4] = register[0x28:4]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d820:4]
r2 = r0
*[ram]unique[0x112a0:4] = register[0x28:4]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
call ram[0x80143b0:4]
sp = mult_addr
r0 = ram[0x801d840:4]
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d860:4]
r2 = r0
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d880:4]
r2 = r0
*[ram]unique[0x112a0:4] = register[0x28:4]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d8a0:4]
r2 = r0
*[ram]unique[0x112a0:4] = register[0x28:4]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d8c0:4]
r2 = r0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d8e0:4]
r2 = r0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x801d908:4]
tmpZR = r0 == 0x0
*[ram]unique[0x4230:4] = register[0x300:4]
call ram[0x801d120:4]
sp = mult_addr
goto ram[0x8031860:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x801d928:4]
tmpZR = r0 == 0x0
*[ram]unique[0x4230:4] = register[0x300:4]
call ram[0x801d120:4]
sp = mult_addr
goto ram[0x8031860:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d940:4]
r2 = r0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d960:4]
r2 = r0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x801d980:4]
r2 = r0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r0 == 0x0
goto ram[0x801d120:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x801d9bc:4]
r1 = r0
r0 = ram[0x801d9c0:4]
*[ram]unique[0x11340:4] = register[0x24:4]
call ram[0x800b6d0:4]
r3 = ram[0x801d9c4:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x802e190:4]
call ram[0x8018070:4]
call ram[0x8031860:4]
r0 = r4
sp = mult_addr
goto ram[0x801d120:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x801d9ec:4]
r2 = r0
*[ram]unique[0x112a0:4] = register[0x28:4]
tmpZR = r0 == 0x0
call ram[0x801d120:4]
sp = mult_addr
goto ram[0x8031860:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
sp = mult_addr
s15 = r0
r3 = ram[0x801da10:4]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
tmpZR = r0 == 0x0
*[ram]unique[0x4230:4] = register[0x33c:4]
call ram[0x801d120:4]
sp = mult_addr
goto ram[0x8031860:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = ram[0x801da28:4]
goto ram[0x801d120:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
OV = tmpOV
r7 = *[ram]unique[0x114b0:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
r5 = r0
*[ram]unique[0x11420:4] = register[0x24:4]
if (unique[0xf890:1]) goto ram[0x801da8a:4]
tmpZR = r9 == 0x0
r8 = r2
tmpZR = r10 == 0x0
tmpZR = r6 == 0x0
tmpZR = r7 == 0x0
tmpZR = r11 == 0x0
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x112d0:4]
tmpZR = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x801da96:4]
r3 = r3 + r1
*[ram]unique[0x11420:4] = register[0x28:4]
r4 = r9
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
r3 = *[ram]unique[0x11340:4]
r0 = r0 + r2
r1 = r11
r2 = zext(unique[0x121f0:1])
call ram[0x80158e0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801da6a:4]
OV = tmpOV
tmpZR = r11 == 0x0
if (unique[0xf6c0:1]) goto ram[0x801da58:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801daa2:4]
sp = sp + unique[0xfdd0:4]
return pc
r1 = ram[0x801dab8:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x801da68:4]
r1 = *[ram]unique[0x114b0:4]
tmpZR = r0 == 0x0
s0 = 0x3f800000
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8015800:4]

sp = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
mult_addr = mult_addr + 0x8
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
sp = sp - unique[0xfdd0:4]
if (unique[0xf820:1]) goto ram[0x801dba2:4]
s15 = 0x3f800000
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf7b0:1]) goto ram[0x801dba2:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
s16 = s0
if (unique[0xf720:1]) goto ram[0x801dbcc:4]
r5 = r3
r6 = r2
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x4230:4] = register[0x33c:4]
tmpZR = r2 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17850:2]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x4230:4] = register[0x304:4]
s0 = s1
r4 = r0
call [pc]
r2 = unique[0xfdc0:4]
r3 = ram[0x801dbe4:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
r2 = s16
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x34:4]
tmpZR = r5 == 0x0
if (unique[0xf6a0:1]) goto ram[0x801dbc0:4]
s15 = *[ram]unique[0x42b0:4]
s15 = s15 f/ s16
r0 = s15
call ram[0x80020dc:4]
OV = tmpOV
tmpZR = r2 == 0x0
OV = tmpOV
tmpZR = r2 == 0x0
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r1 == 0x0
tmpZR = r1 == 0x0
NG = tmpNG
tmpZR = r1 == 0x0
NG = tmpNG
call ram[0x8002060:4]
s15 = r0
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
NG = tmpNG
OV = unique[0x4780:1] & 0x1
*[ram]unique[0x11420:4] = register[0x38:4]
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
if (unique[0xf6a0:1]) goto ram[0x801dbb4:4]
r1 = *[ram]unique[0x114b0:4]
NG = tmpNG
NG = tmpNG
r2 = unique[0xfdc0:4]
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x28:4]
r0 = r5
r2 = unique[0xfdc0:4]
call ram[0x801da30:4]
r2 = ram[0x801dbec:4]
*[ram]unique[0x11420:4] = register[0x38:4]
tmpZR = r3 == 0x0
r0 = r5
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x8015d50:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r1 = ram[0x801dbf0:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r1 = ram[0x801dbf4:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x801dbac:4]
r2 = ram[0x801dbe4:4]
*[ram]unique[0x11420:4] = register[0x38:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x801db6e:4]
r0 = s0
call ram[0x80017ac:4]
r2 = r0
r3 = r1
tmpZR = r0 == 0x0
r1 = ram[0x801dbf8:4]
call ram[0x8015f20:4]
goto ram[0x801dbac:4]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r1 = ram[0x801ddbc:4]
NG = tmpNG
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
if (unique[0xf800:1]) goto ram[0x801dc2c:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
if (unique[0xf800:1]) goto ram[0x801dc4c:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
r8 = *[ram]unique[0x12270:4]
r4 = r0
r6 = r2
r0 = r7
r2 = r3
*[ram]unique[0x4230:4] = register[0x300:4]
*[ram]unique[0x41f0:4] = register[0x304:4]
r5 = r1
call ram[0x802c8a0:4]
s1 = *[ram]unique[0x41f0:4]
s0 = *[ram]unique[0x4230:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
r2 = r6
r1 = r5
r0 = r4
r3 = r7
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x801dac0:4]

sp = mult_addr
r4 = r0
sp = sp - unique[0xfdd0:4]
NG = tmpNG
tmpZR = r1 == 0x0
r0 = sp
call ram[0x8024000:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r0 = sp
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17850:2]
call ram[0x8026340:4]
tmpZR = r0 == 0x0
call ram[0x8043ff0:4]
r0 = *[ram]unique[0x11420:4]
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
sp = sp - unique[0xfdd0:4]
NG = tmpNG
tmpZR = r1 == 0x0
r0 = sp
call ram[0x8024000:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r0 = sp
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17850:2]
call ram[0x8026340:4]
tmpZR = r0 == 0x0
call ram[0x8043ff0:4]
r0 = *[ram]unique[0x11420:4]
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
sp = sp - unique[0xfdd0:4]
NG = tmpNG
tmpZR = r1 == 0x0
r0 = sp
call ram[0x8024000:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r0 = sp
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17850:2]
call ram[0x8026340:4]
tmpZR = r0 == 0x0
call ram[0x8043ff0:4]
r0 = *[ram]unique[0x11420:4]
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
r5 = ram[0x801ddf8:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
sp = sp - unique[0xfdd0:4]
if (unique[0xf720:1]) goto ram[0x801de08:4]
r3 = ram[0x801ddfc:4]
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x801dd24:4]
r3 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
call [pc]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801dd1a:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x801dddc:4]
goto [pc]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r4 = unique[0xfdc0:4]
tmpZR = r1 == 0x0
NG = tmpNG
r0 = r4
call ram[0x8024000:4]
NG = tmpNG
NG = tmpNG
r0 = r4
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
call ram[0x8026340:4]
