sp = mult_addr + 0x4
r6 = *[ram]unique[0x11420:4]
r4 = r0
r0 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80136ac:4]
r0 = zext(unique[0x11eb0:1])
r5 = r2
r8 = r3
call ram[0x8001788:4]
r6 = r0
r0 = *[ram]unique[0x11420:4]
r7 = r1
call ram[0x80017ac:4]
r3 = r1
r2 = r0
r1 = r7
r0 = r6
call ram[0x8001ab0:4]
call ram[0x8001e20:4]
*[ram]unique[0x17820:4] = register[0x40:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
return pc
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x80136ea:4]
r3 = zext(unique[0x11ef0:2])
s14 = *[ram]unique[0x42b0:4]
s13 = *[ram]unique[0x42b0:4]
s15 = r3
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
s15 = s15 f* s14
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf740:1]) goto ram[0x80136e4:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf740:1]) goto ram[0x80136f0:4]
s0 = 0x41200000
return pc
s0 = *[ram]unique[0x42b0:4]
return pc
s0 = *[ram]unique[0x42b0:4]
return pc
s14 = 0x3f800000
s0 = s14 f/ s15
return pc

r4 = mult_addr
OV = tmpOV
NG = tmpNG
OV = tmpOV
if (unique[0xf780:1]) goto ram[0x801371c:4]
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8013746:4]
r3 = sext(unique[0x12420:1])
s15 = *[ram]unique[0x42b0:4]
s0 = r3
