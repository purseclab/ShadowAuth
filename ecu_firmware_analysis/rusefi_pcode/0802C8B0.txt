sp = mult_addr
r4 = ram[0x802c8e0:4]
tmpZR = r5 == 0x0
tmpZR = r6 == 0x0
r0 = r4
NG = tmpNG
OV = tmpOV
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c8bc:4]
r4 = ram[0x802c8e4:4]
tmpZR = r5 == 0x0
r0 = r4
NG = tmpNG
OV = tmpOV
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c8d0:4]
return pc
r0 = sext(unique[0x11f30:1])
NG = tmpNG
r0 = sext(unique[0x11f30:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x802c8f4:4]
return pc
sp = mult_addr + 0x4
r4 = r0
tmpZR = r6 == 0x0
tmpZR = r10 == 0x0
tmpZR = r5 == 0x0
tmpZR = r7 == 0x0
r3 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
r0 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r9 == 0x0
tmpZR = r8 == 0x0
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
OV = tmpOV
r1 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x120b0:4]
r0 = ram[0x802ca5c:4]
unique[0xfae0:1] = ZR != 0x0
