sp = mult_addr
r3 = ram[0x803a560:4]
r4 = ram[0x803a564:4]
r3 = *[ram]unique[0x11420:4]
r2 = ram[0x803a568:4]
r5 = ram[0x803a56c:4]
*[ram]unique[0x11420:4] = register[0x28:4]
r6 = r4
NG = tmpNG
r0 = r5
call ram[0x8043e20:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803a530:4]
r3 = zext(unique[0x11eb0:1])
NG = tmpNG
r0 = r6
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803a530:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x803a530:4]
call ram[0x803a4a0:4]
NG = tmpNG
r0 = r5
call ram[0x8043e20:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x803a53e:4]
goto ram[0x803a530:4]
NG = tmpNG
NG = tmpNG
if (unique[0xf820:1]) goto ram[0x803a528:4]
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
tmpZR = r1 == 0x0
sp = sp - unique[0xfdd0:4]
r5 = r0
call ram[0x803a4a0:4]
r4 = r0
if (unique[0x11bf0:1]) goto ram[0x803a588:4]
r0 = r4
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
call ram[0x8043ff0:4]
tmpZR = r1 == 0x0
r0 = r5
call ram[0x803a4a0:4]
tmpZR = r1 == 0x0
r4 = r0
r0 = r5
call ram[0x803a4a0:4]
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x803a582:4]
tmpZR = r1 == 0x0
r0 = r5
call ram[0x803a4a0:4]
tmpZR = r1 == 0x0
r4 = r0
r0 = r5
