sp = mult_addr + 0x4
r4 = r0
r6 = r1
r5 = r2
call ram[0x8040dd0:4]
if (unique[0x11bf0:1]) goto ram[0x8040f18:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8040f06:4]
tmpZR = r9 == 0x0
r8 = sext(unique[0x182d0:2])
r3 = *[ram]unique[0x112a0:4]
if (unique[0x11bf0:1]) goto ram[0x8040f1e:4]
tmpZR = r0 == 0x0
r2 = ram[0x8041084:4]
r1 = ram[0x8041088:4]
call ram[0x8015240:4]
r0 = ram[0x8041084:4]
call ram[0x8040b00:4]
tmpZR = r0 == 0x0
r2 = ram[0x804108c:4]
r1 = ram[0x8041088:4]
call ram[0x8015240:4]
r0 = ram[0x804108c:4]
call ram[0x8040b00:4]
r0 = ram[0x8041090:4]
call ram[0x8040b00:4]
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
if (unique[0x11bf0:1]) goto ram[0x8040f30:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8040f40:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x112a0:4]
r5 = *[ram]unique[0x11420:4]
r7 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
tmpZR = r7 == 0x0
OV = tmpOV
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
tmpZR = r7 == 0x0
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
unique[0xfc00:1] = CY && unique[0xfbe0:1]
tmpZR = r7 == 0x0
*[ram]unique[0x112a0:4] = register[0x24:4]
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
r7 = ram[0x8041094:4]
tmpZR = r7 == 0x0
NG = tmpNG
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804100e:4]
r0 = zext(unique[0x11ef0:2])
tmpZR = r3 == 0x0
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = register[0x20:4]
tmpZR = r12 == 0x0
r0 = *[ram]unique[0x112a0:4]
NG = tmpNG
tmpZR = r3 == 0x0
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x2c:4]
OV = tmpOV
r1 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x20:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8041036:4]
r3 = zext(unique[0x11ef0:2])
r2 = zext(unique[0x11ef0:2])
NG = tmpNG
OV = tmpOV
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
tmpZR = r3 == 0x0
r10 = *[ram]unique[0x12270:4]
tmpZR = r1 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
tmpZR = r8 == 0x0
if (unique[0xf7b0:1]) goto ram[0x804107a:4]
r2 = r5
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
NG = tmpNG
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x24:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x8040fdc:4]
NG = tmpNG
call ram[0x8040ae0:4]
r3 = *[ram]unique[0x112a0:4]
r3 = zext(unique[0x11ef0:2])
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = register[0x3c:4]
NG = tmpNG
r3 = *[ram]unique[0x112a0:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x24:4]
return pc
tmpZR = r3 == 0x0
tmpZR = r12 == 0x0
r0 = *[ram]unique[0x112a0:4]
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = register[0x20:4]
r3 = *[ram]unique[0x112a0:4]
NG = tmpNG
tmpZR = r0 == 0x0
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x2c:4]
goto ram[0x8040f96:4]
tmpZR = r2 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
r1 = ram[0x8041098:4]
*[ram]unique[0x11420:4] = register[0x24:4]
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x804104a:4]
tmpZR = r8 == 0x0
NG = tmpNG
call ram[0x8040ae0:4]
r2 = *[ram]unique[0x112a0:4]
tmpZR = r2 == 0x0
*[ram]unique[0x112a0:4] = register[0x28:4]
r1 = *[ram]unique[0x112a0:4]
NG = tmpNG
tmpZR = r6 == 0x0
tmpZR = r1 == 0x0
*[ram]unique[0x112a0:4] = register[0x24:4]
goto ram[0x804100a:4]
call ram[0x803f7b0:4]
r2 = *[ram]unique[0x11420:4]
goto ram[0x8040fc6:4]

*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r6 = *[ram]unique[0x112a0:4]
r5 = *[ram]unique[0x11420:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80410b6:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
r7 = r0
if (unique[0xf6a0:1]) goto ram[0x80410ba:4]
NG = tmpNG
return pc
r3 = zext(unique[0x11eb0:1])
r2 = zext(unique[0x11ef0:2])
NG = tmpNG
tmpZR = r3 == 0x0
NG = unique[0x184e0:4] s< 0x0
if (unique[0xf6c0:1]) goto ram[0x80410b6:4]
call ram[0x8040dd0:4]
r3 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80410e6:4]
r0 = r5
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
tmpZR = r3 == 0x0
call ram[0x8040e60:4]
NG = tmpNG
return pc
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80410d4:4]
goto ram[0x80410b6:4]

r0 = *[ram]unique[0x11420:4]
goto ram[0x80410a0:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r6 = r2
r7 = r0
r4 = r1
r5 = r3
call ram[0x8040dd0:4]
if (unique[0x11bf0:1]) goto ram[0x8041112:4]
if (unique[0x11bd0:1]) goto ram[0x8041118:4]
r0 = ram[0x80411d4:4]
call ram[0x8040b00:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8041120:4]
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x8041112:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804113e:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x804113e:4]
tmpZR = r0 == 0x0
r2 = ram[0x80411d8:4]
r1 = ram[0x80411dc:4]
call ram[0x8015240:4]
r0 = ram[0x80411d8:4]
call ram[0x8040b00:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = zext(unique[0x11eb0:1])
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x17820:4] = register[0x34:4]
if (unique[0x11bf0:1]) goto ram[0x804115a:4]
OV = tmpOV
unique[0xfc00:1] = CY && unique[0xfbe0:1]
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
r3 = *[ram]unique[0x11420:4]
r12 = zext(unique[0x122d0:2])
r1 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x38:4]
r5 = r5 * r12
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x11420:4] = register[0x20:4]
r6 = *[ram]unique[0x11420:4]
r5 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
r7 = zext(unique[0x11ef0:2])
tmpZR = r6 == 0x0
*[ram]unique[0x11420:4] = register[0x38:4]
r1 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x38:4]
r6 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x24:4]
r1 = zext(unique[0x11ef0:2])
*[ram]unique[0x11420:4] = register[0x38:4]
*[ram]unique[0x11420:4] = register[0x24:4]
r1 = *[ram]unique[0x12270:4]
tmpZR = r12 == 0x0
tmpZR = r2 == 0x0
tmpZR = r2 == 0x0
tmpZR = r5 == 0x0
*[ram]unique[0x11420:4] = register[0x3c:4]
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x11420:4] = register[0x38:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x28:4]
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x80411c6:4]
tmpZR = r2 == 0x0
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
*[ram]unique[0x11420:4] = register[0x20:4]
return pc

*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
r5 = ram[0x804144c:4]
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
sp = mult_addr
r4 = r0
r5 = r1
call ram[0x8040dd0:4]
r2 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8041214:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r2 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x804120a:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r0 = r4
call ram[0x800a210:4]
NG = tmpNG
return pc
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80411f2:4]
tmpZR = r0 == 0x0
return pc
sp = mult_addr
r4 = r0
r5 = r1
call ram[0x8040dd0:4]
r0 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804123a:4]
r3 = *[ram]unique[0x112d0:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8041232:4]
NG = tmpNG
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
sp = sp - unique[0xfdd0:4]
if (unique[0xf6c0:1]) goto ram[0x8041268:4]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804126c:4]
sp = sp + unique[0xfdd0:4]
return pc
r1 = zext(unique[0x11eb0:1])
r2 = zext(unique[0x11ef0:2])
NG = tmpNG
NG = tmpNG
NG = unique[0x184e0:4] s< 0x0
if (unique[0xf6c0:1]) goto ram[0x8041268:4]
r1 = unique[0xfdc0:4]
tmpZR = r0 == 0x0
call ram[0x8041220:4]
r2 = r0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8041268:4]
r0 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x114b0:4]
r1 = zext(unique[0x11eb0:1])
r0 = *[ram]unique[0x11420:4]
call ram[0x8040df0:4]
goto ram[0x8041268:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r5 = ram[0x8041320:4]
r3 = *[ram]unique[0x11420:4]
r6 = *[ram]unique[0x11420:4]
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
call ram[0x8040dd0:4]
if (unique[0x11bf0:1]) goto ram[0x8041312:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x8041300:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8041300:4]
NG = tmpNG
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
goto ram[0x80412d2:4]
r4 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x80412d0:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x38:4]
*[ram]unique[0x11420:4] = register[0x38:4]
call ram[0x8034370:4]
r3 = CALLOTHER 0x10a
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8041318:4]
r0 = *[ram]unique[0x11420:4]
r1 = r6
sp = mult_addr
goto ram[0x8000318:4]
tmpZR = r0 == 0x0
r2 = ram[0x8041324:4]
r1 = ram[0x8041328:4]
call ram[0x8015240:4]
r0 = ram[0x8041324:4]
call ram[0x8040b00:4]
r0 = ram[0x804132c:4]
call ram[0x8040b00:4]
r0 = ram[0x8041330:4]
call ram[0x8040b00:4]
