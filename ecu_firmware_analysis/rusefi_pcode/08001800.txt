OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
return pc
sp = mult_addr
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x8001816:4]
OV = tmpOV
tmpZR = r1 == 0x0
tmpZR = r4 == 0x0
tmpZR = r4 == 0x0
NG = tmpNG
if (unique[0xf8b0:1]) goto ram[0x80015d6:4]
tmpZR = r2 == 0x0
NG = tmpNG
unique[0xfae0:1] = ZR != 0x0
tmpZR = r2 == 0x0
NG = tmpNG
unique[0xfae0:1] = ZR != 0x0
tmpZR = r2 == 0x0
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
tmpZR = r12 == 0x0
tmpZR = r0 == 0x0
tmpZR = lr == 0x0
tmpZR = r0 == 0x0
tmpZR = r1 == 0x0
r4 = r4 + r2
goto ram[0x80015d6:4]

sp = mult_addr
tmpZR = r12 == 0x0
tmpZR = r12 == 0x0
NG = tmpNG
unique[0xfae0:1] = ZR != 0x0
NG = tmpNG
CY = shift_carry
CY = shift_carry
call ram[0x8001a38:4]
r4 = r4 + r5
tmpZR = r6 == 0x0
tmpZR = r1 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
OV = tmpOV
tmpZR = r1 == 0x0
tmpZR = r3 == 0x0
if (unique[0xf6a0:1]) goto ram[0x8001910:4]
lr = SUBPIECE unique[0x17480:8], 0x4
tmpZR = r5 == 0x0
r5 = SUBPIECE unique[0x175e0:8], 0x4
tmpZR = r2 == 0x0
r5 = SUBPIECE unique[0x175e0:8], 0x4
tmpZR = r6 == 0x0
r6 = SUBPIECE unique[0x175e0:8], 0x4
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
tmpZR = lr == 0x0
tmpZR = r4 == 0x0
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf6e0:1]) goto ram[0x80018dc:4]
NG = tmpNG
OV = tmpOV
tmpZR = r6 == 0x0
tmpZR = r1 == 0x0
tmpZR = r1 == 0x0
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
tmpZR = lr == 0x0
OV = tmpOV
unique[0xfbd0:1] = CY && unique[0xfbb0:1]
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x800193a:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
NG = tmpNG
OV = tmpOV
tmpZR = r1 == 0x0
return pc
tmpZR = r6 == 0x0
tmpZR = r1 == 0x0
tmpZR = r0 == 0x0
tmpZR = r1 == 0x0
OV = tmpOV
unique[0xfc80:1] = unique[0xfc50:1] && unique[0xfc60:1]
OV = tmpOV
tmpZR = r1 == 0x0
return pc
tmpZR = r1 == 0x0
