sp = mult_addr
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8040240:4]
r5 = ram[0x8040248:4]
r3 = zext(unique[0x11eb0:1])
r4 = *[ram]unique[0x11420:4]
NG = tmpNG
tmpZR = r3 == 0x0
NG = unique[0x184e0:4] s< 0x0
if (unique[0xf6a0:1]) goto ram[0x804022e:4]
r2 = zext(unique[0x11eb0:1])
r6 = ram[0x804024c:4]
NG = tmpNG
tmpZR = r3 == 0x0
OV = tmpOV
tmpZR = r4 == 0x0
r2 = r2 + r6
NG = tmpNG
CY = shift_carry
tmpZR = r4 == 0x0
*[ram]unique[0x17740:4] = register[0x24:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0xf6c0:1]) goto ram[0x8040212:4]
r2 = ram[0x8040250:4]
r1 = *[ram]unique[0x11420:4]
tmpZR = r1 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
r1 = *[ram]unique[0x11420:4]
tmpZR = r1 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
r2 = *[ram]unique[0x11420:4]
CY = shift_carry
if (unique[0xf6c0:1]) goto ram[0x804022c:4]
r3 = ram[0x8040250:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r3 = *[ram]unique[0x11420:4]
return pc
tmpZR = r0 == 0x0
r2 = ram[0x8040254:4]
r1 = ram[0x8040258:4]
call ram[0x8015240:4]
r0 = ram[0x8040254:4]
call ram[0x8040b00:4]
r0 = ram[0x804025c:4]
call ram[0x8040b00:4]

*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
goto ram[0x8040450:4]
goto ram[0x8040252:4]
OV = tmpOV
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
sp = mult_addr
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8040318:4]
r6 = ram[0x8040320:4]
r5 = zext(unique[0x11eb0:1])
r7 = *[ram]unique[0x11420:4]
NG = tmpNG
tmpZR = r12 == 0x0
CY = shift_carry
if (unique[0xf6c0:1]) goto ram[0x8040314:4]
r4 = ram[0x8040324:4]
tmpZR = r7 == 0x0
tmpZR = r12 == 0x0
CY = shift_carry
*[ram]unique[0x17740:4] = register[0x28:4]
*[ram]unique[0x11420:4] = register[0x3c:4]
*[ram]unique[0x112a0:4] = register[0x2c:4]
if (unique[0xf6a0:1]) goto ram[0x80402a6:4]
r3 = ram[0x8040328:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r3 = *[ram]unique[0x11420:4]
CY = shift_carry
if (unique[0xf6c0:1]) goto ram[0x80402fe:4]
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf6c0:1]) goto ram[0x80402b6:4]
r5 = zext(unique[0x11eb0:1])
r6 = *[ram]unique[0x11420:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x34:4]
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
tmpZR = r5 == 0x0
NG = tmpNG
tmpZR = r5 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
tmpZR = r2 == 0x0
tmpZR = r0 == 0x0
r1 = zext(unique[0x1a070:1])
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r0 = r3
*[ram]unique[0x112a0:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x30:4]
return pc
r3 = ram[0x8040328:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
*[ram]unique[0x11420:4] = register[0x28:4]
r3 = *[ram]unique[0x11420:4]
goto ram[0x80402ac:4]
r0 = r4
return pc
r0 = ram[0x804032c:4]
