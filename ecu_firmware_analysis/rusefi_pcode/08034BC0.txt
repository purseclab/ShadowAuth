sp = mult_addr + 0x4
OV = tmpOV
r4 = r0
if (unique[0xf890:1]) goto ram[0x8034c5c:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8034c4e:4]
r7 = r2
r1 = r3
r6 = r3
call ram[0x8030240:4]
OV = tmpOV
s0 = r3
r0 = r4
s0 = CALLOTHER 0xc4, s0, unique[0x31a0:1]
call ram[0x8030210:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8034c2e:4]
if (unique[0x11bf0:1]) goto ram[0x8034c34:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
tmpZR = r3 == 0x0
s2 = *[ram]unique[0x42b0:4]
s15 = *[ram]unique[0x42b0:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
s2 = s15
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x8034c70:4]
r3 = r7
r2 = r5
r1 = r4
s4 = *[ram]unique[0x42b0:4]
s1 = *[ram]unique[0x42b0:4]
sp = mult_addr
s3 = 0xbf800000
s0 = 0x3f000000
NG = tmpNG
goto ram[0x8030d20:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x8034bf8:4]
s2 = *[ram]unique[0x42b0:4]
s15 = *[ram]unique[0x42b0:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
OV = tmpOV
tmpZR = r3 == 0x0
unique[0xfac0:1] = ZR != 0x0
s2 = s15
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x8034c0e:4]
sp = mult_addr
r1 = ram[0x8034c90:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]
r1 = ram[0x8034c94:4]
r2 = r5
tmpZR = r0 == 0x0
call ram[0x8015240:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
return pc
sp = mult_addr
r1 = ram[0x8034c98:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]

NG = tmpNG
r4 = r4 + r6
NG = tmpNG
NG = tmpNG
NG = tmpNG
r2 = r2 + unique[0xfd40:4]
NG = tmpNG
NG = tmpNG
r6 = ram[0x8034dd4:4]
NG = tmpNG
r6 = ram[0x8034cf8:4]
NG = tmpNG
r6 = ram[0x8034e3c:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
s15 = *[ram]unique[0x42b0:4]
s0 = s0 f/ s15
goto ram[0x8030a20:4]
NG = tmpNG
r4 = r4 + r6
sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
r4 = r0
r6 = r1
NG = tmpNG
s17 = s0
r8 = zext(unique[0x12120:1])
r5 = r2
r7 = r3
tmpZR = r9 == 0x0
call ram[0x8030240:4]
s0 = 0x40a00000
s0 = s17 f+ s0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r0 = r4
call ram[0x800b0a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8034dca:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
s16 = s0
s0 = s16
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
s16 = s0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8034e04:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
s16 = s0
s20 = *[ram]unique[0x42b0:4]
s19 = *[ram]unique[0x42b0:4]
NG = tmpNG
s0 = s16
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
call ram[0x800b0a0:4]
r0 = r4
s16 = s0
if (unique[0x11bd0:1]) goto ram[0x8034d90:4]
call ram[0x800b0a0:4]
s16 = s0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8034d8c:4]
mult_addr = mult_addr + 0x8
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
return pc
NG = tmpNG
goto ram[0x8034d48:4]
s15 = r6
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
s18 = s17
CALLOTHER 0x1, 0xa, 0xa, 0x4, cr9, cr7, cr10
r1 = r8
NG = tmpNG
s0 = s18 f- s19
call ram[0x8034ca0:4]
r0 = r4
s0 = s16
call ram[0x800b0a0:4]
NG = tmpNG
s16 = s0
r1 = r8
s0 = s18
r0 = r4
call ram[0x8034ca0:4]
goto ram[0x8034d7a:4]
s18 = 0x40f00000
r1 = r7
NG = tmpNG
s16 = s0
r0 = r4
s0 = s0 f- s18
call ram[0x8034ca0:4]
r0 = r4
s0 = s16
