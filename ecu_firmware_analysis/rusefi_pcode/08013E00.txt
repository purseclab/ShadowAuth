sp = mult_addr
sp = sp - unique[0xfdd0:4]
r3 = r1
r5 = r0
OV = tmpOV
r0 = sp
OV = tmpOV
call ram[0x801ee20:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x8013e24:4]
NG = tmpNG
r0 = r5
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x28:4]
sp = sp + unique[0xfdd0:4]
return pc
s0 = *[ram]unique[0x4230:4]
r1 = r4
r0 = unique[0xfdc0:4]
call ram[0x8020a30:4]
r3 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8013e18:4]
r2 = *[ram]unique[0x114b0:4]
*[ram]unique[0x11420:4] = register[0x28:4]
NG = tmpNG
r0 = r5
*[ram]unique[0x11460:4] = unique[0x17690:1]
sp = sp + unique[0xfdd0:4]
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
mult_addr = mult_addr + 0x8
tmpZR = r6 == 0x0
r3 = r0
sp = sp - unique[0xfdd0:4]
r0 = r6
s16 = s0
OV = tmpOV
r5 = r1
call ram[0x801f8d0:4]
s0 = s16
r1 = r6
r0 = unique[0xfdc0:4]
call ram[0x801ee20:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x8013e86:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
s0 = *[ram]unique[0x4230:4]
r1 = r5
r0 = r4
*[ram]unique[0x4230:4] = register[0x300:4]
call ram[0x8020a90:4]
s0 = *[ram]unique[0x4230:4]
r1 = r4
r0 = unique[0xfdc0:4]
call ram[0x8020a30:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc

NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x1a070:1])
