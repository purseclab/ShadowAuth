r3 = ram[0x803ea28:4]
r1 = ram[0x803ea2c:4]
r3 = zext(unique[0x11ef0:2])
NG = tmpNG
r3 = zext(unique[0x1a1b0:2])
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x28:4]
r2 = zext(unique[0x11eb0:1])
OV = tmpOV
r3 = zext(unique[0x1a070:1])
if (unique[0xf6a0:1]) goto ram[0x803ea10:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
r2 = ram[0x803ea30:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = zext(unique[0x11eb0:1])
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc

OV = tmpOV
NG = tmpNG
OV = tmpOV
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x803ea68:4]
sp = mult_addr
r4 = ram[0x803ea6c:4]
r1 = r1 + r0
tmpZR = r2 == 0x0
r3 = zext(unique[0x12150:1])
NG = tmpNG
r3 = zext(unique[0x1a070:1])
OV = tmpOV
r3 = *[ram]unique[0x120f0:4]
tmpZR = r2 == 0x0
if (unique[0xf6c0:1]) goto ram[0x803ea4c:4]
NG = tmpNG
sp = sp + 0x4
return pc
r0 = r1
