sp = mult_addr + 0x4
r4 = ram[0x800b968:4]
mult_addr = mult_addr + 0x8
r7 = r0
r6 = r1
tmpZR = r8 == 0x0
tmpZR = r10 == 0x0
tmpZR = r9 == 0x0
NG = tmpNG
goto ram[0x800b6f6:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
OV = tmpOV
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b714:4]
r3 = sext(unique[0x12420:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x800b6ee:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r0 = r4
NG = tmpNG
call ram[0x802c180:4]
OV = tmpOV
*[ram]unique[0x11300:4] = unique[0x17780:1]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x800b6f6:4]
r3 = ram[0x800b96c:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = register[0x34:4]
tmpZR = r8 == 0x0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x800b718:4]
r4 = ram[0x800b970:4]
s16 = *[ram]unique[0x42b0:4]
call ram[0x8032f40:4]
tmpZR = r12 == 0x0
r1 = ram[0x800b978:4]
*[ram]unique[0x112a0:4] = register[0x50:4]
tmpZR = r12 == 0x0
r3 = zext(unique[0x122d0:2])
r2 = zext(unique[0x12120:1])
r0 = ram[0x800b97c:4]
*[ram]unique[0x112a0:4] = register[0x50:4]
*[ram]unique[0x112a0:4] = register[0x24:4]
tmpZR = r12 == 0x0
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x20:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r0 = ram[0x800b980:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
tmpZR = r1 == 0x0
tmpZR = r12 == 0x0
r2 = unique[0x11a20:4] | unique[0x11a10:4]
tmpZR = r12 == 0x0
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r3 == 0x0
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x50:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r12 == 0x0
r0 = ram[0x800b984:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
NG = tmpNG
NG = tmpNG
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x50:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
tmpZR = r12 == 0x0
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
NG = tmpNG
NG = tmpNG
tmpZR = r8 == 0x0
*[ram]unique[0x112a0:4] = register[0x50:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r12 == 0x0
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
NG = tmpNG
tmpZR = r9 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x17820:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
s0 = s16
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x340:4]
*[ram]unique[0x4230:4] = register[0x340:4]
call ram[0x80235d0:4]
s0 = s16
tmpZR = r0 == 0x0
call ram[0x80235d0:4]
r3 = zext(unique[0x12120:1])
*[ram]unique[0x112a0:4] = register[0x40:4]
tmpZR = r3 == 0x0
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r0 = r9
*[ram]unique[0x112a0:4] = register[0x28:4]
call ram[0x80143b0:4]
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
*[ram]unique[0x11420:4] = register[0x38:4]
*[ram]unique[0x112a0:4] = register[0x2c:4]
OV = tmpOV
if (unique[0xf9c0:1]) goto ram[0x800bc74:4]
goto [pc]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = sext(unique[0x11f30:1])
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176b0:1]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r0 = mult_addr
OV = tmpOV
