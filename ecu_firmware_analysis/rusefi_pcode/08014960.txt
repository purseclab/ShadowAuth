sp = mult_addr
r3 = r0
mult_addr = mult_addr + 0x8
r4 = r1
r0 = ram[0x8014988:4]
r1 = r3
s16 = s1
call ram[0x8032870:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
tmpZR = r4 == 0x0
*[ram]unique[0x41f0:4] = register[0x340:4]
mult_addr = mult_addr + 0x8
return pc
if (unique[0x11bf0:1]) goto ram[0x80149d2:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r1 = ram[0x801499c:4]
NG = tmpNG
tmpZR = r0 == 0x0
goto ram[0x8014960:4]
r4 = zext(unique[0x11eb0:1])
NG = tmpNG
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf7e0:1]) goto ram[0x80149d4:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf800:1]) goto ram[0x80149ce:4]
s3 = s1 f- s3
s2 = s0 f- s2
s14 = s3 f/ s2
CALLOTHER 0x1, 0xa, 0xe, 0x2, cr0, cr0, cr7
CALLOTHER 0x1, 0xa, 0xe, 0x0, cr0, cr2, cr7
s0 = s1
return pc
s0 = s3
return pc
s0 = s1
