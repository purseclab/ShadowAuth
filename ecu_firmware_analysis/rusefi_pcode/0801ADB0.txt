r3 = ram[0x801adf8:4]
r1 = *[ram]unique[0x120f0:4]
sp = mult_addr
r4 = r0
if (unique[0x11bf0:1]) goto ram[0x801add8:4]
r3 = ram[0x801adfc:4]
r0 = ram[0x801ae00:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
OV = tmpOV
tmpZR = r2 == 0x0
sp = mult_addr
s0 = *[ram]unique[0x4230:4]
goto ram[0x8019e70:4]
r3 = ram[0x801ae04:4]
r3 = r3 + r0
r0 = zext(unique[0x12120:1])
call ram[0x802b2c0:4]
r1 = ram[0x801ae08:4]
r3 = r0
OV = tmpOV
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
s0 = *[ram]unique[0x42b0:4]
return pc
r3 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
CALLOTHER 0x11, 0x24
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r3 = mult_addr
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
sp = mult_addr + 0x4
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
mult_addr = mult_addr + 0x8
r8 = r0
if (unique[0xf760:1]) goto ram[0x801ae88:4]
r6 = r2
r2 = r3
r5 = r3
s16 = s0
r7 = r1
call ram[0x8032870:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801ae7c:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801ae6c:4]
s4 = s16
mult_addr = mult_addr + 0x8
NG = tmpNG
OV = tmpOV
OV = tmpOV
OV = tmpOV
r3 = r3 + r7
r4 = r4 + r7
s1 = *[ram]unique[0x41f0:4]
s0 = *[ram]unique[0x41f0:4]
s3 = *[ram]unique[0x41f0:4]
s2 = *[ram]unique[0x41f0:4]
r0 = r8
sp = mult_addr
goto ram[0x8019a30:4]
tmpZR = r5 == 0x0
s0 = *[ram]unique[0x4210:4]
mult_addr = mult_addr + 0x8
