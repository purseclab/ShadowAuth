sp = mult_addr + 0x4
r4 = ram[0x8021db8:4]
r6 = ram[0x8021dbc:4]
r5 = ram[0x8021dc0:4]
r10 = ram[0x8021dc4:4]
r9 = ram[0x8021dc8:4]
sp = sp - unique[0xfdd0:4]
r7 = r0
tmpZR = r8 == 0x0
goto ram[0x8021d82:4]
r3 = *[ram]unique[0x11420:4]
r0 = r3
if (unique[0x11bf0:1]) goto ram[0x8021dac:4]
r3 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
call [pc]
OV = tmpOV
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8021da6:4]
r5 = *[ram]unique[0x11340:4]
r3 = zext(unique[0x11eb0:1])
r2 = r5
r1 = r7
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8021d6c:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x80017ac:4]
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x24:4]
r2 = r5
r1 = r9
r0 = r7
call ram[0x8016520:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8021d7e:4]
sp = sp + unique[0xfdd0:4]
return pc
r1 = r10
r0 = r7
call ram[0x8016520:4]
goto ram[0x8021d78:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
goto ram[0x8021e98:4]
NG = tmpNG
r4 = *[ram]unique[0x11480:4]
NG = tmpNG
tmpZR = r8 == 0x0
