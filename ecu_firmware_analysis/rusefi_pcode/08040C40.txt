OV = tmpOV
sp = mult_addr
if (unique[0xf700:1]) goto ram[0x8040c74:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8040c74:4]
tmpZR = r3 == 0x0
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r5 == 0x0
tmpZR = r4 == 0x0
if (unique[0xf7b0:1]) goto ram[0x8040c7a:4]
r0 = *[ram]unique[0x120f0:4]
NG = tmpNG
NG = tmpNG
return pc
r0 = ram[0x8040c94:4]
call ram[0x8040b00:4]
r2 = *[ram]unique[0x120f0:4]
r0 = *[ram]unique[0x120f0:4]
NG = tmpNG
tmpZR = r2 == 0x0
tmpZR = r4 == 0x0
tmpZR = r0 == 0x0
NG = tmpNG
return pc
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x8040cb8:4]
r2 = *[ram]unique[0x11420:4]
if (unique[0x11bd0:1]) goto ram[0x8040cb0:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x8040cb0:4]
return pc
r0 = ram[0x8040cbc:4]
call ram[0x8040b00:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
sp = mult_addr
r5 = r1
r4 = r0
call ram[0x8040ca0:4]
if (unique[0x11bf0:1]) goto ram[0x8040d02:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8040d02:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8040d08:4]
r3 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x34:4]
r0 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r3 = r3 + r0
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
unique[0xfb00:1] = CY != 0x0
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
OV = tmpOV
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x28:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x28:4]
if (unique[0x11bf0:1]) goto ram[0x8040d1a:4]
r0 = r4
sp = mult_addr
goto [pc]
r0 = ram[0x8040d1c:4]
call ram[0x8040b00:4]
