r3 = ram[0x80228cc:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x20:4]
if (unique[0xf6a0:1]) goto ram[0x8022892:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80228ac:4]
OV = tmpOV
tmpZR = r2 == 0x0
unique[0xfae0:1] = ZR != 0x0
r0 = ram[0x80228d0:4]
r1 = ram[0x80228d4:4]
r0 = ram[0x80228d8:4]
r1 = ram[0x80228dc:4]
*[ram]unique[0x112a0:4] = register[0x28:4]
r2 = ram[0x80228e0:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
*[ram]unique[0x112a0:4] = register[0x24:4]
*[ram]unique[0x112a0:4] = register[0x28:4]
return pc
r2 = ram[0x80228e4:4]
r0 = ram[0x80228e8:4]
r1 = ram[0x80228ec:4]
*[ram]unique[0x112a0:4] = register[0x28:4]
r2 = ram[0x80228f0:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
*[ram]unique[0x112a0:4] = register[0x24:4]
*[ram]unique[0x112a0:4] = register[0x28:4]
return pc
sp = mult_addr
r0 = ram[0x80228f4:4]
r1 = ram[0x80228e0:4]
r2 = ram[0x80228f8:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x30:4]
*[ram]unique[0x112a0:4] = register[0x24:4]
sp = sp + 0x4
*[ram]unique[0x112a0:4] = register[0x28:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
OV = tmpOV
NG = tmpNG
OV = tmpOV
OV = tmpOV
d4 = CALLOTHER 0xf3, d4, d15, 0x2
d4 = CALLOTHER 0xf3, d4, d15, 0x22
NG = tmpNG
NG = tmpNG
r4 = mult_addr
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x38:4]
OV = tmpOV
NG = tmpNG
OV = tmpOV
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
sp = mult_addr
r3 = ram[0x8022924:4]
r0 = ram[0x8022928:4]
r1 = zext(unique[0x12120:1])
call ram[0x802aa70:4]
r2 = ram[0x802292c:4]
r0 = ram[0x8022928:4]
sp = mult_addr
tmpZR = r3 == 0x0
tmpZR = r1 == 0x0
goto ram[0x801ae10:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
r7 = 0x8022a90
NG = tmpNG
sp = mult_addr
r4 = ram[0x8022948:4]
r0 = ram[0x802294c:4]
r1 = zext(unique[0x12120:1])
call ram[0x802a840:4]
s15 = *[ram]unique[0x4230:4]
s0 = s0 f* s15
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
sp = mult_addr
r4 = ram[0x80229f0:4]
r3 = ram[0x80229f4:4]
r1 = zext(unique[0x12120:1])
r5 = ram[0x80229f8:4]
r2 = ram[0x80229fc:4]
r0 = zext(unique[0x12120:1])
r6 = *[ram]unique[0x11420:4]
sp = sp - unique[0xfdd0:4]
CY = shift_carry
unique[0xfac0:1] = ZR != 0x0
r2 = r3
*[ram]unique[0x114b0:4] = register[0x28:4]
call ram[0x802b2c0:4]
r1 = sext(unique[0x12560:2])
