sp = mult_addr + 0x4
r7 = ram[0x8015050:4]
tmpZR = r1 == 0x0
s15 = *[ram]unique[0x41f0:4]
s15 = s15 f* s0
sp = sp - unique[0xfdd0:4]
r6 = r0
r0 = s15
r9 = r2
r8 = r3
call ram[0x80020dc:4]
OV = tmpOV
tmpZR = r4 == 0x0
OV = tmpOV
tmpZR = r1 == 0x0
NG = tmpNG
NG = tmpNG
tmpZR = r4 == 0x0
OV = tmpOV
tmpZR = r4 == 0x0
r2 = unique[0xfdc0:4]
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
tmpZR = r4 == 0x0
OV = tmpOV
tmpZR = r4 == 0x0
mult_addr = mult_addr + 0x4
r3 = r4
r1 = r6
tmpZR = r0 == 0x0
r2 = r5
call ram[0x80215d0:4]
r0 = r5
r1 = r4
sp = sp + unique[0xfdd0:4]
return pc

OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r1 = ram[0x80150f0:4]
sp = mult_addr + 0x4
r5 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801508e:4]
OV = tmpOV
tmpZR = r9 == 0x0
r5 = 0x80150d8
r5 = *[ram]unique[0x12270:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf820:1]) goto ram[0x801508e:4]
NG = tmpNG
sp = mult_addr
return pc
r4 = ram[0x80150f4:4]
r1 = *[ram]unique[0x12270:4]
r12 = *[ram]unique[0x112a0:4]
r5 = 0x80150e0
r5 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r7 == 0x0
OV = tmpOV
tmpZR = r12 == 0x0
OV = tmpOV
r1 = *[ram]unique[0x12270:4]
if (unique[0xf820:1]) goto ram[0x8015086:4]
r5 = 0x80150e8
r5 = *[ram]unique[0x12270:4]
OV = tmpOV
tmpZR = r11 == 0x0
OV = tmpOV
OV = tmpOV
unique[0xfc20:1] = NG == OV
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
sp = mult_addr
return pc

r7 = *[ram]unique[0x11420:4]
OV = tmpOV
NG = tmpNG
NG = tmpNG
