OV = tmpOV
NG = tmpNG
sp = mult_addr
r4 = r0
if (unique[0xf720:1]) goto ram[0x8025136:4]
r1 = r0
r0 = ram[0x8025184:4]
call ram[0x8024540:4]
r1 = r4
r4 = *[ram]unique[0x11420:4]
r0 = ram[0x8025184:4]
call ram[0x80243e0:4]
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
return pc
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x802513e:4]
NG = tmpNG
return pc
r2 = ram[0x8025188:4]
NG = tmpNG
r1 = zext(unique[0x12150:1])
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8025152:4]
r0 = *[ram]unique[0x11420:4]
r0 = r0 + r1
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x802515e:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8025142:4]
goto ram[0x802513a:4]
r2 = ram[0x802518c:4]
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
r3 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802517e:4]
r0 = *[ram]unique[0x11420:4]
OV = tmpOV
call [pc]
OV = tmpOV
unique[0xfcc0:1] = unique[0xfc90:1] && unique[0xfca0:1]
tmpZR = r0 == 0x0
tmpZR = r0 == 0x0
return pc
r0 = r3
return pc

r8 = SUBPIECE unique[0x16300:8], 0x4
r1 = mult_addr
NG = tmpNG
r1 = mult_addr
NG = tmpNG
sp = mult_addr + 0x4
r4 = r0
call ram[0x8014ae0:4]
r8 = r1
r1 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x12270:4]
r5 = r0
OV = tmpOV
r1 = *[ram]unique[0x11420:4]
tmpZR = r7 == 0x0
OV = tmpOV
OV = tmpOV
if (unique[0xf800:1]) goto ram[0x80251bc:4]
r3 = zext(unique[0x11eb0:1])
r0 = r3
return pc
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
r0 = zext(unique[0x11eb0:1])
call ram[0x8025110:4]
r3 = r0
*[ram]unique[0x11460:4] = unique[0x17690:1]
r0 = zext(unique[0x11eb0:1])
call ram[0x8024cd0:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
tmpZR = r3 == 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x80251b6:4]
*[ram]unique[0x17820:4] = register[0x40:4]
r0 = r3
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r4 = ram[0x80254f0:4]
r3 = ram[0x80254f4:4]
r2 = sext(unique[0x12560:2])
r1 = zext(unique[0x12120:1])
r5 = ram[0x80254f8:4]
s14 = r2
r2 = sext(unique[0x12560:2])
mult_addr = mult_addr + 0x8
s15 = r2
r2 = ram[0x80254fc:4]
CY = shift_carry
s14 = CALLOTHER 0xc4, s14, unique[0x31a0:1]
s15 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
sp = sp - unique[0xfdd0:4]
unique[0xfae0:1] = ZR != 0x0
r3 = r2
*[ram]unique[0x4230:4] = register[0x338:4]
*[ram]unique[0x4230:4] = register[0x33c:4]
NG = tmpNG
r0 = unique[0xfdc0:4]
call ram[0x8022220:4]
