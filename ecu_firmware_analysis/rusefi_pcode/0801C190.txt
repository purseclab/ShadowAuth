sp = mult_addr
r7 = ram[0x801c1cc:4]
r3 = *[ram]unique[0x112a0:4]
NG = tmpNG
OV = tmpOV
r6 = r0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
if (unique[0xf890:1]) goto ram[0x801c1c4:4]
r5 = r0
goto ram[0x801c1b0:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x801c1c4:4]
*[ram]unique[0x11420:4] = register[0x30:4]
r1 = r4
r0 = r6
call ram[0x801bd10:4]
OV = tmpOV
OV = tmpOV
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x801c1a8:4]
return pc
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
CALLOTHER 0x1, 0xa, 0xf, 0x6, cr7, cr13, cr0
sp = mult_addr
r3 = s15
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x28:4]
OV = tmpOV
r4 = r0
*[ram]unique[0x4230:4] = register[0x33c:4]
if (unique[0xf890:1]) goto ram[0x801c270:4]
s14 = *[ram]unique[0x42b0:4]
*[ram]unique[0x4230:4] = register[0x300:4]
s15 = s14 f/ s0
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x4230:4] = register[0x33c:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801c282:4]
r1 = zext(unique[0x12120:1])
r2 = ram[0x801c298:4]
r0 = sext(unique[0x12560:2])
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x801c26a:4]
NG = tmpNG
OV = tmpOV
*[ram]unique[0x112a0:4] = unique[0x17760:1]
if (unique[0xf6a0:1]) goto ram[0x801c26e:4]
r2 = ram[0x801c298:4]
r3 = *[ram]unique[0x12270:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x801c26e:4]
