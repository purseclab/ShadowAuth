r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8021f26:4]
sp = mult_addr + 0x4
r3 = ram[0x8021f88:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
mult_addr = mult_addr + 0x8
r4 = r0
if (unique[0xf860:1]) goto ram[0x8021f2a:4]
r5 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8021f2a:4]
r3 = *[ram]unique[0x11420:4]
r6 = zext(unique[0x11eb0:1])
r3 = *[ram]unique[0x11420:4]
s0 = 0x3f000000
r0 = r5
call [pc]
r3 = *[ram]unique[0x11420:4]
r0 = r5
r3 = *[ram]unique[0x11420:4]
call [pc]
tmpZR = r0 == 0x0
call ram[0x8043ff0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8021f36:4]
NG = tmpNG
call ram[0x8021df0:4]
s19 = *[ram]unique[0x42b0:4]
s19 = s0 f* s19
tmpZR = r8 == 0x0
NG = tmpNG
r0 = r7
call ram[0x8021df0:4]
r3 = *[ram]unique[0x11420:4]
s16 = *[ram]unique[0x42b0:4]
r3 = *[ram]unique[0x11420:4]
s17 = s0
r0 = r5
s0 = *[ram]unique[0x42b0:4]
call [pc]
NG = tmpNG
call ram[0x8043ff0:4]
r3 = *[ram]unique[0x11420:4]
s0 = 0xbf000000
r3 = *[ram]unique[0x11420:4]
r0 = r5
call [pc]
tmpZR = r0 == 0x0
call ram[0x8043ff0:4]
r0 = r8
call ram[0x8021df0:4]
r0 = r7
s18 = s0 f* s16
call ram[0x8021df0:4]
r3 = *[ram]unique[0x11420:4]
r0 = r5
r3 = *[ram]unique[0x11420:4]
s17 = s17 f* s16
s16 = s0 f* s16
call [pc]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8021f4c:4]
r5 = ram[0x8021f94:4]
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x34c:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x348:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x344:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x340:4]
call ram[0x8043ff0:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
mult_addr = mult_addr + 0x8
*[ram]unique[0x11460:4] = unique[0x17690:1]
return pc
goto ram[0x801feb0:4]
mult_addr = mult_addr + 0x8
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
return pc
NG = tmpNG
call ram[0x8021df0:4]
s19 = *[ram]unique[0x42b0:4]
tmpZR = r8 == 0x0
s19 = s0 f* s19
NG = tmpNG
goto ram[0x8021e76:4]
r5 = ram[0x8021f94:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x34c:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x348:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x344:4]
call ram[0x8043ff0:4]
NG = tmpNG
goto ram[0x8021f06:4]
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r7 = ram[0x802213c:4]
r3 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
mult_addr = mult_addr + 0x8
if (unique[0xfaa0:1]) goto ram[0x802211c:4]
r4 = ram[0x8022140:4]
r8 = ram[0x8022150:4]
s16 = *[ram]unique[0x42b0:4]
s21 = *[ram]unique[0x42b0:4]
NG = tmpNG
goto ram[0x80220ca:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xfa70:1]) goto ram[0x80220da:4]
r6 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8022124:4]
r3 = *[ram]unique[0x11420:4]
r9 = zext(unique[0x12120:1])
r3 = *[ram]unique[0x11420:4]
s0 = 0x3f000000
r0 = r6
call [pc]
r3 = *[ram]unique[0x11420:4]
r0 = r6
r3 = *[ram]unique[0x11420:4]
call [pc]
tmpZR = r0 == 0x0
call ram[0x8043ff0:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x8022128:4]
NG = tmpNG
call ram[0x8021df0:4]
s17 = s0 f* s16
tmpZR = r11 == 0x0
tmpZR = r10 == 0x0
r0 = r10
call ram[0x8021df0:4]
r3 = *[ram]unique[0x11420:4]
s18 = s0
r3 = *[ram]unique[0x11420:4]
s0 = s21
r0 = r6
call [pc]
NG = tmpNG
call ram[0x8043ff0:4]
r3 = *[ram]unique[0x11420:4]
s0 = 0xbf000000
r3 = *[ram]unique[0x11420:4]
r0 = r6
call [pc]
tmpZR = r0 == 0x0
call ram[0x8043ff0:4]
r0 = r11
call ram[0x8021df0:4]
r0 = r10
s19 = s0 f* s16
call ram[0x8021df0:4]
r3 = *[ram]unique[0x11420:4]
r0 = r6
r3 = *[ram]unique[0x11420:4]
s20 = s0 f* s16
call [pc]
OV = tmpOV
s18 = s18 f* s16
if (unique[0xf6c0:1]) goto ram[0x80220e0:4]
r6 = ram[0x802214c:4]
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x344:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x34c:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x348:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x350:4]
call ram[0x8043ff0:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf890:1]) goto ram[0x802211c:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x8021fc8:4]
r0 = r4
call ram[0x801feb0:4]
goto ram[0x80220ba:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x80220ba:4]
r6 = ram[0x802214c:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x344:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x34c:4]
call ram[0x8043ff0:4]
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x4230:4] = register[0x348:4]
call ram[0x8043ff0:4]
NG = tmpNG
goto ram[0x80220a2:4]
mult_addr = mult_addr + 0x8
return pc
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x80220ba:4]
NG = tmpNG
call ram[0x8021df0:4]
tmpZR = r11 == 0x0
s17 = s0 f* s16
tmpZR = r10 == 0x0
goto ram[0x8022014:4]
NG = tmpNG
NG = tmpNG
r1 = ram[0x80223e4:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
NG = tmpNG
call ram[0x8021df0:4]
r3 = ram[0x8022178:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
sp = mult_addr
goto ram[0x80197d0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
NG = tmpNG
call ram[0x8021df0:4]
r3 = ram[0x8022198:4]
*[ram]unique[0x41f0:4] = register[0x300:4]
sp = mult_addr
goto ram[0x80197d0:4]

*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
call ram[0x80197d0:4]
NG = tmpNG
call ram[0x8021df0:4]
s15 = *[ram]unique[0x42b0:4]
r3 = ram[0x80221d0:4]
s0 = s0 f* s15
CALLOTHER 0x1, 0xa, 0xb, 0x6, cr0, cr13, cr0
r2 = s0
*[ram]unique[0x112a0:4] = unique[0x17850:2]
sp = mult_addr
goto ram[0x80197d0:4]

NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
call ram[0x80197d0:4]
NG = tmpNG
call ram[0x8021df0:4]
s15 = *[ram]unique[0x42b0:4]
r3 = ram[0x8022210:4]
s0 = s0 f* s15
CALLOTHER 0x1, 0xa, 0xb, 0x6, cr0, cr13, cr0
r2 = s0
*[ram]unique[0x112a0:4] = unique[0x17850:2]
sp = mult_addr
goto ram[0x80197d0:4]

NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
sp = mult_addr
r4 = r0
if (unique[0xf7b0:1]) goto ram[0x8022252:4]
r3 = ram[0x8022268:4]
tmpZR = r1 == 0x0
r2 = zext(unique[0x121f0:1])
