sp = mult_addr + 0x4
r7 = r3
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r6 = r1
if (unique[0xf7b0:1]) goto ram[0x802c85a:4]
r5 = r2
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
unique[0xfb20:1] = CY != 0x0
tmpZR = r9 == 0x0
tmpZR = r9 == 0x0
NG = tmpNG
r4 = r0
*[ram]unique[0x11460:4] = unique[0x17690:1]
if (unique[0xf720:1]) goto ram[0x802c824:4]
r1 = r5
r0 = r6
call ram[0x8024540:4]
r1 = r5
r8 = r0
r0 = r6
call ram[0x80243e0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802c874:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802c86c:4]
OV = tmpOV
r2 = zext(unique[0x11eb0:1])
if (unique[0xf6c0:1]) goto ram[0x802c806:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802c86c:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
r1 = ram[0x802c87c:4]
r2 = r6
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
r3 = ram[0x802c880:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x802c84e:4]
*[ram]unique[0x11420:4] = register[0x3c:4]
r0 = r4
NG = tmpNG
call ram[0x802c180:4]
r2 = r9
r1 = r5
r0 = r6
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8024cf0:4]
r1 = ram[0x802c884:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x802c83e:4]
r2 = r1
r1 = ram[0x802c888:4]
tmpZR = r0 == 0x0
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8015240:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x802c82a:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
goto ram[0x802c81e:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x802c896:4]
goto ram[0x802c7b0:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x802c8a8:4]
r3 = ram[0x802c8ac:4]
goto ram[0x802c7b0:4]
return pc

OV = tmpOV
NG = tmpNG
sp = mult_addr
r4 = ram[0x802c8e0:4]
tmpZR = r5 == 0x0
tmpZR = r6 == 0x0
r0 = r4
NG = tmpNG
OV = tmpOV
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c8bc:4]
r4 = ram[0x802c8e4:4]
tmpZR = r5 == 0x0
r0 = r4
NG = tmpNG
OV = tmpOV
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c8d0:4]
return pc
r0 = sext(unique[0x11f30:1])
NG = tmpNG
r0 = sext(unique[0x11f30:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x802c8f4:4]
return pc
sp = mult_addr + 0x4
r4 = r0
tmpZR = r6 == 0x0
tmpZR = r10 == 0x0
tmpZR = r5 == 0x0
tmpZR = r7 == 0x0
r3 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
r0 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r9 == 0x0
tmpZR = r8 == 0x0
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
OV = tmpOV
r1 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x120b0:4]
r0 = ram[0x802ca5c:4]
unique[0xfae0:1] = ZR != 0x0
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r11 = r3
tmpZR = r11 == 0x0
sp = sp - unique[0xfdd0:4]
r1 = r11
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c98a:4]
r3 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x112a0:4]
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x4c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x2c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x80381b0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802ca1e:4]
sp = sp + unique[0xfdd0:4]
return pc
r2 = ram[0x802ca60:4]
r3 = *[ram]unique[0x120b0:4]
r12 = *[ram]unique[0x120b0:4]
r0 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r3 = *[ram]unique[0x11480:4]
r2 = *[ram]unique[0x120b0:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
*[ram]unique[0x17820:4] = register[0x50:4]
r1 = ram[0x802ca64:4]
r6 = ram[0x802ca68:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
tmpZR = r5 == 0x0
call ram[0x8014ae0:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r3 == 0x0
*[ram]unique[0x17820:4] = register[0x24:4]
