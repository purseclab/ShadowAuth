sp = mult_addr
r2 = ram[0x80065e0:4]
r3 = ram[0x80065e4:4]
r5 = *[ram]unique[0x112a0:4]
r4 = *[ram]unique[0x112a0:4]
r0 = *[ram]unique[0x112a0:4]
r1 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x30:4]
r5 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
r4 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x24:4]
r0 = *[ram]unique[0x112a0:4]
r1 = zext(unique[0x12120:1])
r2 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x30:4]
*[ram]unique[0x17820:4] = register[0x28:4]
sp = mult_addr
*[ram]unique[0x112a0:4] = register[0x20:4]
return pc

r2 = ram[0x8006864:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
s15 = r2
sp = mult_addr + 0x4
s15 = CALLOTHER 0xc5, s15, unique[0x3240:1]
r3 = ram[0x8006680:4]
r4 = s15
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r9 = r0
if (unique[0xf6a0:1]) goto ram[0x800666a:4]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
r8 = r2
r6 = r1
if (unique[0xf7b0:1]) goto ram[0x800665e:4]
r10 = ram[0x8006688:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
goto ram[0x8006634:4]
r5 = r4
if (unique[0xf7e0:1]) goto ram[0x8006662:4]
OV = tmpOV
tmpZR = r3 == 0x0
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf6a0:1]) goto ram[0x8006662:4]
OV = tmpOV
if (unique[0x11bd0:1]) goto ram[0x8006642:4]
r2 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x8006620:4]
r7 = r4
goto ram[0x8006624:4]
r3 = zext(unique[0x12150:1])
r2 = zext(unique[0x11ed0:1])
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x800663a:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
r1 = r10
r2 = r9
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
r2 = zext(unique[0x11ed0:1])
goto ram[0x800663a:4]
tmpZR = r5 == 0x0
r0 = r5
sp = sp + unique[0xfdd0:4]
