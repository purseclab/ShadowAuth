sp = mult_addr
NG = tmpNG
r4 = r0
CALLOTHER 0x111, r3
call ram[0x80426a0:4]
if (unique[0x11bf0:1]) goto ram[0x8044026:4]
r1 = r4
NG = tmpNG
call ram[0x8041600:4]
call ram[0x8042630:4]
r3 = ram[0x8044040:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x804401e:4]
r1 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x804402c:4]
NG = tmpNG
CALLOTHER 0x111, r3
return pc
r0 = ram[0x8044044:4]
call ram[0x8040b00:4]
tmpZR = r0 == 0x0
r2 = ram[0x8044048:4]
r1 = ram[0x804404c:4]
call ram[0x8015240:4]
r0 = ram[0x8044048:4]
call ram[0x8040b00:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
sp = mult_addr
r3 = *[ram]unique[0x11420:4]
r5 = r0
sp = sp - unique[0xfdd0:4]
r0 = *[ram]unique[0x11420:4]
tmpZR = r4 == 0x0
call ram[0x8042b50:4]
goto ram[0x804406c:4]
call ram[0x8043ff0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8044084:4]
r3 = *[ram]unique[0x11420:4]
r2 = unique[0xfdc0:4]
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
call ram[0x8042810:4]
r3 = zext(unique[0x12120:1])
OV = tmpOV
tmpZR = r0 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8044064:4]
r3 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8042aa0:4]
sp = sp + unique[0xfdd0:4]
return pc
sp = mult_addr
if (unique[0x11bf0:1]) goto ram[0x80440be:4]
r5 = zext(unique[0x11eb0:1])
OV = tmpOV
r4 = r0
if (unique[0xf6a0:1]) goto ram[0x80440a0:4]
NG = tmpNG
return pc
r6 = r0
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = *[ram]unique[0x11340:4]
r0 = *[ram]unique[0x11420:4]
r1 = *[ram]unique[0x11420:4]
call ram[0x8042d40:4]
r0 = r6
