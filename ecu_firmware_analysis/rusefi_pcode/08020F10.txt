tmpZR = r3 == 0x0
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x8020f46:4]
tmpZR = r3 == 0x0
OV = tmpOV
OV = tmpOV
sp = mult_addr
r3 = r1
r4 = r0
r5 = r1
r2 = r0
if (unique[0xf820:1]) goto ram[0x8020f48:4]
r1 = ram[0x8020f58:4]
r0 = ram[0x8020f5c:4]
call ram[0x8016520:4]
r0 = ram[0x8020f60:4]
r1 = ram[0x8020f64:4]
r2 = r5
r0 = r0 + r4
r1 = r1 + r4
sp = mult_addr
goto ram[0x8005448:4]
return pc
sp = mult_addr
r1 = ram[0x8020f68:4]
tmpZR = r0 == 0x0
goto ram[0x8015f20:4]

d16 = CALLOTHER 0xaa, d0, d4, unique[0x2370:4]
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
d16 = CALLOTHER 0xaa, d12, d4, unique[0x2350:4]
NG = tmpNG
NG = tmpNG
sp = mult_addr
mult_addr = mult_addr + 0x8
r4 = ram[0x80210f0:4]
r5 = ram[0x80210f4:4]
r0 = *[ram]unique[0x11420:4]
r6 = ram[0x80210f8:4]
sp = sp - unique[0xfdd0:4]
r7 = s1
s16 = s0
call ram[0x80017ac:4]
r2 = r0
r3 = r1
r0 = *[ram]unique[0x112a0:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x80017ac:4]
r3 = *[ram]unique[0x12270:4]
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x80210fc:4]
r0 = ram[0x8021100:4]
call ram[0x8016520:4]
r0 = *[ram]unique[0x112a0:4]
call ram[0x8032820:4]
r3 = ram[0x8021104:4]
r1 = ram[0x8021108:4]
lr = sext(unique[0x12420:1])
r3 = ram[0x802110c:4]
r2 = r0
r0 = ram[0x8021110:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
r3 = r0
r0 = ram[0x8021114:4]
