sp = mult_addr + 0x4
sp = sp - unique[0xfdd0:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043a86:4]
r11 = r0
r6 = r1
r7 = r2
tmpZR = r9 == 0x0
CALLOTHER 0x111, r9
call ram[0x80426a0:4]
r1 = *[ram]unique[0x112a0:4]
r8 = ram[0x8043ac0:4]
NG = tmpNG
r10 = r5
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043a3e:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
OV = tmpOV
unique[0xfb00:1] = CY != 0x0
r4 = r2
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x8043a4e:4]
tmpZR = lr == 0x0
r3 = r6
r4 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
r12 = *[ram]unique[0x112a0:4]
*[ram]unique[0x112a0:4] = register[0x50:4]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x28:4]
tmpZR = r3 == 0x0
if (unique[0xf6c0:1]) goto ram[0x80439d6:4]
r3 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
OV = tmpOV
tmpZR = r6 == 0x0
tmpZR = r5 == 0x0
*[ram]unique[0x112a0:4] = register[0x2c:4]
if (unique[0xf7e0:1]) goto ram[0x8043a6c:4]
call ram[0x8042630:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043a26:4]
r2 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8043a74:4]
CALLOTHER 0x111, r10
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x8043aaa:4]
CALLOTHER 0x111, r9
call ram[0x80426a0:4]
r1 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x80439be:4]
r1 = *[ram]unique[0x114b0:4]
r0 = r11
call ram[0x80416f0:4]
if (unique[0x11bd0:1]) goto ram[0x8043a8c:4]
r1 = *[ram]unique[0x112a0:4]
goto ram[0x80439be:4]
r2 = r4
r0 = r6
call ram[0x8005448:4]
r3 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x112a0:4]
r3 = r3 + r4
OV = tmpOV
r5 = r5 + r4
r6 = r6 + r4
*[ram]unique[0x112a0:4] = register[0x2c:4]
if (unique[0xf7b0:1]) goto ram[0x8043a0e:4]
r0 = r11
call ram[0x8040d30:4]
goto ram[0x8043a0e:4]
tmpZR = r0 == 0x0
r2 = ram[0x8043ab4:4]
r1 = ram[0x8043ab8:4]
call ram[0x8015240:4]
r0 = ram[0x8043ab4:4]
call ram[0x8040b00:4]
r0 = ram[0x8043abc:4]
call ram[0x8040b00:4]
call ram[0x8042630:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043aa4:4]
r2 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8043a74:4]
NG = tmpNG
CALLOTHER 0x111, r3
r0 = r5
sp = sp + unique[0xfdd0:4]
return pc

r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
goto ram[0x8043990:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r3 == 0x0
goto ram[0x8043990:4]

NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
r5 = r1
NG = tmpNG
CALLOTHER 0x111, r3
call ram[0x80426a0:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8043b4a:4]
r5 = zext(unique[0x12150:1])
r2 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
OV = tmpOV
if (unique[0xf6e0:1]) goto ram[0x8043b42:4]
call ram[0x8042630:4]
r3 = ram[0x8043b5c:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043b26:4]
r1 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8043b30:4]
NG = tmpNG
CALLOTHER 0x111, r3
r0 = r5
return pc
tmpZR = r0 == 0x0
r2 = ram[0x8043b60:4]
r1 = ram[0x8043b64:4]
call ram[0x8015240:4]
r0 = ram[0x8043b60:4]
call ram[0x8040b00:4]
r0 = r4
call ram[0x8040d30:4]
goto ram[0x8043b10:4]
r1 = r5
r0 = r4
call ram[0x80416f0:4]
r5 = r0
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8043b10:4]
r3 = *[ram]unique[0x11420:4]
goto ram[0x8043b04:4]
NG = tmpNG
NG = tmpNG
r4 = zext(unique[0x11ed0:1])
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
goto ram[0x8043af0:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
tmpZR = r1 == 0x0
goto ram[0x8043af0:4]

NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r8 = ram[0x8043c88:4]
r5 = r0
r7 = *[ram]unique[0x112a0:4]
NG = tmpNG
CALLOTHER 0x111, r3
call ram[0x80426a0:4]
r6 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043c4a:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043bc6:4]
tmpZR = r0 == 0x0
r2 = ram[0x8043c74:4]
r1 = ram[0x8043c78:4]
call ram[0x8015240:4]
r0 = ram[0x8043c74:4]
call ram[0x8040b00:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043bdc:4]
tmpZR = r0 == 0x0
r2 = ram[0x8043c7c:4]
r1 = ram[0x8043c78:4]
call ram[0x8015240:4]
r0 = ram[0x8043c7c:4]
call ram[0x8040b00:4]
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
call ram[0x8040ca0:4]
r9 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043c5c:4]
r6 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x8043c08:4]
call ram[0x8040ca0:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043c02:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
unique[0xfb20:1] = CY != 0x0
r6 = r3
r4 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8043bf0:4]
r3 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x112a0:4]
*[ram]unique[0x11420:4] = register[0x38:4]
r0 = r9
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x34:4]
*[ram]unique[0x17820:4] = register[0x28:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
call ram[0x8041370:4]
call ram[0x8041340:4]
call ram[0x8042630:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8043c40:4]
r2 = *[ram]unique[0x112a0:4]
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8043c62:4]
NG = tmpNG
CALLOTHER 0x111, r3
return pc
tmpZR = r0 == 0x0
r2 = ram[0x8043c80:4]
r1 = ram[0x8043c78:4]
call ram[0x8015240:4]
r0 = ram[0x8043c80:4]
call ram[0x8040b00:4]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
goto ram[0x8043c28:4]
tmpZR = r0 == 0x0
r2 = ram[0x8043c84:4]
r1 = ram[0x8043c78:4]
call ram[0x8015240:4]
r0 = ram[0x8043c84:4]
call ram[0x8040b00:4]
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
r0 = zext(unique[0x11ed0:1])
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x30:4]
NG = tmpNG
