sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
r3 = ram[0x802c364:4]
r7 = ram[0x802c368:4]
r8 = ram[0x802c388:4]
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x802c36c:4]
r4 = ram[0x802c370:4]
r6 = ram[0x802c374:4]
sp = sp - unique[0xfdd0:4]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
call ram[0x8016520:4]
call ram[0x80284e0:4]
r1 = r5
r0 = ram[0x802c378:4]
call ram[0x802c180:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8042aa0:4]
r1 = r5
r0 = ram[0x802c37c:4]
call ram[0x802c180:4]
NG = tmpNG
call ram[0x8043ff0:4]
r0 = ram[0x802c37c:4]
NG = tmpNG
call ram[0x802c180:4]
NG = tmpNG
call ram[0x8043ff0:4]
r0 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x802c642:4]
call ram[0x80286e0:4]
call ram[0x80286e0:4]
r0 = *[ram]unique[0x11420:4]
r9 = ram[0x802c38c:4]
call ram[0x8042b50:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042910:4]
NG = tmpNG
tmpZR = r2 == 0x0
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
call ram[0x8042910:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8042aa0:4]
call ram[0x8028810:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17850:2]
if (unique[0xf8d0:1]) goto ram[0x802c62a:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8042b50:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042910:4]
tmpZR = r2 == 0x0
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
call ram[0x8042810:4]
r10 = zext(unique[0x122d0:2])
r0 = *[ram]unique[0x11420:4]
call ram[0x8042aa0:4]
r2 = ram[0x802c380:4]
tmpZR = r3 == 0x0
OV = tmpOV
*[ram]unique[0x112a0:4] = unique[0x17850:2]
if (unique[0xf6a0:1]) goto ram[0x802c3a0:4]
r1 = ram[0x802c384:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
call ram[0x802c240:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc

if (unique[0xf740:1]) goto ram[0x802c350:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x802c33c:4]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
r3 = mult_addr
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x802c3d0:4]
NG = tmpNG
if (unique[0xf760:1]) goto ram[0x802c400:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
NG = tmpNG
r2 = r2 + unique[0xfd40:4]
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = register[0x30:4]
NG = tmpNG
r0 = r5
call ram[0x8028750:4]
NG = tmpNG
call ram[0x8028750:4]
NG = tmpNG
call ram[0x8028750:4]
r0 = r5
call ram[0x80285b0:4]
r0 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x802c3d4:4]
call ram[0x8025110:4]
r3 = zext(unique[0x11eb0:1])
*[ram]unique[0x112a0:4] = unique[0x17760:1]
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x802c660:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x802c660:4]
NG = tmpNG
call ram[0x80285b0:4]
NG = tmpNG
call ram[0x80285b0:4]
NG = tmpNG
call ram[0x80285b0:4]
NG = tmpNG
call ram[0x80285b0:4]
tmpZR = r3 == 0x0
s20 = *[ram]unique[0x4270:4]
r3 = zext(unique[0x11f10:2])
s19 = *[ram]unique[0x4270:4]
s16 = *[ram]unique[0x4270:4]
s17 = *[ram]unique[0x4270:4]
s14 = r3
s14 = CALLOTHER 0xc4, s14, unique[0x31a0:1]
s18 = 0x41200000
s15 = s14 f/ s20
NG = tmpNG
NG = tmpNG
s14 = s16
s15 = s15 f* s19
CALLOTHER 0x1, 0xa, 0xa, 0x4, cr7, cr7, cr9
s15 = s14 f/ s17
CALLOTHER 0x1, 0xa, 0xf, 0x7, cr7, cr13, cr7
r3 = s15
r1 = zext(unique[0x1a1b0:2])
call ram[0x8028670:4]
tmpZR = r3 == 0x0
NG = tmpNG
r3 = zext(unique[0x11f10:2])
s14 = r3
s14 = CALLOTHER 0xc4, s14, unique[0x31a0:1]
s15 = s14 f/ s20
s14 = s16
s15 = s15 f* s19
CALLOTHER 0x1, 0xa, 0xa, 0x4, cr7, cr7, cr9
s15 = s14 f/ s17
CALLOTHER 0x1, 0xa, 0xf, 0x7, cr7, cr13, cr7
r3 = s15
r1 = zext(unique[0x1a1b0:2])
call ram[0x8028670:4]
tmpZR = r3 == 0x0
NG = tmpNG
r3 = zext(unique[0x11f10:2])
s14 = r3
s14 = CALLOTHER 0xc4, s14, unique[0x31a0:1]
s15 = s14 f/ s20
s15 = s15 f* s19
CALLOTHER 0x1, 0xa, 0xa, 0x4, cr8, cr7, cr9
s15 = s16 f/ s17
CALLOTHER 0x1, 0xa, 0xf, 0x7, cr7, cr13, cr7
r3 = s15
r1 = zext(unique[0x1a1b0:2])
call ram[0x8028670:4]
r3 = ram[0x802c6c8:4]
r1 = zext(unique[0x11ef0:2])
tmpZR = r1 == 0x0
NG = tmpNG
r1 = zext(unique[0x1a1b0:2])
NG = tmpNG
call ram[0x8028670:4]
tmpZR = r3 == 0x0
NG = tmpNG
r1 = zext(unique[0x11f10:2])
tmpZR = r1 == 0x0
NG = tmpNG
r1 = zext(unique[0x1a1b0:2])
call ram[0x8028670:4]
tmpZR = r3 == 0x0
NG = tmpNG
r1 = zext(unique[0x11f10:2])
tmpZR = r1 == 0x0
NG = tmpNG
r1 = zext(unique[0x1a1b0:2])
call ram[0x8028670:4]
tmpZR = r3 == 0x0
NG = tmpNG
r1 = zext(unique[0x11f10:2])
tmpZR = r1 == 0x0
NG = tmpNG
r1 = zext(unique[0x1a1b0:2])
call ram[0x8028670:4]
tmpZR = r3 == 0x0
NG = tmpNG
r1 = zext(unique[0x11f10:2])
tmpZR = r1 == 0x0
NG = tmpNG
r1 = zext(unique[0x1a1b0:2])
call ram[0x8028670:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8042b50:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042910:4]
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042910:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042910:4]
tmpZR = r2 == 0x0
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
call ram[0x8042910:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8042aa0:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8042b50:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042910:4]
r0 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042810:4]
r3 = zext(unique[0x122d0:2])
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x802c64a:4]
tmpZR = r3 == 0x0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042910:4]
r0 = *[ram]unique[0x11420:4]
tmpZR = r2 == 0x0
NG = tmpNG
call ram[0x8042810:4]
r3 = zext(unique[0x122d0:2])
r0 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x802c680:4]
call ram[0x8042aa0:4]
call ram[0x8028810:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17850:2]
if (unique[0xf720:1]) goto ram[0x802c670:4]
r3 = zext(unique[0x12120:1])
s15 = r3
s15 = CALLOTHER 0xc5, s15, unique[0x3240:1]
OV = tmpOV
r0 = s15
if (unique[0xf7b0:1]) goto ram[0x802c6aa:4]
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x802c696:4]
call ram[0x80017ac:4]
r3 = 0x802c6c0
r3 = *[ram]unique[0x12270:4]
call ram[0x800185c:4]
call ram[0x8001de0:4]
r4 = zext(unique[0x1a1b0:2])
OV = tmpOV
r1 = zext(unique[0x1a1b0:2])
NG = tmpNG
call ram[0x8028670:4]
OV = tmpOV
r1 = zext(unique[0x1a1b0:2])
NG = tmpNG
call ram[0x8028670:4]
NG = tmpNG
r0 = ram[0x802c6cc:4]
call ram[0x802c180:4]
NG = tmpNG
call ram[0x8043ff0:4]
call ram[0x8028810:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17850:2]
if (unique[0xf740:1]) goto ram[0x802c686:4]
call ram[0x8028810:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17850:2]
if (unique[0xf950:1]) goto ram[0x802c358:4]
r1 = ram[0x802c6d0:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
call ram[0x802c240:4]
goto ram[0x802c358:4]
r1 = ram[0x802c6d4:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
call ram[0x802c240:4]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
call ram[0x8025110:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x802c2be:4]
r0 = *[ram]unique[0x11420:4]
call ram[0x8042aa0:4]
r1 = ram[0x802c6d8:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
call ram[0x802c240:4]
goto ram[0x802c358:4]
r1 = ram[0x802c6dc:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
call ram[0x802c240:4]
goto ram[0x802c358:4]
r1 = ram[0x802c6e0:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
call ram[0x802c240:4]
goto ram[0x802c358:4]
call ram[0x8042aa0:4]
goto ram[0x802c650:4]
r1 = ram[0x802c6e4:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
call ram[0x802c240:4]
goto ram[0x802c358:4]
call ram[0x80017ac:4]
r2 = r0
r3 = r1
tmpZR = r0 == 0x0
r1 = ram[0x802c6e8:4]
call ram[0x8015240:4]
goto ram[0x802c5f2:4]
call ram[0x80017ac:4]
r2 = r0
r3 = r1
tmpZR = r0 == 0x0
r1 = ram[0x802c6ec:4]
call ram[0x8015240:4]
goto ram[0x802c5f2:4]

r1 = *[ram]unique[0x114b0:4]
r1 = *[ram]unique[0x114b0:4]
r1 = *[ram]unique[0x114b0:4]
NG = tmpNG
r0 = zext(unique[0x11ef0:2])
NG = tmpNG
r3 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r0 = ram[0x802c754:4]
r4 = ram[0x802c758:4]
r1 = sext(unique[0x12420:1])
r1 = CALLOTHER 0x0, r1
sp = sp - unique[0xfdd0:4]
NG = tmpNG
call ram[0x802c180:4]
r1 = ram[0x802c75c:4]
r2 = ram[0x802c760:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
unique[0xfb60:1] = NG != 0x0
tmpZR = r3 == 0x0
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x28:4]
r0 = ram[0x802c764:4]
r2 = ram[0x802c768:4]
r6 = *[ram]unique[0x120f0:4]
r5 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x12270:4]
r1 = unique[0xfdc0:4]
mult_addr = mult_addr - 0x4
OV = tmpOV
mult_addr = mult_addr + 0x4
tmpZR = r3 == 0x0
r1 = ram[0x802c76c:4]
tmpZR = r0 == 0x0
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x801ea70:4]
sp = sp + unique[0xfdd0:4]
return pc
goto [unique[0x11ac0:4]]
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
mult_addr = mult_addr + 0x4
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0xf820:1]) goto ram[0x802c750:4]
NG = tmpNG
sp = mult_addr
r4 = r0
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802c77e:4]
NG = tmpNG
call ram[0x802c180:4]
r3 = *[ram]unique[0x11420:4]
s0 = *[ram]unique[0x42b0:4]
r3 = *[ram]unique[0x11420:4]
r0 = r4
sp = mult_addr
goto [pc]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802c7aa:4]
NG = tmpNG
goto ram[0x802c180:4]
return pc
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
r7 = r3
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
sp = sp - unique[0xfdd0:4]
r6 = r1
if (unique[0xf7b0:1]) goto ram[0x802c85a:4]
r5 = r2
OV = tmpOV
tmpZR = r3 == 0x0
tmpZR = r2 == 0x0
unique[0xfb20:1] = CY != 0x0
tmpZR = r9 == 0x0
tmpZR = r9 == 0x0
NG = tmpNG
r4 = r0
*[ram]unique[0x11460:4] = unique[0x17690:1]
if (unique[0xf720:1]) goto ram[0x802c824:4]
r1 = r5
r0 = r6
call ram[0x8024540:4]
r1 = r5
r8 = r0
r0 = r6
call ram[0x80243e0:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802c874:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802c86c:4]
OV = tmpOV
r2 = zext(unique[0x11eb0:1])
if (unique[0xf6c0:1]) goto ram[0x802c806:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802c86c:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
r1 = ram[0x802c87c:4]
r2 = r6
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
r3 = ram[0x802c880:4]
r3 = *[ram]unique[0x11420:4]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11460:4] = unique[0x17690:1]
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x802c84e:4]
*[ram]unique[0x11420:4] = register[0x3c:4]
r0 = r4
NG = tmpNG
call ram[0x802c180:4]
r2 = r9
r1 = r5
r0 = r6
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8024cf0:4]
r1 = ram[0x802c884:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
goto ram[0x802c83e:4]
r2 = r1
r1 = ram[0x802c888:4]
tmpZR = r0 == 0x0
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8015240:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
goto ram[0x802c82a:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
goto ram[0x802c81e:4]

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x802c896:4]
goto ram[0x802c7b0:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x802c8a8:4]
r3 = ram[0x802c8ac:4]
goto ram[0x802c7b0:4]
return pc

OV = tmpOV
NG = tmpNG
sp = mult_addr
r4 = ram[0x802c8e0:4]
tmpZR = r5 == 0x0
tmpZR = r6 == 0x0
r0 = r4
NG = tmpNG
OV = tmpOV
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c8bc:4]
r4 = ram[0x802c8e4:4]
tmpZR = r5 == 0x0
r0 = r4
NG = tmpNG
OV = tmpOV
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c8d0:4]
return pc
r0 = sext(unique[0x11f30:1])
NG = tmpNG
r0 = sext(unique[0x11f30:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0x11bd0:1]) goto ram[0x802c8f4:4]
return pc
sp = mult_addr + 0x4
r4 = r0
tmpZR = r6 == 0x0
tmpZR = r10 == 0x0
tmpZR = r5 == 0x0
tmpZR = r7 == 0x0
r3 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
r0 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r9 == 0x0
tmpZR = r8 == 0x0
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
OV = tmpOV
r1 = *[ram]unique[0x120b0:4]
r2 = *[ram]unique[0x120b0:4]
r0 = ram[0x802ca5c:4]
unique[0xfae0:1] = ZR != 0x0
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r11 = r3
tmpZR = r11 == 0x0
sp = sp - unique[0xfdd0:4]
r1 = r11
call ram[0x802c180:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802c98a:4]
r3 = *[ram]unique[0x112a0:4]
r2 = *[ram]unique[0x112a0:4]
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x4c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = register[0x2c:4]
r3 = *[ram]unique[0x112a0:4]
OV = tmpOV
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x80381b0:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802ca1e:4]
sp = sp + unique[0xfdd0:4]
return pc
r2 = ram[0x802ca60:4]
r3 = *[ram]unique[0x120b0:4]
r12 = *[ram]unique[0x120b0:4]
r0 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
r3 = *[ram]unique[0x11480:4]
r2 = *[ram]unique[0x120b0:4]
*[ram]unique[0x114b0:4] = register[0x24:4]
*[ram]unique[0x17820:4] = register[0x50:4]
r1 = ram[0x802ca64:4]
r6 = ram[0x802ca68:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
tmpZR = r5 == 0x0
call ram[0x8014ae0:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r3 == 0x0
*[ram]unique[0x17820:4] = register[0x24:4]
NG = tmpNG
r2 = r2 + r1
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x11480:4] = register[0x28:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x802c9de:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf720:1]) goto ram[0x802c94a:4]
r6 = ram[0x802ca60:4]
tmpZR = r5 == 0x0
tmpZR = r3 == 0x0
tmpZR = r0 == 0x0
tmpZR = r1 == 0x0
r3 = *[ram]unique[0x11480:4]
r0 = *[ram]unique[0x11480:4]
r1 = *[ram]unique[0x11480:4]
r5 = *[ram]unique[0x11480:4]
tmpZR = r2 == 0x0
r2 = *[ram]unique[0x11480:4]
*[ram]unique[0x114b0:4] = register[0x28:4]
*[ram]unique[0x17820:4] = register[0x20:4]
*[ram]unique[0x17820:4] = register[0x34:4]
tmpZR = r2 == 0x0
tmpZR = r3 == 0x0
r2 = *[ram]unique[0x11420:4]
r3 = *[ram]unique[0x11480:4]
r1 = ram[0x802ca6c:4]
r0 = ram[0x802ca70:4]
call ram[0x8016520:4]
goto ram[0x802c94a:4]
tmpZR = r6 == 0x0
tmpZR = r0 == 0x0
tmpZR = r5 == 0x0
r0 = *[ram]unique[0x11480:4]
r5 = *[ram]unique[0x11480:4]
r2 = ram[0x802ca60:4]
r4 = *[ram]unique[0x11480:4]
r1 = ram[0x802ca74:4]
tmpZR = r3 == 0x0
r3 = *[ram]unique[0x11480:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
*[ram]unique[0x17820:4] = register[0x34:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
tmpZR = r3 == 0x0
tmpZR = r0 == 0x0
r3 = *[ram]unique[0x11480:4]
r2 = *[ram]unique[0x11480:4]
tmpZR = r0 == 0x0
call ram[0x8015f20:4]
sp = sp + unique[0xfdd0:4]
return pc
r0 = sext(unique[0x11f30:1])
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = r0
r0 = zext(unique[0x11eb0:1])
if (unique[0x11bd0:1]) goto ram[0x802ca8c:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802ca92:4]
r0 = sext(unique[0x12420:1])
if (unique[0x11bd0:1]) goto ram[0x802ca94:4]
return pc
r0 = r4
NG = tmpNG
call ram[0x802c180:4]
r3 = ram[0x802caac:4]
r2 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x802cab0:4]
call ram[0x8016520:4]
NG = tmpNG
return pc
if (unique[0xf6e0:1]) goto ram[0x802cac0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
NG = tmpNG
r4 = r0
call ram[0x802c180:4]
r3 = ram[0x802caf0:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x802cae0:4]
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cae2:4]
sp = mult_addr
r1 = ram[0x802caf4:4]
goto ram[0x800ac30:4]
return pc
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x802caf4:4]
sp = mult_addr
goto ram[0x800ac30:4]

OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
NG = tmpNG
r4 = r0
call ram[0x802c180:4]
r3 = ram[0x802cb30:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bf0:1]) goto ram[0x802cb20:4]
r0 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cb22:4]
sp = mult_addr
r1 = ram[0x802cb34:4]
goto ram[0x800ac30:4]
return pc
r0 = *[ram]unique[0x11420:4]
r1 = ram[0x802cb34:4]
sp = mult_addr
goto ram[0x800ac30:4]

OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bf0:1]) goto ram[0x802cb7e:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cb74:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cb7a:4]
r2 = *[ram]unique[0x11420:4]
sp = mult_addr
OV = tmpOV
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x28:4]
sp = sp + 0x4
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
goto ram[0x802cb5a:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
return pc
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x24:4]
*[ram]unique[0x11420:4] = register[0x28:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
if (unique[0x11bf0:1]) goto ram[0x802cbbe:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cbb4:4]
r3 = *[ram]unique[0x11420:4]
if (unique[0x11bf0:1]) goto ram[0x802cbba:4]
r2 = *[ram]unique[0x11420:4]
sp = mult_addr
OV = tmpOV
r4 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x30:4]
*[ram]unique[0x11420:4] = register[0x28:4]
sp = sp + 0x4
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
*[ram]unique[0x11420:4] = register[0x20:4]
*[ram]unique[0x11420:4] = register[0x20:4]
goto ram[0x802cb9a:4]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc
return pc
r3 = *[ram]unique[0x11420:4]
sp = mult_addr
r3 = *[ram]unique[0x11420:4]
r4 = r0
call [pc]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = *[ram]unique[0x11420:4]
r0 = r4
call [pc]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11460:4] = unique[0x17690:1]
r3 = *[ram]unique[0x11420:4]
r0 = r4
call [pc]
*[ram]unique[0x11420:4] = register[0x20:4]
return pc

NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
if (unique[0xf860:1]) goto ram[0x802cc44:4]
sp = mult_addr
mult_addr = mult_addr + 0x8
r5 = r0
sp = sp - unique[0xfdd0:4]
r0 = s0
r4 = r1
s16 = s0
call ram[0x80017ac:4]
r2 = r4
*[ram]unique[0x17820:4] = register[0x24:4]
r1 = ram[0x802cc50:4]
r0 = ram[0x802cc54:4]
call ram[0x8016520:4]
r3 = ram[0x802cc58:4]
s14 = *[ram]unique[0x42b0:4]
s15 = *[ram]unique[0x4230:4]
s0 = s14 f/ s15
tmpZR = r2 == 0x0
NG = tmpNG
s16 = s0 f* s16
CALLOTHER 0x1, 0xa, 0xb, 0x6, cr8, cr13, cr8
*[ram]unique[0x4230:4] = register[0x340:4]
*[ram]unique[0x11480:4] = unique[0x176b0:1]
sp = sp + unique[0xfdd0:4]
mult_addr = mult_addr + 0x8
return pc
r1 = ram[0x802cc60:4]
tmpZR = r0 == 0x0
goto ram[0x8015240:4]

NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
tmpZR = r5 == 0x0
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
OV = tmpOV
*[ram]unique[0x17820:4] = register[0x24:4]
if (unique[0xf890:1]) goto ram[0x802cc96:4]
NG = tmpNG
goto ram[0x802cc88:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf890:1]) goto ram[0x802cc96:4]
tmpZR = r2 == 0x0
OV = tmpOV
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802cc82:4]
return pc
r3 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
tmpZR = r3 == 0x0
*[ram]unique[0x11420:4] = register[0x24:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802ccb4:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x2c:4]
r3 = *[ram]unique[0x11420:4]
OV = tmpOV
*[ram]unique[0x11420:4] = register[0x2c:4]
return pc
sp = mult_addr
r5 = ram[0x802ccf0:4]
r1 = ram[0x802ccf4:4]
r0 = ram[0x802ccf8:4]
call ram[0x8016520:4]
r4 = *[ram]unique[0x11420:4]
call ram[0x8014ae0:4]
r3 = *[ram]unique[0x11420:4]
tmpZR = r4 == 0x0
tmpZR = r3 == 0x0
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x24:4]
*[ram]unique[0x17820:4] = register[0x3c:4]
sp = mult_addr
goto ram[0x800e180:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x802cd28:4]
r2 = *[ram]unique[0x112a0:4]
OV = tmpOV
if (unique[0xf7e0:1]) goto ram[0x802cd16:4]
tmpZR = r0 == 0x0
OV = tmpOV
r0 = *[ram]unique[0x112a0:4]
return pc
r1 = ram[0x802cd2c:4]
tmpZR = r2 == 0x0
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x802cd0a:4]
r0 = *[ram]unique[0x112a0:4]
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
sp = mult_addr + 0x4
mult_addr = mult_addr + 0x8
sp = sp - unique[0xfdd0:4]
r3 = r0
NG = tmpNG
*[ram]unique[0x114b0:4] = register[0x2c:4]
call ram[0x80343b0:4]
r3 = ram[0x802cf78:4]
r3 = *[ram]unique[0x112a0:4]
tmpZR = r2 == 0x0
OV = tmpOV
OV = tmpOV
if (unique[0xf9f0:1]) goto ram[0x802d658:4]
r5 = ram[0x802cf7c:4]
r3 = ram[0x802cf80:4]
r2 = *[ram]unique[0x112a0:4]
*[ram]unique[0x114b0:4] = register[0x2c:4]
OV = tmpOV
if (unique[0xfaa0:1]) goto ram[0x802de44:4]
r1 = *[ram]unique[0x11420:4]
r0 = ram[0x802cf84:4]
tmpZR = r3 == 0x0
OV = tmpOV
tmpZR = r2 == 0x0
*[ram]unique[0x112d0:4] = register[0x20:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x802cd74:4]
tmpZR = r1 == 0x0
r3 = ram[0x802cf84:4]
*[ram]unique[0x11420:4] = register[0x2c:4]
NG = tmpNG
call ram[0x80343b0:4]
r3 = *[ram]unique[0x114b0:4]
r3 = *[ram]unique[0x11420:4]
r3 = zext(unique[0x12120:1])
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x802d7d6:4]
call ram[0x8014ae0:4]
r8 = r0
r0 = ram[0x802cf88:4]
r9 = r1
call ram[0x8015100:4]
r3 = *[ram]unique[0x114b0:4]
tmpZR = r4 == 0x0
OV = tmpOV
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x802cf52:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x17820:4] = register[0x44:4]
*[ram]unique[0x17820:4] = register[0x2c:4]
call ram[0x801b0a0:4]
r0 = ram[0x802cf88:4]
r11 = *[ram]unique[0x112a0:4]
call ram[0x8015100:4]
OV = tmpOV
if (unique[0xf8d0:1]) goto ram[0x802d7e4:4]
r3 = ram[0x802cf84:4]
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x802dd7a:4]
s15 = r11
r2 = ram[0x802cf8c:4]
r0 = ram[0x802cf90:4]
s17 = CALLOTHER 0xc4, s15, unique[0x31a0:1]
tmpZR = r1 == 0x0
s0 = s17
NG = tmpNG
call ram[0x801ae10:4]
r3 = ram[0x802cf84:4]
r2 = s0
OV = tmpOV
if (unique[0xf8b0:1]) goto ram[0x802d95c:4]
fpscr = unique[0x2f70:4] | unique[0x2f90:4]
OV = unique[0x4780:1] & 0x1
if (unique[0xf9f0:1]) goto ram[0x802d95c:4]
r3 = ram[0x802cf84:4]
*[ram]unique[0x4230:4] = register[0x300:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
s15 = *[ram]unique[0x42b0:4]
s15 = *[ram]unique[0x42b0:4]
