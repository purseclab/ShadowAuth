sp = mult_addr
r3 = ram[0x802e30c:4]
r1 = ram[0x802e310:4]
r2 = zext(unique[0x12120:1])
*[ram]unique[0x112a0:4] = register[0x24:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r1 == 0x0
r4 = ram[0x802e314:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r5 == 0x0
r0 = ram[0x802e318:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
tmpZR = r2 == 0x0
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x112a0:4] = register[0x30:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x20:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r2 == 0x0
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
sp = mult_addr
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
OV = tmpOV
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
call ram[0x802e290:4]
r3 = ram[0x802e358:4]
tmpZR = r2 == 0x0
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x28:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x17820:4] = register[0x28:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
*[ram]unique[0x112a0:4] = register[0x20:4]
return pc
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
s0 = *[ram]unique[0x42b0:4]
r4 = ram[0x802e428:4]
sp = sp - unique[0xfdd0:4]
*[ram]unique[0x4230:4] = register[0x300:4]
call ram[0x802e290:4]
tmpZR = r3 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17850:2]
r2 = ram[0x802e42c:4]
*[ram]unique[0x112a0:4] = register[0x28:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = register[0x24:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
NG = tmpNG
NG = tmpNG
s0 = *[ram]unique[0x4230:4]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
NG = tmpNG
NG = tmpNG
tmpZR = r0 == 0x0
*[ram]unique[0x112a0:4] = unique[0x17760:1]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = register[0x2c:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17850:2]
call ram[0x80235d0:4]
s0 = *[ram]unique[0x4230:4]
tmpZR = r0 == 0x0
call ram[0x80235d0:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
r3 = ram[0x802e430:4]
*[ram]unique[0x112a0:4] = unique[0x17760:1]
NG = tmpNG
*[ram]unique[0x112a0:4] = unique[0x17760:1]
*[ram]unique[0x112a0:4] = register[0x2c:4]
call ram[0x80143b0:4]
r3 = zext(unique[0x12120:1])
r1 = ram[0x802e434:4]
r0 = ram[0x802e438:4]
*[ram]unique[0x112a0:4] = register[0x34:4]
r3 = unique[0x11a20:4] | unique[0x11a10:4]
tmpZR = r2 == 0x0
