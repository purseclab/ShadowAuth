sp = mult_addr + 0x4
r5 = ram[0x802a054:4]
r10 = ram[0x802a088:4]
r9 = ram[0x802a08c:4]
r8 = ram[0x802a064:4]
sp = sp - unique[0xfdd0:4]
tmpZR = r7 == 0x0
NG = tmpNG
r6 = *[ram]unique[0x11340:4]
NG = tmpNG
if (unique[0x11bf0:1]) goto ram[0x8029f2a:4]
r0 = *[ram]unique[0x120f0:4]
call ram[0x8024650:4]
*[ram]unique[0x114b0:4] = register[0x38:4]
r2 = r0
tmpZR = r3 == 0x0
r1 = r9
r0 = r8
call ram[0x8016520:4]
OV = tmpOV
tmpZR = r4 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8029f0a:4]
r9 = ram[0x802a090:4]
r10 = ram[0x802a094:4]
r8 = ram[0x802a098:4]
r11 = ram[0x802a09c:4]
NG = tmpNG
r6 = zext(unique[0x1a070:1])
r0 = r6
call ram[0x803e8a0:4]
r7 = *[ram]unique[0x11340:4]
r2 = ram[0x802a058:4]
r5 = r0
NG = tmpNG
r1 = zext(unique[0x11eb0:1])
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8029f64:4]
r0 = *[ram]unique[0x11420:4]
r0 = r0 + r1
OV = tmpOV
if (unique[0xf700:1]) goto ram[0x8029faa:4]
OV = tmpOV
OV = tmpOV
tmpZR = r2 == 0x0
if (unique[0xf6c0:1]) goto ram[0x8029f56:4]
r2 = r10
NG = tmpNG
r0 = r8
call ram[0x803f010:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802a01a:4]
r3 = ram[0x802a05c:4]
r1 = ram[0x802a060:4]
r0 = ram[0x802a064:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
r2 = r5
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
r3 = r7
call ram[0x8016520:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8029f44:4]
r3 = ram[0x802a068:4]
r1 = ram[0x802a06c:4]
r2 = *[ram]unique[0x11420:4]
r0 = ram[0x802a064:4]
sp = sp + unique[0xfdd0:4]
sp = mult_addr
goto ram[0x8016520:4]
r2 = ram[0x802a058:4]
tmpZR = r3 == 0x0
tmpZR = r3 == 0x0
r2 = *[ram]unique[0x11420:4]
r2 = *[ram]unique[0x11420:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802a048:4]
r0 = *[ram]unique[0x11420:4]
OV = tmpOV
call [pc]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x802a048:4]
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8029f6e:4]
r2 = ram[0x802a070:4]
r3 = ram[0x802a074:4]
r1 = ram[0x802a078:4]
lr = ram[0x802a0a0:4]
r12 = ram[0x802a0a4:4]
CY = shift_carry
unique[0xfac0:1] = ZR != 0x0
r3 = r2
CY = shift_carry
unique[0xfac0:1] = ZR != 0x0
r1 = r2
CY = shift_carry
unique[0xfac0:1] = ZR != 0x0
lr = r2
*[ram]unique[0x114b0:4] = register[0x24:4]
CY = shift_carry
r1 = ram[0x802a07c:4]
*[ram]unique[0x112a0:4] = register[0x58:4]
unique[0xfac0:1] = ZR != 0x0
r12 = r2
CY = shift_carry
unique[0xfae0:1] = ZR != 0x0
r2 = r1
*[ram]unique[0x17820:4] = register[0x28:4]
NG = tmpNG
r2 = ram[0x802a080:4]
r0 = r8
call ram[0x803f010:4]
OV = tmpOV
if (unique[0xf6c0:1]) goto ram[0x8029f7c:4]
r0 = r6
call ram[0x803e910:4]
r5 = r0
OV = tmpOV
if (unique[0xf6a0:1]) goto ram[0x8029f92:4]
r0 = r6
call ram[0x803e980:4]
r2 = ram[0x802a05c:4]
r1 = ram[0x802a084:4]
*[ram]unique[0x112a0:4] = register[0x40:4]
OV = tmpOV
unique[0xfac0:1] = ZR != 0x0
r7 = r2
r3 = r0
r2 = r5
r0 = ram[0x802a064:4]
*[ram]unique[0x114b0:4] = register[0x3c:4]
call ram[0x8016520:4]
goto ram[0x8029f92:4]
r2 = r11
NG = tmpNG
r0 = r8
call ram[0x803f010:4]
goto ram[0x8029f78:4]
goto [unique[0x11ac0:4]]
NG = tmpNG
r1 = mult_addr
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
if (unique[0xf6e0:1]) goto ram[0x802a080:4]
NG = tmpNG
r8 = r8 + r6
NG = tmpNG
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11420:4] = register[0x20:4]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
goto ram[0x802a184:4]
NG = tmpNG
