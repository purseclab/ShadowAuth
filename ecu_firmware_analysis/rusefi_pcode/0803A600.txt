sp = mult_addr
r3 = *[ram]unique[0x11420:4]
sp = sp - unique[0xfdd0:4]
r4 = r0
r0 = *[ram]unique[0x11420:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
r6 = r1
r5 = r2
call ram[0x8043e00:4]
r1 = *[ram]unique[0x11420:4]
r0 = *[ram]unique[0x114b0:4]
OV = tmpOV
call ram[0x8042d40:4]
r0 = *[ram]unique[0x114b0:4]
call ram[0x8042b50:4]
r0 = *[ram]unique[0x114b0:4]
r3 = *[ram]unique[0x11420:4]
*[ram]unique[0x11420:4] = register[0x38:4]
r2 = *[ram]unique[0x11420:4]
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x803a62a:4]
*[ram]unique[0x114b0:4] = register[0x20:4]
r4 = *[ram]unique[0x11420:4]
call ram[0x8042aa0:4]
r0 = *[ram]unique[0x114b0:4]
call ram[0x8043c90:4]
if (unique[0x11bf0:1]) goto ram[0x803a642:4]
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
sp = sp + unique[0xfdd0:4]
return pc
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r1 = zext(unique[0x11ef0:2])
r3 = zext(unique[0x11ef0:2])
r2 = zext(unique[0x11eb0:1])
tmpZR = r3 == 0x0
r1 = sext(unique[0x18230:2])
r1 = zext(unique[0x1a070:1])
sp = sp - unique[0xfdd0:4]
r4 = r0
r6 = zext(unique[0x1a1b0:2])
tmpZR = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x803a698:4]
tmpZR = r2 == 0x0
call ram[0x803a600:4]
NG = tmpNG
r5 = r0
tmpZR = r1 == 0x0
tmpZR = r2 == 0x0
r0 = r4
call ram[0x803a600:4]
NG = tmpNG
NG = tmpNG
*[ram]unique[0x11460:4] = unique[0x17690:1]
if (unique[0x11bd0:1]) goto ram[0x803a694:4]
NG = tmpNG
*[ram]unique[0x11440:4] = unique[0x176d0:2]
*[ram]unique[0x11460:4] = unique[0x17690:1]
sp = sp + unique[0xfdd0:4]
return pc
call ram[0x803a600:4]
NG = tmpNG
tmpZR = r1 == 0x0
r5 = r0
tmpZR = r2 == 0x0
r0 = r4
*[ram]unique[0x114b0:4] = register[0x24:4]
call ram[0x803a600:4]
