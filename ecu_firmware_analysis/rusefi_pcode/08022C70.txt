sp = mult_addr
r2 = *[ram]unique[0x11420:4]
mult_addr = mult_addr + 0x8
s16 = s0
if (unique[0x11bf0:1]) goto ram[0x8022c9c:4]
OV = tmpOV
OV = tmpOV
if (unique[0xf7b0:1]) goto ram[0x8022cc0:4]
r0 = r2
call ram[0x8022be0:4]
s15 = *[ram]unique[0x41f0:4]
s0 = *[ram]unique[0x4230:4]
CALLOTHER 0x1, 0xa, 0xa, 0x1, cr0, cr8, cr7
mult_addr = mult_addr + 0x8
return pc
s4 = s16
mult_addr = mult_addr + 0x8
r3 = ram[0x8022cd4:4]
s3 = *[ram]unique[0x4230:4]
s2 = *[ram]unique[0x41f0:4]
s1 = *[ram]unique[0x41f0:4]
s0 = *[ram]unique[0x4210:4]
r0 = ram[0x8022cd8:4]
sp = mult_addr
goto ram[0x8019a30:4]
r1 = ram[0x8022cdc:4]
tmpZR = r0 == 0x0
call ram[0x8015240:4]
mult_addr = mult_addr + 0x8
s0 = *[ram]unique[0x42b0:4]
return pc
*[ram]unique[0x11440:4] = unique[0x176d0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
tmpZR = r8 == 0x0
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr
r4 = ram[0x8022d0c:4]
r0 = ram[0x8022d10:4]
r1 = zext(unique[0x12120:1])
call ram[0x802aa70:4]
tmpZR = r0 == 0x0
sp = mult_addr
goto ram[0x8022c70:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
*[ram]unique[0x11480:4] = unique[0x176f0:2]
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x8022d38:4]
r3 = zext(unique[0x12120:1])
NG = tmpNG
if (unique[0xf740:1]) goto ram[0x8022d32:4]
r3 = ram[0x8022d3c:4]
s0 = *[ram]unique[0x41f0:4]
return pc
goto ram[0x8022cf0:4]

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
r3 = ram[0x8022d5c:4]
r3 = zext(unique[0x12120:1])
if (unique[0x11bd0:1]) goto ram[0x8022d56:4]
r2 = ram[0x8022d60:4]
r3 = ram[0x8022d64:4]
r0 = *[ram]unique[0x11420:4]
OV = tmpOV
unique[0xfae0:1] = ZR != 0x0
tmpZR = r0 == 0x0
return pc
NG = tmpNG
return pc

r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
r0 = zext(unique[0x11eb0:1])
NG = tmpNG
NG = tmpNG
NG = tmpNG
NG = tmpNG
sp = mult_addr + 0x4
