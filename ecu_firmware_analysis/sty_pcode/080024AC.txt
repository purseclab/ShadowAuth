unique[0x11bf0:1] = r0 == 0x0
if (unique[0x11bf0:1]) goto ram[0x80024be:4]

r1 = ram[0x80027b8:4]

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x400000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r1 = r1 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r2 = ram[0x80027c0:4]

unique[0x112a0:4] = r2 + 0x304
*[ram]unique[0x112a0:4] = register[0x24:4]

goto ram[0x80024cc:4]

r1 = ram[0x80027b8:4]

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x400000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
unique[0x11a60:4] = ~unique[0xfed0:4]
r1 = r1 & unique[0x11a60:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r2 = ram[0x80027c0:4]

unique[0x112a0:4] = r2 + 0x304
*[ram]unique[0x112a0:4] = register[0x24:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x3c:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x38:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x34:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r4 = r0

r5 = r1

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r1 = 0x0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x9 <= r5
tmpOV = sborrow(r5, 0x9)
unique[0x11d20:4] = r5 - 0x9
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf870:1] = NG != OV
unique[0xf890:1] = ZR || unique[0xf870:1]
if (unique[0xf890:1]) goto ram[0x8002500:4]

unique[0x11420:4] = r4 + 0xc
r0 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0xa
shift_carry = CY
tmpCY = unique[0xfe50:4] <= r5
tmpOV = sborrow(r5, unique[0xfe50:4])
r6 = r5 - unique[0xfe50:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r7 = r6 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

r6 = 0x7
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r6 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11a40:4] = ~r1
r0 = r0 & unique[0x11a40:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0xa
shift_carry = CY
tmpCY = unique[0xfe50:4] <= r5
tmpOV = sborrow(r5, unique[0xfe50:4])
r6 = r5 - unique[0xfe50:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r6 = r6 + unique[0x116d0:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0x128d0:4] = r6 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r3 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r3 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r0 = r0 | r1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r4 + 0xc
*[ram]unique[0x11420:4] = register[0x20:4]

goto ram[0x800251a:4]

unique[0x11420:4] = r4 + 0x10
r0 = *[ram]unique[0x11420:4]

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r5 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r5 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r5, unique[0x116d0:4])
tmpOV = scarry(r5, unique[0x116d0:4])
r7 = r5 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

