unique[0x11bf0:1] = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x80033f0:4]

unique[0x11420:4] = r0 + 0x0
r2 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x20
shift_carry = CY
r2 = r2 | unique[0xfe50:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x0
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x80033f8:4]

unique[0x11420:4] = r0 + 0x0
r2 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x20
shift_carry = CY
unique[0x11a60:4] = ~unique[0xfe50:4]
r2 = r2 & unique[0x11a60:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x0
*[ram]unique[0x11420:4] = register[0x28:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

unique[0x11420:4] = r0 + 0x4
*[ram]unique[0x11420:4] = register[0x24:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r1 = r0

unique[0x11420:4] = r1 + 0x4
r0 = *[ram]unique[0x11420:4]

unique[0x1a1b0:2] = SUBPIECE r0, 0x0
r0 = zext(unique[0x1a1b0:2])

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

unique[0x11bf0:1] = r2 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8003412:4]

unique[0x11420:4] = r0 + 0x0
r3 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x80000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r3 = r3 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11420:4] = r0 + 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]

goto ram[0x800341a:4]

unique[0x11420:4] = r0 + 0x0
r3 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x80000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
unique[0x11a60:4] = ~unique[0xfed0:4]
r3 = r3 & unique[0x11a60:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

