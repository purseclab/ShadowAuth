r0 = 0x1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r1 = ram[0x8000b90:4]

unique[0x11460:4] = r1 + 0x0
unique[0x17690:1] = SUBPIECE r0, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = r4
r0 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r2 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r3 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r6 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r7 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r4 = mult_addr

tmpCY = 0x4c <= r5
tmpOV = sborrow(r5, 0x4c)
r5 = r5 - 0x4c
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r6 = r4
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

