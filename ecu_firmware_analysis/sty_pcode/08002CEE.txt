unique[0x11bf0:1] = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8002cfa:4]

tmpCY = 0x1 <= r1
tmpOV = sborrow(r1, 0x1)
unique[0x11d20:4] = r1 - 0x1
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6a0:1] = ZR != 0x0
if (unique[0xf6a0:1]) goto ram[0x8002d04:4]

tmpCY = 0x2 <= r1
tmpOV = sborrow(r1, 0x2)
unique[0x11d20:4] = r1 - 0x2
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6c0:1] = ZR == 0x0
if (unique[0xf6c0:1]) goto ram[0x8002d18:4]

goto ram[0x8002d0e:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x80
shift_carry = CY
r2 = r2 | unique[0xfe50:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x8002d1a:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x8000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r2 = r2 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x8002d1a:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x800000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r2 = r2 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x8002d1a:4]



unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

unique[0xfed0:4] = 0x1b0
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
tmpCY = carry(r0, unique[0xfed0:4])
tmpOV = scarry(r0, unique[0xfed0:4])
r3 = r0 + unique[0xfed0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0xff50:4] = 0x20 - 0x4
unique[0xff60:4] = r1 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r1 << 0x4
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r3, unique[0x116d0:4])
tmpOV = scarry(r3, unique[0x116d0:4])
r3 = r3 + unique[0x116d0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11420:4] = r3 + 0x0
r3 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x4
shift_carry = CY
r3 = r3 & unique[0xfe50:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11460:4] = r2 + 0x8
unique[0x17690:1] = SUBPIECE r3, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x11460:4] = r2 + 0x8
unique[0x11eb0:1] = *[ram]unique[0x11460:4]
r3 = zext(unique[0x11eb0:1])

unique[0x11bd0:1] = r3 != 0x0
if (unique[0x11bd0:1]) goto ram[0x8002d4a:4]

unique[0xfed0:4] = 0x1b0
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
tmpCY = carry(r0, unique[0xfed0:4])
tmpOV = scarry(r0, unique[0xfed0:4])
r3 = r0 + unique[0xfed0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0xff50:4] = 0x20 - 0x4
unique[0xff60:4] = r1 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r1 << 0x4
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r3, unique[0x116d0:4])
tmpOV = scarry(r3, unique[0x116d0:4])
r3 = r3 + unique[0x116d0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11420:4] = r3 + 0x0
r3 = *[ram]unique[0x11420:4]

r4 = zext(0x7ff)
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0

unique[0x10000:4] = 0x15 - 0x1
unique[0x10010:4] = r3 >> unique[0x10000:4]
unique[0x10030:4] = unique[0x10010:4] & 0x1
shift_carry = SUBPIECE unique[0x10030:4], 0x0
unique[0x10060:4] = r3 >> 0x15
r3 = r4 & unique[0x10060:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11420:4] = r2 + 0x0
*[ram]unique[0x11420:4] = register[0x2c:4]

goto ram[0x8002d5e:4]

unique[0xfed0:4] = 0x1b0
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
tmpCY = carry(r0, unique[0xfed0:4])
tmpOV = scarry(r0, unique[0xfed0:4])
r3 = r0 + unique[0xfed0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0xff50:4] = 0x20 - 0x4
unique[0xff60:4] = r1 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r1 << 0x4
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r3, unique[0x116d0:4])
tmpOV = scarry(r3, unique[0x116d0:4])
r3 = r3 + unique[0x116d0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11420:4] = r3 + 0x0
r3 = *[ram]unique[0x11420:4]

unique[0xfe90:4] = 0xe0000000
unique[0xfeb0:4] = unique[0xfe90:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfeb0:4], 0x0
r4 = ~unique[0xfe90:4]
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0

unique[0x10000:4] = 0x3 - 0x1
unique[0x10010:4] = r3 >> unique[0x10000:4]
unique[0x10030:4] = unique[0x10010:4] & 0x1
shift_carry = SUBPIECE unique[0x10030:4], 0x0
unique[0x10060:4] = r3 >> 0x3
r3 = r4 & unique[0x10060:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11420:4] = r2 + 0x4
*[ram]unique[0x11420:4] = register[0x2c:4]

unique[0xfed0:4] = 0x1b0
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
tmpCY = carry(r0, unique[0xfed0:4])
tmpOV = scarry(r0, unique[0xfed0:4])
r3 = r0 + unique[0xfed0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0xff50:4] = 0x20 - 0x4
unique[0xff60:4] = r1 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r1 << 0x4
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r3, unique[0x116d0:4])
tmpOV = scarry(r3, unique[0x116d0:4])
r3 = r3 + unique[0x116d0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11420:4] = r3 + 0x0
r3 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x2
shift_carry = CY
r3 = r3 & unique[0xfe50:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11460:4] = r2 + 0x9
unique[0x17690:1] = SUBPIECE r3, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0xfed0:4] = 0x1b0
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
tmpCY = carry(r0, unique[0xfed0:4])
tmpOV = scarry(r0, unique[0xfed0:4])
r3 = r0 + unique[0xfed0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

