unique[0x11440:4] = r0 + 0x1c
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r2 = zext(unique[0x11ef0:2])

r3 = zext(0xf3ff)
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

r2 = r2 & r3
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r0 + 0x1c
unique[0x176d0:2] = SUBPIECE r2, 0x0
*[ram]unique[0x11440:4] = unique[0x176d0:2]

unique[0x11440:4] = r0 + 0x1c
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r2 = zext(unique[0x11ef0:2])

r3 = zext(0xffff)
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0xff50:4] = 0x20 - 0x8
unique[0xff60:4] = r1 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r1 << 0x8
r3 = r3 & unique[0xffb0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

r2 = r2 | r3
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r0 + 0x1c
unique[0x176d0:2] = SUBPIECE r2, 0x0
*[ram]unique[0x11440:4] = unique[0x176d0:2]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x3c:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x38:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x34:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r4 = r1

r5 = r2

r1 = 0x0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

r2 = 0x0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r6 = 0x0
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r0 + 0x20
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r7 = zext(unique[0x11ef0:2])

r12 = zext(0xefff)
tmpNG = r12 s< 0x0
tmpZR = r12 == 0x0

shift_carry = CY
r7 = r7 & r12
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

unique[0x11440:4] = r0 + 0x20
unique[0x176d0:2] = SUBPIECE r7, 0x0
*[ram]unique[0x11440:4] = unique[0x176d0:2]

unique[0x11440:4] = r0 + 0x1c
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r1 = zext(unique[0x11ef0:2])

unique[0x11440:4] = r0 + 0x20
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r2 = zext(unique[0x11ef0:2])

r7 = zext(0xffff)
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

unique[0xff50:4] = 0x20 - 0xc
unique[0xff60:4] = r4 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r4 << 0xc
r6 = r7 & unique[0xffb0:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

r7 = zext(0xcff)
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

r1 = r1 & r7
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

