r1 = 0x0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

r2 = ram[0x8002058:4]

tmpCY = carry(r2, 0x2)
tmpOV = scarry(r2, 0x2)
r2 = r2 + 0x2
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11460:4] = r2 + 0x0
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

r1 = r2

unique[0x11460:4] = r1 + 0x0
unique[0x17690:1] = SUBPIECE r0, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r1 = r0

r2 = 0x0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = 0x0
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
ZR = tmpZR
NG = tmpNG

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x117b0:4] = 0x5 - 0x1
unique[0x117c0:4] = r1 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x5 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x5 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r2 = r1 s>> 0x5
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

tmpCY = 0x1 <= r2
tmpOV = sborrow(r2, 0x1)
unique[0x11d20:4] = r2 - 0x1
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

