mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x3c:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x38:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x34:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r4 = r0

r5 = r1

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r1 = 0x0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x9 <= r5
tmpOV = sborrow(r5, 0x9)
unique[0x11d20:4] = r5 - 0x9
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf870:1] = NG != OV
unique[0xf890:1] = ZR || unique[0xf870:1]
if (unique[0xf890:1]) goto ram[0x8002500:4]

unique[0x11420:4] = r4 + 0xc
r0 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0xa
shift_carry = CY
tmpCY = unique[0xfe50:4] <= r5
tmpOV = sborrow(r5, unique[0xfe50:4])
r6 = r5 - unique[0xfe50:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r7 = r6 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

r6 = 0x7
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r6 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11a40:4] = ~r1
r0 = r0 & unique[0x11a40:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0xa
shift_carry = CY
tmpCY = unique[0xfe50:4] <= r5
tmpOV = sborrow(r5, unique[0xfe50:4])
r6 = r5 - unique[0xfe50:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r6 = r6 + unique[0x116d0:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0x128d0:4] = r6 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r3 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r3 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r0 = r0 | r1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r4 + 0xc
*[ram]unique[0x11420:4] = register[0x20:4]

goto ram[0x800251a:4]

unique[0x11420:4] = r4 + 0x10
r0 = *[ram]unique[0x11420:4]

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r5 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r5 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r5, unique[0x116d0:4])
tmpOV = scarry(r5, unique[0x116d0:4])
r7 = r5 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

r6 = 0x7
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r6 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11a40:4] = ~r1
r0 = r0 & unique[0x11a40:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r5 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r5 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r5, unique[0x116d0:4])
tmpOV = scarry(r5, unique[0x116d0:4])
r6 = r5 + unique[0x116d0:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0x128d0:4] = r6 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r3 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r3 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r0 = r0 | r1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r4 + 0x10
*[ram]unique[0x11420:4] = register[0x20:4]

tmpCY = 0x7 <= r2
tmpOV = sborrow(r2, 0x7)
unique[0x11d20:4] = r2 - 0x7
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf800:1] = NG == OV
if (unique[0xf800:1]) goto ram[0x800253e:4]

unique[0x11420:4] = r4 + 0x34
r0 = *[ram]unique[0x11420:4]

tmpCY = 0x1 <= r2
tmpOV = sborrow(r2, 0x1)
r6 = r2 - 0x1
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xff50:4] = 0x20 - 0x2
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x2
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r7 = r6 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

r6 = 0x1f
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r6 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11a40:4] = ~r1
r0 = r0 & unique[0x11a40:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x1 <= r2
tmpOV = sborrow(r2, 0x1)
r6 = r2 - 0x1
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xff50:4] = 0x20 - 0x2
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x2
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r6 = r6 + unique[0x116d0:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0x128d0:4] = r6 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r5 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r5 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r0 = r0 | r1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r4 + 0x34
*[ram]unique[0x11420:4] = register[0x20:4]

goto ram[0x8002584:4]

tmpCY = 0xd <= r2
tmpOV = sborrow(r2, 0xd)
unique[0x11d20:4] = r2 - 0xd
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf800:1] = NG == OV
if (unique[0xf800:1]) goto ram[0x8002562:4]

unique[0x11420:4] = r4 + 0x30
r0 = *[ram]unique[0x11420:4]

tmpCY = 0x7 <= r2
tmpOV = sborrow(r2, 0x7)
r6 = r2 - 0x7
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xff50:4] = 0x20 - 0x2
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x2
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r7 = r6 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

r6 = 0x1f
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r6 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11a40:4] = ~r1
r0 = r0 & unique[0x11a40:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x7 <= r2
tmpOV = sborrow(r2, 0x7)
r6 = r2 - 0x7
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xff50:4] = 0x20 - 0x2
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x2
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r6 = r6 + unique[0x116d0:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0x128d0:4] = r6 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r5 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r5 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r0 = r0 | r1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r4 + 0x30
*[ram]unique[0x11420:4] = register[0x20:4]

goto ram[0x8002584:4]

unique[0x11420:4] = r4 + 0x2c
r0 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0xd
shift_carry = CY
tmpCY = unique[0xfe50:4] <= r2
tmpOV = sborrow(r2, unique[0xfe50:4])
r6 = r2 - unique[0xfe50:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0xff50:4] = 0x20 - 0x2
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x2
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r7 = r6 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

r6 = 0x1f
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r6 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11a40:4] = ~r1
r0 = r0 & unique[0x11a40:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0xd
shift_carry = CY
tmpCY = unique[0xfe50:4] <= r2
tmpOV = sborrow(r2, unique[0xfe50:4])
r6 = r2 - unique[0xfe50:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0xff50:4] = 0x20 - 0x2
unique[0xff60:4] = r6 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r6 << 0x2
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r6, unique[0x116d0:4])
tmpOV = scarry(r6, unique[0x116d0:4])
r6 = r6 + unique[0x116d0:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0x128d0:4] = r6 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r5 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r1 = r5 << unique[0x128d0:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r0 = r0 | r1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r4 + 0x2c
*[ram]unique[0x11420:4] = register[0x20:4]

mult_addr = sp
r4 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r5 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r6 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r7 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
pc = *[ram]mult_addr
mult_addr = mult_addr + 0x4
sp = mult_addr
unique[0x0:4] = pc & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = pc & 0xfffffffe
return pc

unique[0x11420:4] = r0 + 0x8
r1 = *[ram]unique[0x11420:4]

unique[0xfe90:4] = 0x40000000
unique[0xfeb0:4] = unique[0xfe90:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfeb0:4], 0x0
r1 = r1 | unique[0xfe90:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x24:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r1 = r0

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r1 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfe90:4] = 0x40000000
unique[0xfeb0:4] = unique[0xfe90:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfeb0:4], 0x0
r2 = r2 & unique[0xfe90:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11bf0:1] = r2 == 0x0
if (unique[0x11bf0:1]) goto ram[0x80025a0:4]

r0 = 0x1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

goto ram[0x80025a2:4]

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

unique[0x11bf0:1] = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x80025b0:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x400
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r2 = r2 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x80025b8:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x400
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
unique[0x11a60:4] = ~unique[0xfed0:4]
r2 = r2 & unique[0x11a60:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

unique[0x11bf0:1] = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x80025c6:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x2
shift_carry = CY
r2 = r2 | unique[0xfe50:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x80025ce:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x2
shift_carry = CY
unique[0x11a60:4] = ~unique[0xfe50:4]
r2 = r2 & unique[0x11a60:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r2 = r1

r1 = 0x0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = 0x0
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r0 + 0x4
r1 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0xe000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
unique[0x11a60:4] = ~unique[0xfed0:4]
r1 = r1 & unique[0x11a60:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

tmpCY = 0x1 <= r2
tmpOV = sborrow(r2, 0x1)
r3 = r2 - 0x1
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xff50:4] = 0x20 - 0xd
unique[0xff60:4] = r3 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r3 << 0xd
r1 = r1 | unique[0xffb0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11420:4] = r0 + 0x4
*[ram]unique[0x11420:4] = register[0x24:4]

mult_addr = sp
r4 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
pc = *[ram]mult_addr
mult_addr = mult_addr + 0x4
sp = mult_addr
unique[0x0:4] = pc & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = pc & 0xfffffffe
return pc

unique[0x11bf0:1] = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x80025f4:4]

unique[0x11420:4] = r0 + 0x4
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x800
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r2 = r2 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x4
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x80025fc:4]

unique[0x11420:4] = r0 + 0x4
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x800
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
unique[0x11a60:4] = ~unique[0xfed0:4]
r2 = r2 & unique[0x11a60:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x4
*[ram]unique[0x11420:4] = register[0x28:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r1 = r0

unique[0x11420:4] = r1 + 0x4c
r0 = *[ram]unique[0x11420:4]

unique[0x1a1b0:2] = SUBPIECE r0, 0x0
r0 = zext(unique[0x1a1b0:2])

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r0 = ram[0x80027b8:4]

tmpCY = carry(r0, 0x4)
tmpOV = scarry(r0, 0x4)
r0 = r0 + 0x4
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r0 + 0x0
r0 = *[ram]unique[0x11420:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

unique[0x11bf0:1] = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x800261a:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x100
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r2 = r2 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x8002622:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x100
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
unique[0x11a60:4] = ~unique[0xfed0:4]
r2 = r2 & unique[0x11a60:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

unique[0x11bf0:1] = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8002630:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x200
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r2 = r2 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x8002638:4]

unique[0x11420:4] = r0 + 0x8
r2 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x200
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
unique[0x11a60:4] = ~unique[0xfed0:4]
r2 = r2 & unique[0x11a60:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

unique[0x11bf0:1] = r0 == 0x0
if (unique[0x11bf0:1]) goto ram[0x800264c:4]

r1 = ram[0x80027b8:4]

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x2000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
r1 = r1 | unique[0xfed0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r2 = ram[0x80027c0:4]

unique[0x112a0:4] = r2 + 0x304
*[ram]unique[0x112a0:4] = register[0x24:4]

goto ram[0x800265a:4]

r1 = ram[0x80027b8:4]

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

unique[0xfed0:4] = 0x2000
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
unique[0x11a60:4] = ~unique[0xfed0:4]
r1 = r1 & unique[0x11a60:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r2 = ram[0x80027c0:4]

unique[0x112a0:4] = r2 + 0x304
*[ram]unique[0x112a0:4] = register[0x24:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x3c:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x38:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x34:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r4 = r0

r5 = r2

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r2 = 0x0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r6 = 0x0
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x9 <= r1
tmpOV = sborrow(r1, 0x9)
unique[0x11d20:4] = r1 - 0x9
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf870:1] = NG != OV
unique[0xf890:1] = ZR || unique[0xf870:1]
if (unique[0xf890:1]) goto ram[0x8002690:4]

unique[0x11420:4] = r4 + 0xc
r0 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0xa
shift_carry = CY
tmpCY = unique[0xfe50:4] <= r1
tmpOV = sborrow(r1, unique[0xfe50:4])
r7 = r1 - unique[0xfe50:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r7 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r7 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r7, unique[0x116d0:4])
tmpOV = scarry(r7, unique[0x116d0:4])
r12 = r7 + unique[0x116d0:4]
tmpNG = r12 s< 0x0
tmpZR = r12 == 0x0

r7 = 0x7
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r12 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r7 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r2 = r7 << unique[0x128d0:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11a40:4] = ~r2
r0 = r0 & unique[0x11a40:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0xa
shift_carry = CY
tmpCY = unique[0xfe50:4] <= r1
tmpOV = sborrow(r1, unique[0xfe50:4])
r7 = r1 - unique[0xfe50:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r7 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r7 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r7, unique[0x116d0:4])
tmpOV = scarry(r7, unique[0x116d0:4])
r7 = r7 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

unique[0x128d0:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r3 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r2 = r3 << unique[0x128d0:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

r0 = r0 | r2
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r4 + 0xc
*[ram]unique[0x11420:4] = register[0x20:4]

goto ram[0x80026aa:4]

unique[0x11420:4] = r4 + 0x10
r0 = *[ram]unique[0x11420:4]

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r1 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r1 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r1, unique[0x116d0:4])
tmpOV = scarry(r1, unique[0x116d0:4])
r12 = r1 + unique[0x116d0:4]
tmpNG = r12 s< 0x0
tmpZR = r12 == 0x0

r7 = 0x7
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r12 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r7 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r2 = r7 << unique[0x128d0:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11a40:4] = ~r2
r0 = r0 & unique[0x11a40:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0xff50:4] = 0x20 - 0x1
unique[0xff60:4] = r1 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r1 << 0x1
unique[0x116d0:4] = unique[0xffb0:4]
tmpCY = carry(r1, unique[0x116d0:4])
tmpOV = scarry(r1, unique[0x116d0:4])
r7 = r1 + unique[0x116d0:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

unique[0x128d0:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r3 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r2 = r3 << unique[0x128d0:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

