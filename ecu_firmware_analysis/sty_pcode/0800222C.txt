unique[0x11bf0:1] = r1 == 0x0
if (unique[0x11bf0:1]) goto ram[0x800223e:4]

r2 = ram[0x80022c8:4]

tmpCY = carry(r2, 0x30)
tmpOV = scarry(r2, 0x30)
r2 = r2 + 0x30
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r2 + 0x0
r2 = *[ram]unique[0x11420:4]

r2 = r2 | r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = ram[0x80022c8:4]

tmpCY = carry(r3, 0x30)
tmpOV = scarry(r3, 0x30)
r3 = r3 + 0x30
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r3 + 0x0
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x800224c:4]

r2 = ram[0x80022c8:4]

tmpCY = carry(r2, 0x30)
tmpOV = scarry(r2, 0x30)
r2 = r2 + 0x30
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r2 + 0x0
r2 = *[ram]unique[0x11420:4]

unique[0x11a40:4] = ~r0
r2 = r2 & unique[0x11a40:4]
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = ram[0x80022c8:4]

tmpCY = carry(r3, 0x30)
tmpOV = scarry(r3, 0x30)
r3 = r3 + 0x30
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r3 + 0x0
*[ram]unique[0x11420:4] = register[0x28:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

tmpCY = 0x1 <= r0
tmpOV = sborrow(r0, 0x1)
unique[0x11d20:4] = r0 - 0x1
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6c0:1] = ZR == 0x0
if (unique[0xf6c0:1]) goto ram[0x8002264:4]

r1 = ram[0x80022c8:4]

tmpCY = carry(r1, 0x3c)
tmpOV = scarry(r1, 0x3c)
r1 = r1 + 0x3c
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x8
shift_carry = CY
r1 = r1 | unique[0xfe50:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r2 = ram[0x80022c8:4]

tmpCY = carry(r2, 0x3c)
tmpOV = scarry(r2, 0x3c)
r2 = r2 + 0x3c
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r2 + 0x0
*[ram]unique[0x11420:4] = register[0x24:4]

goto ram[0x8002274:4]

r1 = ram[0x80022c8:4]

tmpCY = carry(r1, 0x3c)
tmpOV = scarry(r1, 0x3c)
r1 = r1 + 0x3c
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x8
shift_carry = CY
unique[0x11a60:4] = ~unique[0xfe50:4]
r1 = r1 & unique[0x11a60:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r2 = ram[0x80022c8:4]

tmpCY = carry(r2, 0x3c)
tmpOV = scarry(r2, 0x3c)
r2 = r2 + 0x3c
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r2 + 0x0
*[ram]unique[0x11420:4] = register[0x24:4]

