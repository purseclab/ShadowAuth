mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x3c:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x38:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x34:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r3 = 0x0
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
ZR = tmpZR
NG = tmpNG

r4 = 0x0
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x126c0:4] = 0x1d - 0x1
unique[0x126d0:4] = r1 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = 0x1d == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = 0x1d != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r5 = r1 << 0x1d
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x12850:4] = 0x1b
unique[0x127a0:4] = unique[0x12850:4] - 0x1
unique[0x127b0:4] = r5 >> unique[0x127a0:4]
unique[0x127d0:4] = unique[0x127b0:4] & 0x1
unique[0x127e0:1] = unique[0x12850:4] == 0x0
unique[0x127f0:1] = unique[0x127e0:1] && CY
unique[0x12800:1] = unique[0x12850:4] != 0x0
unique[0x12810:1] = unique[0x127d0:4] != 0x0
unique[0x12820:1] = unique[0x12800:1] && unique[0x12810:1]
tmpCY = unique[0x127f0:1] || unique[0x12820:1]
r5 = r5 >> 0x1b
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x128d0:4] = r5 & 0xff
unique[0x126c0:4] = unique[0x128d0:4] - 0x1
unique[0x126d0:4] = r2 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x128d0:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x128d0:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r3 = r2 << unique[0x128d0:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x117b0:4] = 0x3 - 0x1
unique[0x117c0:4] = r1 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x3 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x3 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r6 = r1 s>> 0x3
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0x20
shift_carry = CY
tmpCY = carry(r0, unique[0xfe50:4])
tmpOV = scarry(r0, unique[0xfe50:4])
r5 = r0 + unique[0xfe50:4]
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0

unique[0x120d0:4] = r6 << 0x2
unique[0x120f0:4] = r5 + unique[0x120d0:4]
r5 = *[ram]unique[0x120f0:4]

unique[0x126c0:4] = 0x1d - 0x1
unique[0x126d0:4] = r1 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = 0x1d == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = 0x1d != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r6 = r1 << 0x1d
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x12850:4] = 0x1b
unique[0x127a0:4] = unique[0x12850:4] - 0x1
unique[0x127b0:4] = r6 >> unique[0x127a0:4]
unique[0x127d0:4] = unique[0x127b0:4] & 0x1
unique[0x127e0:1] = unique[0x12850:4] == 0x0
unique[0x127f0:1] = unique[0x127e0:1] && CY
unique[0x12800:1] = unique[0x12850:4] != 0x0
unique[0x12810:1] = unique[0x127d0:4] != 0x0
unique[0x12820:1] = unique[0x12800:1] && unique[0x12810:1]
tmpCY = unique[0x127f0:1] || unique[0x12820:1]
r7 = r6 >> 0x1b
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r6 = 0xf
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x12780:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x12780:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x12780:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x12780:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r6 = r6 << unique[0x12780:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x11a40:4] = ~r6
r5 = r5 & unique[0x11a40:4]
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x117b0:4] = 0x3 - 0x1
unique[0x117c0:4] = r1 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x3 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x3 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r7 = r1 s>> 0x3
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0x20
shift_carry = CY
tmpCY = carry(r0, unique[0xfe50:4])
tmpOV = scarry(r0, unique[0xfe50:4])
r6 = r0 + unique[0xfe50:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0

unique[0x17720:4] = r7 << 0x2
unique[0x17740:4] = r6 + unique[0x17720:4]
*[ram]unique[0x17740:4] = register[0x34:4]

unique[0x117b0:4] = 0x3 - 0x1
unique[0x117c0:4] = r1 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x3 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x3 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r6 = r1 s>> 0x3
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0x20
shift_carry = CY
tmpCY = carry(r0, unique[0xfe50:4])
tmpOV = scarry(r0, unique[0xfe50:4])
r5 = r0 + unique[0xfe50:4]
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0

unique[0x120d0:4] = r6 << 0x2
unique[0x120f0:4] = r5 + unique[0x120d0:4]
r5 = *[ram]unique[0x120f0:4]

shift_carry = CY
r4 = r5 | r3
tmpCY = shift_carry
tmpOV = OV
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0

unique[0x117b0:4] = 0x3 - 0x1
unique[0x117c0:4] = r1 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x3 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x3 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r6 = r1 s>> 0x3
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0x20
shift_carry = CY
tmpCY = carry(r0, unique[0xfe50:4])
tmpOV = scarry(r0, unique[0xfe50:4])
r5 = r0 + unique[0xfe50:4]
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0

unique[0x17720:4] = r6 << 0x2
unique[0x17740:4] = r5 + unique[0x17720:4]
*[ram]unique[0x17740:4] = register[0x30:4]

mult_addr = sp
r4 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r5 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r6 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r7 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
pc = *[ram]mult_addr
mult_addr = mult_addr + 0x4
sp = mult_addr
unique[0x0:4] = pc & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = pc & 0xfffffffe
return pc

r0 = r0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x126c0:4] = 0x10 - 0x1
unique[0x126d0:4] = r0 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = 0x10 == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = 0x10 != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r0 = r0 << 0x10
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x127a0:1] = 0x20 - 0x1
unique[0x127b0:4] = r0 >> unique[0x127a0:1]
unique[0x127d0:4] = unique[0x127b0:4] & 0x1
unique[0x127e0:1] = 0x20 == 0x0
unique[0x127f0:1] = unique[0x127e0:1] && CY
unique[0x12800:1] = 0x20 != 0x0
unique[0x12810:1] = unique[0x127d0:4] != 0x0
unique[0x12820:1] = unique[0x12800:1] && unique[0x12810:1]
tmpCY = unique[0x127f0:1] || unique[0x12820:1]
r0 = r0 >> 0x20
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x12850:4] = 0x10
unique[0x127a0:4] = unique[0x12850:4] - 0x1
unique[0x127b0:4] = r0 >> unique[0x127a0:4]
unique[0x127d0:4] = unique[0x127b0:4] & 0x1
unique[0x127e0:1] = unique[0x12850:4] == 0x0
unique[0x127f0:1] = unique[0x127e0:1] && CY
unique[0x12800:1] = unique[0x12850:4] != 0x0
unique[0x12810:1] = unique[0x127d0:4] != 0x0
unique[0x12820:1] = unique[0x12800:1] && unique[0x12810:1]
tmpCY = unique[0x127f0:1] || unique[0x12820:1]
r0 = r0 >> 0x10
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x117b0:1] = 0x20 - 0x1
unique[0x117c0:4] = r0 s>> unique[0x117b0:1]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x20 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x20 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r0 = r0 s>> 0x20
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x117b0:4] = 0x10 - 0x1
unique[0x117c0:4] = r0 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x10 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x10 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r0 = r0 s>> 0x10
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = carry(r0, r0)
tmpOV = scarry(r0, r0)
r0 = r0 + r0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = carry(r0, 0x0)
tmpOV = scarry(r0, 0x0)
r0 = r0 + 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r4 = 0x0
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
ZR = tmpZR
NG = tmpNG

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x0 <= r0
tmpOV = sborrow(r0, 0x0)
unique[0x11d20:4] = r0 - 0x0
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r0 = ram[0x8002058:4]

unique[0x11420:4] = r0 + 0x0
r0 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x1
shift_carry = CY
r0 = r0 | unique[0xfe50:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0

r1 = ram[0x8002058:4]

unique[0x11420:4] = r1 + 0x0
*[ram]unique[0x11420:4] = register[0x20:4]

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r1 = ram[0x8002058:4]

tmpCY = carry(r1, 0x8)
tmpOV = scarry(r1, 0x8)
r1 = r1 + 0x8
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r1 + 0x0
*[ram]unique[0x11420:4] = register[0x20:4]

r0 = ram[0x8002058:4]

unique[0x11420:4] = r0 + 0x0
r0 = *[ram]unique[0x11420:4]

r1 = ram[0x800205c:4]

r0 = r0 & r1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r1 = ram[0x8002058:4]

unique[0x11420:4] = r1 + 0x0
*[ram]unique[0x11420:4] = register[0x20:4]

r0 = ram[0x8002060:4]

tmpCY = carry(r1, 0x4)
tmpOV = scarry(r1, 0x4)
r1 = r1 + 0x4
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r1 + 0x0
*[ram]unique[0x11420:4] = register[0x20:4]

r0 = ram[0x8002064:4]

r1 = ram[0x8002058:4]

tmpCY = carry(r1, 0x84)
tmpOV = scarry(r1, 0x84)
r1 = r1 + 0x84
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r1 + 0x0
*[ram]unique[0x11420:4] = register[0x20:4]

r0 = ram[0x8002060:4]

