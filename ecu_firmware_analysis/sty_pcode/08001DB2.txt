r1 = ram[0x8002068:4]

unique[0x11420:4] = r1 + 0x60
*[ram]unique[0x11420:4] = register[0x20:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

unique[0x126c0:4] = 0x6 - 0x1
unique[0x126d0:4] = r0 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = 0x6 == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = 0x6 != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r2 = r0 << 0x6
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0xff50:4] = 0x20 - 0x1c
unique[0xff60:4] = r1 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r1 << 0x1c
r2 = r2 | unique[0xffb0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

r3 = ram[0x8002058:4]

