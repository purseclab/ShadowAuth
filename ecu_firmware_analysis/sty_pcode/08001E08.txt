r2 = r0

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = ram[0x8002058:4]

tmpCY = carry(r3, 0x8)
tmpOV = scarry(r3, 0x8)
r3 = r3 + 0x8
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r3 + 0x0
r0 = *[ram]unique[0x11420:4]

unique[0xfe90:4] = 0xf8000000
unique[0xfeb0:4] = unique[0xfe90:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfeb0:4], 0x0
unique[0x11a60:4] = ~unique[0xfe90:4]
r0 = r0 & unique[0x11a60:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0

shift_carry = CY
r3 = r2 | r1
tmpCY = shift_carry
tmpOV = OV
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

r0 = r0 | r3
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = ram[0x8002058:4]

tmpCY = carry(r3, 0x8)
tmpOV = scarry(r3, 0x8)
r3 = r3 + 0x8
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r3 + 0x0
*[ram]unique[0x11420:4] = register[0x20:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r1 = r0

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r2 = ram[0x8002058:4]

tmpCY = carry(r2, 0x8)
tmpOV = scarry(r2, 0x8)
r2 = r2 + 0x8
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r2 + 0x0
r0 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x3
shift_carry = CY
unique[0x11a60:4] = ~unique[0xfe50:4]
r0 = r0 & unique[0x11a60:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0

r0 = r0 | r1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r2 + 0x0
*[ram]unique[0x11420:4] = register[0x20:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r0 = ram[0x8002058:4]

tmpCY = carry(r0, 0x8)
tmpOV = scarry(r0, 0x8)
r0 = r0 + 0x8
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0x11420:4] = r0 + 0x0
r0 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0xc
shift_carry = CY
r0 = r0 & unique[0xfe50:4]
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r1 = r0

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

