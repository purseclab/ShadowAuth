r1 = 0x0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11460:4] = r0 + 0x6
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x11460:4] = r0 + 0x7
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x11460:4] = r0 + 0x8
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x11460:4] = r0 + 0x9
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x11460:4] = r0 + 0xa
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x11460:4] = r0 + 0xb
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x11460:4] = r0 + 0x2
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

unique[0x11460:4] = r0 + 0x3
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

r1 = 0x3
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11460:4] = r0 + 0x4
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

r1 = 0x2
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11460:4] = r0 + 0x5
unique[0x17690:1] = SUBPIECE r1, 0x0
*[ram]unique[0x11460:4] = unique[0x17690:1]

r1 = 0x1
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r0 + 0x0
unique[0x176d0:2] = SUBPIECE r1, 0x0
*[ram]unique[0x11440:4] = unique[0x176d0:2]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r1 = ram[0x8002c14:4]

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

unique[0xfe50:4] = 0x1
shift_carry = CY
r1 = r1 | unique[0xfe50:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

r2 = ram[0x8002c14:4]

unique[0x11420:4] = r2 + 0x0
*[ram]unique[0x11420:4] = register[0x24:4]

r1 = r2

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

r2 = zext(0x3f0e)
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0

unique[0x11a40:4] = ~r2
r1 = r1 & unique[0x11a40:4]
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

r2 = ram[0x8002c14:4]

unique[0x11420:4] = r2 + 0x0
*[ram]unique[0x11420:4] = register[0x24:4]

r1 = r2

unique[0x11420:4] = r1 + 0x0
r1 = *[ram]unique[0x11420:4]

unique[0xff50:4] = 0x20 - 0x8
unique[0xff60:4] = r0 >> unique[0xff50:4]
unique[0xff80:4] = unique[0xff60:4] & 0x1
shift_carry = SUBPIECE unique[0xff80:4], 0x0
unique[0xffb0:4] = r0 << 0x8
r1 = r1 | unique[0xffb0:4]
tmpCY = shift_carry
tmpOV = OV
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0

unique[0x11420:4] = r2 + 0x0
*[ram]unique[0x11420:4] = register[0x24:4]

r1 = r2

