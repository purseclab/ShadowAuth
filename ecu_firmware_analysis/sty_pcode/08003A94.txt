mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x34:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r4 = 0x0
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = 0x0
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x117b0:4] = 0x4 - 0x1
unique[0x117c0:4] = r1 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x4 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x4 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r4 = r1 s>> 0x4
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r5 = 0x1
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x12780:4] = r4 & 0xff
unique[0x126c0:4] = unique[0x12780:4] - 0x1
unique[0x126d0:4] = r5 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x12780:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x12780:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r5 = r5 << unique[0x12780:4]
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x1a1b0:2] = SUBPIECE r5, 0x0
r3 = zext(unique[0x1a1b0:2])

unique[0x11bf0:1] = r2 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8003ad0:4]

unique[0x11440:4] = r0 + 0x4
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r5 = zext(unique[0x11ef0:2])

r5 = r5 | r3
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r0 + 0x4
unique[0x176d0:2] = SUBPIECE r5, 0x0
*[ram]unique[0x11440:4] = unique[0x176d0:2]

goto ram[0x8003ad6:4]

tmpCY = carry(r0, 0x0)
tmpOV = scarry(r0, 0x0)
r0 = r0 + 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r1 = r1 & r0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x0 <= r0
tmpOV = sborrow(r0, 0x0)
r0 = r0 - 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r0 = r0 & r0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x0 <= r4
tmpOV = sborrow(r4, 0x0)
r4 = r4 - 0x0
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r0 = r0 & r0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = carry(r4, 0x0)
tmpOV = scarry(r4, 0x0)
r4 = r4 + 0x0
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r1 = r1 & r0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11480:4] = r0 + r0
*[ram]unique[0x11480:4] = register[0x20:4]

r1 = r1 & r0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11480:4] = r0 + r0
unique[0x176b0:1] = SUBPIECE r0, 0x0
*[ram]unique[0x11480:4] = unique[0x176b0:1]

r1 = r1 & r0
tmpNG = r1 s< 0x0
tmpZR = r1 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x8 <= r0
tmpOV = sborrow(r0, 0x8)
r0 = r0 - 0x8
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

r2 = r2 & r0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x117b0:4] = 0x8 - 0x1
unique[0x117c0:4] = r0 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x8 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x8 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r0 = r0 s>> 0x8
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x126c0:4] = 0x1 - 0x1
unique[0x126d0:4] = r7 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = 0x1 == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = 0x1 != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r2 = r7 << 0x1
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r4 = 0x0
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x126c0:4] = 0x3 - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = 0x3 == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = 0x3 != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r4 = r6 << 0x3
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r0 + 0x4
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r5 = zext(unique[0x11ef0:2])

unique[0x11a40:4] = ~r3
r5 = r5 & unique[0x11a40:4]
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r0 + 0x4
unique[0x176d0:2] = SUBPIECE r5, 0x0
*[ram]unique[0x11440:4] = unique[0x176d0:2]

mult_addr = sp
r4 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
r5 = *[ram]mult_addr
mult_addr = mult_addr + 0x4
pc = *[ram]mult_addr
mult_addr = mult_addr + 0x4
sp = mult_addr
unique[0x0:4] = pc & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = pc & 0xfffffffe
return pc

r2 = r0

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r2 + 0x8
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r3 = zext(unique[0x11ef0:2])

r3 = r3 & r1
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11bf0:1] = r3 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8003ae6:4]

r0 = 0x1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

goto ram[0x8003ae8:4]

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r2 = ~r1
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11440:4] = r0 + 0x8
unique[0x176d0:2] = SUBPIECE r2, 0x0
*[ram]unique[0x11440:4] = unique[0x176d0:2]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x3c:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x38:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x34:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r2 = r0

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

r4 = 0x0
tmpNG = r4 s< 0x0
tmpZR = r4 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = 0x0
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
ZR = tmpZR
NG = tmpNG

r5 = 0x0
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0xfe50:4] = 0xf
shift_carry = CY
r7 = r1 & unique[0xfe50:4]
tmpNG = r7 s< 0x0
tmpZR = r7 == 0x0

r6 = 0x1
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x12780:4] = r7 & 0xff
unique[0x126c0:4] = unique[0x12780:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x12780:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x12780:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r6 = r6 << unique[0x12780:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x1a1b0:2] = SUBPIECE r6, 0x0
r4 = zext(unique[0x1a1b0:2])

unique[0x117b0:4] = 0x4 - 0x1
unique[0x117c0:4] = r1 s>> unique[0x117b0:4]
unique[0x117e0:4] = unique[0x117c0:4] & 0x1
unique[0x117f0:1] = 0x4 == 0x0
unique[0x11800:1] = unique[0x117f0:1] && CY
unique[0x11810:1] = 0x4 != 0x0
unique[0x11820:1] = unique[0x117e0:4] != 0x0
unique[0x11830:1] = unique[0x11810:1] && unique[0x11820:1]
tmpCY = unique[0x11800:1] || unique[0x11830:1]
r3 = r1 s>> 0x4
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

r6 = 0x1
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x12780:4] = r3 & 0xff
unique[0x126c0:4] = unique[0x12780:4] - 0x1
unique[0x126d0:4] = r6 << unique[0x126c0:4]
unique[0x126f0:4] = unique[0x126d0:4] & 0x80000000
unique[0x12700:1] = unique[0x12780:4] == 0x0
unique[0x12710:1] = unique[0x12700:1] && CY
unique[0x12720:1] = unique[0x12780:4] != 0x0
unique[0x12730:1] = unique[0x126f0:4] != 0x0
unique[0x12740:1] = unique[0x12720:1] && unique[0x12730:1]
tmpCY = unique[0x12710:1] || unique[0x12740:1]
r6 = r6 << unique[0x12780:4]
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG

unique[0x1a1b0:2] = SUBPIECE r6, 0x0
r3 = zext(unique[0x1a1b0:2])

unique[0x11440:4] = r2 + 0x4
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r6 = zext(unique[0x11ef0:2])

shift_carry = CY
r5 = r6 & r3
tmpNG = r5 s< 0x0
tmpZR = r5 == 0x0

unique[0x11440:4] = r2 + 0x8
unique[0x11ef0:2] = *[ram]unique[0x11440:4]
r6 = zext(unique[0x11ef0:2])

r6 = r6 & r4
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11bf0:1] = r6 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8003b20:4]

unique[0x11bf0:1] = r5 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8003b20:4]

r0 = 0x1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

goto ram[0x8003b22:4]

