r2 = 0x0
tmpNG = r2 s< 0x0
tmpZR = r2 == 0x0
ZR = tmpZR
NG = tmpNG

r3 = ram[0x8003074:4]

tmpCY = r3 <= r1
tmpOV = sborrow(r1, r3)
unique[0x11d80:4] = r1 - r3
tmpNG = unique[0x11d80:4] s< 0x0
tmpZR = unique[0x11d80:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6c0:1] = ZR == 0x0
if (unique[0xf6c0:1]) goto ram[0x8002fec:4]

r3 = 0x0
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r0 + 0x18
*[ram]unique[0x11420:4] = register[0x2c:4]

goto ram[0x8003010:4]

unique[0xff10:4] = 0x0
unique[0xff30:4] = 0x13
unique[0x19d20:4] = unique[0xff10:4] + unique[0xff30:4]
unique[0x19d40:4] = 0x1f - unique[0x19d20:4]
r2 = r1 << unique[0x19d40:4]
unique[0x19d40:4] = 0x1f - unique[0xff30:4]
r2 = r2 >> unique[0x19d40:4]

unique[0xfe90:4] = 0x2000000
unique[0xfeb0:4] = unique[0xfe90:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfeb0:4], 0x0
r3 = r1 & unique[0xfe90:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11bf0:1] = r3 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8002ffa:4]

unique[0x11420:4] = r0 + 0xc
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x8003010:4]

unique[0xfe90:4] = 0x4000000
unique[0xfeb0:4] = unique[0xfe90:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfeb0:4], 0x0
r3 = r1 & unique[0xfe90:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11bf0:1] = r3 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8003004:4]

unique[0x11420:4] = r0 + 0x10
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x8003010:4]

unique[0xfe90:4] = 0x8000000
unique[0xfeb0:4] = unique[0xfe90:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfeb0:4], 0x0
r3 = r1 & unique[0xfe90:4]
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11bf0:1] = r3 == 0x0
if (unique[0x11bf0:1]) goto ram[0x800300e:4]

unique[0x11420:4] = r0 + 0x8
*[ram]unique[0x11420:4] = register[0x28:4]

goto ram[0x8003010:4]

unique[0x11420:4] = r0 + 0x4
*[ram]unique[0x11420:4] = register[0x28:4]

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

r2 = r0

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

shift_carry = CY
r3 = r2 & r1
tmpNG = r3 s< 0x0
tmpZR = r3 == 0x0

unique[0x11bf0:1] = r3 == 0x0
if (unique[0x11bf0:1]) goto ram[0x8003020:4]

r0 = 0x1
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

goto ram[0x8003022:4]

r0 = 0x0
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x0:4] = lr & 0x1
ISAModeSwitch = unique[0x0:4] != 0x0
TB = ISAModeSwitch
pc = lr & 0xfffffffe
return pc

mult_addr = sp
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x58:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x38:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x34:4]
mult_addr = mult_addr - 0x4
*[ram]mult_addr = register[0x30:4]
sp = mult_addr

r4 = r0

r5 = r1

r6 = 0x0
tmpNG = r6 s< 0x0
tmpZR = r6 == 0x0
ZR = tmpZR
NG = tmpNG

unique[0x11420:4] = r4 + 0x14
r0 = *[ram]unique[0x11420:4]

r0 = r0 & r5
tmpNG = r0 s< 0x0
tmpZR = r0 == 0x0
ZR = tmpZR
NG = tmpNG

tmpCY = 0x0 <= r0
tmpOV = sborrow(r0, 0x0)
unique[0x11d20:4] = r0 - 0x0
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6a0:1] = ZR != 0x0
if (unique[0xf6a0:1]) goto ram[0x800311a:4]

unique[0xfed0:4] = 0x100
unique[0xfef0:4] = unique[0xfed0:4] >> 0x1f
shift_carry = SUBPIECE unique[0xfef0:4], 0x0
tmpCY = unique[0xfed0:4] <= r5
tmpOV = sborrow(r5, unique[0xfed0:4])
unique[0x11d40:4] = r5 - unique[0xfed0:4]
tmpNG = unique[0x11d40:4] s< 0x0
tmpZR = unique[0x11d40:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6a0:1] = ZR != 0x0
if (unique[0xf6a0:1]) goto ram[0x800310e:4]

unique[0xf830:1] = !ZR
unique[0xf840:1] = NG == OV
unique[0xf860:1] = unique[0xf830:1] && unique[0xf840:1]
if (unique[0xf860:1]) goto ram[0x8003078:4]

tmpCY = 0x8 <= r5
tmpOV = sborrow(r5, 0x8)
unique[0x11d20:4] = r5 - 0x8
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6a0:1] = ZR != 0x0
if (unique[0xf6a0:1]) goto ram[0x80030c6:4]

unique[0xf830:1] = !ZR
unique[0xf840:1] = NG == OV
unique[0xf860:1] = unique[0xf830:1] && unique[0xf840:1]
if (unique[0xf860:1]) goto ram[0x8003050:4]

tmpCY = 0x1 <= r5
tmpOV = sborrow(r5, 0x1)
unique[0x11d20:4] = r5 - 0x1
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6a0:1] = ZR != 0x0
if (unique[0xf6a0:1]) goto ram[0x80030a2:4]

tmpCY = 0x2 <= r5
tmpOV = sborrow(r5, 0x2)
unique[0x11d20:4] = r5 - 0x2
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6a0:1] = ZR != 0x0
if (unique[0xf6a0:1]) goto ram[0x80030ae:4]

tmpCY = 0x4 <= r5
tmpOV = sborrow(r5, 0x4)
unique[0x11d20:4] = r5 - 0x4
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

unique[0xf6c0:1] = ZR == 0x0
if (unique[0xf6c0:1]) goto ram[0x800314e:4]

goto ram[0x80030ba:4]

tmpCY = 0x10 <= r5
tmpOV = sborrow(r5, 0x10)
unique[0x11d20:4] = r5 - 0x10
tmpNG = unique[0x11d20:4] s< 0x0
tmpZR = unique[0x11d20:4] == 0x0
CY = tmpCY
ZR = tmpZR
NG = tmpNG
OV = tmpOV

